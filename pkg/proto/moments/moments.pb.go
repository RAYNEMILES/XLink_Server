// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: moments/moments.proto

package moments

import (
	admin_cms "Open_IM/pkg/proto/admin_cms"
	news "Open_IM/pkg/proto/news"
	sdk_ws "Open_IM/pkg/proto/sdk_ws"
	short_video "Open_IM/pkg/proto/short_video"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type Moment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorID                 string                      `protobuf:"bytes,1,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	MomentID                  string                      `protobuf:"bytes,2,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	MContentText              string                      `protobuf:"bytes,3,opt,name=MContentText,proto3" json:"MContentText,omitempty"`
	MContentImagesArray       string                      `protobuf:"bytes,4,opt,name=MContentImagesArray,proto3" json:"MContentImagesArray,omitempty"`
	MContentVideosArray       string                      `protobuf:"bytes,5,opt,name=MContentVideosArray,proto3" json:"MContentVideosArray,omitempty"`
	MLikesCount               int32                       `protobuf:"varint,6,opt,name=MLikesCount,proto3" json:"MLikesCount,omitempty"`
	MCommentsCount            int32                       `protobuf:"varint,7,opt,name=MCommentsCount,proto3" json:"MCommentsCount,omitempty"`
	MRepostCount              int64                       `protobuf:"varint,8,opt,name=MRepostCount,proto3" json:"MRepostCount,omitempty"`
	MCreateTime               int64                       `protobuf:"varint,9,opt,name=MCreateTime,proto3" json:"MCreateTime,omitempty"`
	MUpdateTime               int64                       `protobuf:"varint,10,opt,name=MUpdateTime,proto3" json:"MUpdateTime,omitempty"`
	OrignalCreatorID          string                      `protobuf:"bytes,11,opt,name=OrignalCreatorID,proto3" json:"OrignalCreatorID,omitempty"`
	OrignalID                 string                      `protobuf:"bytes,12,opt,name=OrignalID,proto3" json:"OrignalID,omitempty"`
	IsReposted                bool                        `protobuf:"varint,13,opt,name=IsReposted,proto3" json:"IsReposted,omitempty"`
	DeleteTime                int64                       `protobuf:"varint,14,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
	DeletedBy                 string                      `protobuf:"bytes,15,opt,name=DeletedBy,proto3" json:"DeletedBy,omitempty"`
	Status                    int32                       `protobuf:"varint,16,opt,name=Status,proto3" json:"Status,omitempty"`
	Privacy                   int32                       `protobuf:"varint,17,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	UserID                    string                      `protobuf:"bytes,18,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName                  string                      `protobuf:"bytes,19,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserProfileImg            string                      `protobuf:"bytes,20,opt,name=UserProfileImg,proto3" json:"UserProfileImg,omitempty"`
	MContentThumbnilArray     string                      `protobuf:"bytes,21,opt,name=MContentThumbnilArray,proto3" json:"MContentThumbnilArray,omitempty"`
	ArticleID                 int64                       `protobuf:"varint,22,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
	ArticleDetailsInMoment    *ArticleDetailsInMoment     `protobuf:"bytes,23,opt,name=ArticleDetailsInMoment,proto3" json:"ArticleDetailsInMoment,omitempty"`
	MContentImagesArrayV2     []*MomentImageRequestObject `protobuf:"bytes,24,rep,name=MContentImagesArrayV2,proto3" json:"MContentImagesArrayV2,omitempty"`
	MContentVideosArrayV2     []*MomentVideoRequestObject `protobuf:"bytes,25,rep,name=MContentVideosArrayV2,proto3" json:"MContentVideosArrayV2,omitempty"`
	OriginalCreatorName       string                      `protobuf:"bytes,26,opt,name=OriginalCreatorName,proto3" json:"OriginalCreatorName,omitempty"`
	OriginalCreatorProfileImg string                      `protobuf:"bytes,27,opt,name=OriginalCreatorProfileImg,proto3" json:"OriginalCreatorProfileImg,omitempty"`
	WoomFileID                string                      `protobuf:"bytes,28,opt,name=WoomFileID,proto3" json:"WoomFileID,omitempty"`
	WoomDetails               *short_video.ShortVideoInfo `protobuf:"bytes,29,opt,name=WoomDetails,proto3" json:"WoomDetails,omitempty"`
}

func (x *Moment) Reset() {
	*x = Moment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Moment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Moment) ProtoMessage() {}

func (x *Moment) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Moment.ProtoReflect.Descriptor instead.
func (*Moment) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{1}
}

func (x *Moment) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *Moment) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *Moment) GetMContentText() string {
	if x != nil {
		return x.MContentText
	}
	return ""
}

func (x *Moment) GetMContentImagesArray() string {
	if x != nil {
		return x.MContentImagesArray
	}
	return ""
}

func (x *Moment) GetMContentVideosArray() string {
	if x != nil {
		return x.MContentVideosArray
	}
	return ""
}

func (x *Moment) GetMLikesCount() int32 {
	if x != nil {
		return x.MLikesCount
	}
	return 0
}

func (x *Moment) GetMCommentsCount() int32 {
	if x != nil {
		return x.MCommentsCount
	}
	return 0
}

func (x *Moment) GetMRepostCount() int64 {
	if x != nil {
		return x.MRepostCount
	}
	return 0
}

func (x *Moment) GetMCreateTime() int64 {
	if x != nil {
		return x.MCreateTime
	}
	return 0
}

func (x *Moment) GetMUpdateTime() int64 {
	if x != nil {
		return x.MUpdateTime
	}
	return 0
}

func (x *Moment) GetOrignalCreatorID() string {
	if x != nil {
		return x.OrignalCreatorID
	}
	return ""
}

func (x *Moment) GetOrignalID() string {
	if x != nil {
		return x.OrignalID
	}
	return ""
}

func (x *Moment) GetIsReposted() bool {
	if x != nil {
		return x.IsReposted
	}
	return false
}

func (x *Moment) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *Moment) GetDeletedBy() string {
	if x != nil {
		return x.DeletedBy
	}
	return ""
}

func (x *Moment) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Moment) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *Moment) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Moment) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Moment) GetUserProfileImg() string {
	if x != nil {
		return x.UserProfileImg
	}
	return ""
}

func (x *Moment) GetMContentThumbnilArray() string {
	if x != nil {
		return x.MContentThumbnilArray
	}
	return ""
}

func (x *Moment) GetArticleID() int64 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

func (x *Moment) GetArticleDetailsInMoment() *ArticleDetailsInMoment {
	if x != nil {
		return x.ArticleDetailsInMoment
	}
	return nil
}

func (x *Moment) GetMContentImagesArrayV2() []*MomentImageRequestObject {
	if x != nil {
		return x.MContentImagesArrayV2
	}
	return nil
}

func (x *Moment) GetMContentVideosArrayV2() []*MomentVideoRequestObject {
	if x != nil {
		return x.MContentVideosArrayV2
	}
	return nil
}

func (x *Moment) GetOriginalCreatorName() string {
	if x != nil {
		return x.OriginalCreatorName
	}
	return ""
}

func (x *Moment) GetOriginalCreatorProfileImg() string {
	if x != nil {
		return x.OriginalCreatorProfileImg
	}
	return ""
}

func (x *Moment) GetWoomFileID() string {
	if x != nil {
		return x.WoomFileID
	}
	return ""
}

func (x *Moment) GetWoomDetails() *short_video.ShortVideoInfo {
	if x != nil {
		return x.WoomDetails
	}
	return nil
}

type MomentImageRequestObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl    string `protobuf:"bytes,1,opt,name=ImageUrl,proto3" json:"ImageUrl,omitempty"`
	SnapShotUrl string `protobuf:"bytes,2,opt,name=SnapShotUrl,proto3" json:"SnapShotUrl,omitempty"`
	ImageWidth  int32  `protobuf:"varint,3,opt,name=ImageWidth,proto3" json:"ImageWidth,omitempty"`
	ImageHeight int32  `protobuf:"varint,4,opt,name=ImageHeight,proto3" json:"ImageHeight,omitempty"`
}

func (x *MomentImageRequestObject) Reset() {
	*x = MomentImageRequestObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MomentImageRequestObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentImageRequestObject) ProtoMessage() {}

func (x *MomentImageRequestObject) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentImageRequestObject.ProtoReflect.Descriptor instead.
func (*MomentImageRequestObject) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{2}
}

func (x *MomentImageRequestObject) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *MomentImageRequestObject) GetSnapShotUrl() string {
	if x != nil {
		return x.SnapShotUrl
	}
	return ""
}

func (x *MomentImageRequestObject) GetImageWidth() int32 {
	if x != nil {
		return x.ImageWidth
	}
	return 0
}

func (x *MomentImageRequestObject) GetImageHeight() int32 {
	if x != nil {
		return x.ImageHeight
	}
	return 0
}

type MomentVideoRequestObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoUrl    string `protobuf:"bytes,1,opt,name=VideoUrl,proto3" json:"VideoUrl,omitempty"`
	SnapShotUrl string `protobuf:"bytes,2,opt,name=SnapShotUrl,proto3" json:"SnapShotUrl,omitempty"`
	VideoWidth  int32  `protobuf:"varint,3,opt,name=VideoWidth,proto3" json:"VideoWidth,omitempty"`
	VideoHeight int32  `protobuf:"varint,4,opt,name=VideoHeight,proto3" json:"VideoHeight,omitempty"`
}

func (x *MomentVideoRequestObject) Reset() {
	*x = MomentVideoRequestObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MomentVideoRequestObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentVideoRequestObject) ProtoMessage() {}

func (x *MomentVideoRequestObject) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentVideoRequestObject.ProtoReflect.Descriptor instead.
func (*MomentVideoRequestObject) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{3}
}

func (x *MomentVideoRequestObject) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *MomentVideoRequestObject) GetSnapShotUrl() string {
	if x != nil {
		return x.SnapShotUrl
	}
	return ""
}

func (x *MomentVideoRequestObject) GetVideoWidth() int32 {
	if x != nil {
		return x.VideoWidth
	}
	return 0
}

func (x *MomentVideoRequestObject) GetVideoHeight() int32 {
	if x != nil {
		return x.VideoHeight
	}
	return 0
}

type ArticleDetailsInMoment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Article  *news.UserArticle `protobuf:"bytes,1,opt,name=Article,proto3" json:"Article,omitempty"`
	Official *news.UserFollow  `protobuf:"bytes,2,opt,name=Official,proto3" json:"Official,omitempty"`
}

func (x *ArticleDetailsInMoment) Reset() {
	*x = ArticleDetailsInMoment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleDetailsInMoment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleDetailsInMoment) ProtoMessage() {}

func (x *ArticleDetailsInMoment) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleDetailsInMoment.ProtoReflect.Descriptor instead.
func (*ArticleDetailsInMoment) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{4}
}

func (x *ArticleDetailsInMoment) GetArticle() *news.UserArticle {
	if x != nil {
		return x.Article
	}
	return nil
}

func (x *ArticleDetailsInMoment) GetOfficial() *news.UserFollow {
	if x != nil {
		return x.Official
	}
	return nil
}

type CreateMomentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32   `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string  `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	Moment  *Moment `protobuf:"bytes,3,opt,name=Moment,proto3" json:"Moment,omitempty"`
}

func (x *CreateMomentResponse) Reset() {
	*x = CreateMomentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMomentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMomentResponse) ProtoMessage() {}

func (x *CreateMomentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMomentResponse.ProtoReflect.Descriptor instead.
func (*CreateMomentResponse) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{5}
}

func (x *CreateMomentResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CreateMomentResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *CreateMomentResponse) GetMoment() *Moment {
	if x != nil {
		return x.Moment
	}
	return nil
}

type MomentLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorID      string `protobuf:"bytes,1,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	MomentID       string `protobuf:"bytes,2,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	UserID         string `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName       string `protobuf:"bytes,4,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserProfileImg string `protobuf:"bytes,5,opt,name=UserProfileImg,proto3" json:"UserProfileImg,omitempty"`
	Status         int32  `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *MomentLike) Reset() {
	*x = MomentLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MomentLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentLike) ProtoMessage() {}

func (x *MomentLike) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentLike.ProtoReflect.Descriptor instead.
func (*MomentLike) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{6}
}

func (x *MomentLike) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *MomentLike) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *MomentLike) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MomentLike) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MomentLike) GetUserProfileImg() string {
	if x != nil {
		return x.UserProfileImg
	}
	return ""
}

func (x *MomentLike) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetMomentLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentID              string                      `protobuf:"bytes,1,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	Account               string                      `protobuf:"bytes,2,opt,name=Account,proto3" json:"Account,omitempty"`
	MCreateTime           int64                       `protobuf:"varint,3,opt,name=MCreateTime,proto3" json:"MCreateTime,omitempty"`
	MContentText          string                      `protobuf:"bytes,4,opt,name=MContentText,proto3" json:"MContentText,omitempty"`
	MContentImagesArray   string                      `protobuf:"bytes,5,opt,name=MContentImagesArray,proto3" json:"MContentImagesArray,omitempty"`
	MContentVideosArray   string                      `protobuf:"bytes,6,opt,name=MContentVideosArray,proto3" json:"MContentVideosArray,omitempty"`
	UserID                string                      `protobuf:"bytes,7,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName              string                      `protobuf:"bytes,8,opt,name=UserName,proto3" json:"UserName,omitempty"`
	CreateTime            int64                       `protobuf:"varint,9,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Status                int32                       `protobuf:"varint,10,opt,name=Status,proto3" json:"Status,omitempty"`
	Privacy               int32                       `protobuf:"varint,11,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	AccountNickname       string                      `protobuf:"bytes,12,opt,name=AccountNickname,proto3" json:"AccountNickname,omitempty"`
	MContentImagesArrayV2 []*MomentImageRequestObject `protobuf:"bytes,13,rep,name=MContentImagesArrayV2,proto3" json:"MContentImagesArrayV2,omitempty"`
	MContentVideosArrayV2 []*MomentVideoRequestObject `protobuf:"bytes,14,rep,name=MContentVideosArrayV2,proto3" json:"MContentVideosArrayV2,omitempty"`
}

func (x *GetMomentLike) Reset() {
	*x = GetMomentLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentLike) ProtoMessage() {}

func (x *GetMomentLike) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentLike.ProtoReflect.Descriptor instead.
func (*GetMomentLike) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{7}
}

func (x *GetMomentLike) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *GetMomentLike) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetMomentLike) GetMCreateTime() int64 {
	if x != nil {
		return x.MCreateTime
	}
	return 0
}

func (x *GetMomentLike) GetMContentText() string {
	if x != nil {
		return x.MContentText
	}
	return ""
}

func (x *GetMomentLike) GetMContentImagesArray() string {
	if x != nil {
		return x.MContentImagesArray
	}
	return ""
}

func (x *GetMomentLike) GetMContentVideosArray() string {
	if x != nil {
		return x.MContentVideosArray
	}
	return ""
}

func (x *GetMomentLike) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetMomentLike) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetMomentLike) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GetMomentLike) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetMomentLike) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *GetMomentLike) GetAccountNickname() string {
	if x != nil {
		return x.AccountNickname
	}
	return ""
}

func (x *GetMomentLike) GetMContentImagesArrayV2() []*MomentImageRequestObject {
	if x != nil {
		return x.MContentImagesArrayV2
	}
	return nil
}

func (x *GetMomentLike) GetMContentVideosArrayV2() []*MomentVideoRequestObject {
	if x != nil {
		return x.MContentVideosArrayV2
	}
	return nil
}

type MomentCancelLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorID string `protobuf:"bytes,1,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	MomentID  string `protobuf:"bytes,2,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
}

func (x *MomentCancelLike) Reset() {
	*x = MomentCancelLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MomentCancelLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentCancelLike) ProtoMessage() {}

func (x *MomentCancelLike) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentCancelLike.ProtoReflect.Descriptor instead.
func (*MomentCancelLike) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{8}
}

func (x *MomentCancelLike) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *MomentCancelLike) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

type MomentComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorID      string `protobuf:"bytes,1,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	MomentID       string `protobuf:"bytes,2,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	CommentContent string `protobuf:"bytes,3,opt,name=CommentContent,proto3" json:"CommentContent,omitempty"`
}

func (x *MomentComment) Reset() {
	*x = MomentComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MomentComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentComment) ProtoMessage() {}

func (x *MomentComment) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentComment.ProtoReflect.Descriptor instead.
func (*MomentComment) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{9}
}

func (x *MomentComment) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *MomentComment) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *MomentComment) GetCommentContent() string {
	if x != nil {
		return x.CommentContent
	}
	return ""
}

type MomentCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32              `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string             `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	Comment *MomentCommentResp `protobuf:"bytes,3,opt,name=Comment,proto3" json:"Comment,omitempty"`
}

func (x *MomentCommentResponse) Reset() {
	*x = MomentCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MomentCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentCommentResponse) ProtoMessage() {}

func (x *MomentCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentCommentResponse.ProtoReflect.Descriptor instead.
func (*MomentCommentResponse) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{10}
}

func (x *MomentCommentResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *MomentCommentResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *MomentCommentResponse) GetComment() *MomentCommentResp {
	if x != nil {
		return x.Comment
	}
	return nil
}

type GetMomentComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentID              string                      `protobuf:"bytes,1,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	PublishAccount        string                      `protobuf:"bytes,2,opt,name=PublishAccount,proto3" json:"PublishAccount,omitempty"`
	MCreateTime           int64                       `protobuf:"varint,3,opt,name=MCreateTime,proto3" json:"MCreateTime,omitempty"`
	MContentText          string                      `protobuf:"bytes,4,opt,name=MContentText,proto3" json:"MContentText,omitempty"`
	MContentImagesArray   string                      `protobuf:"bytes,5,opt,name=MContentImagesArray,proto3" json:"MContentImagesArray,omitempty"`
	MContentVideosArray   string                      `protobuf:"bytes,6,opt,name=MContentVideosArray,proto3" json:"MContentVideosArray,omitempty"`
	UserID                string                      `protobuf:"bytes,7,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName              string                      `protobuf:"bytes,8,opt,name=UserName,proto3" json:"UserName,omitempty"`
	CommentContent        string                      `protobuf:"bytes,9,opt,name=CommentContent,proto3" json:"CommentContent,omitempty"`
	CreateBy              string                      `protobuf:"bytes,10,opt,name=CreateBy,proto3" json:"CreateBy,omitempty"`
	CreateTime            int64                       `protobuf:"varint,11,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	CommentReplies        int64                       `protobuf:"varint,12,opt,name=CommentReplies,proto3" json:"CommentReplies,omitempty"`
	LikeCounts            int64                       `protobuf:"varint,13,opt,name=LikeCounts,proto3" json:"LikeCounts,omitempty"`
	CommentID             string                      `protobuf:"bytes,14,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	Status                int32                       `protobuf:"varint,15,opt,name=Status,proto3" json:"Status,omitempty"`
	Privacy               int32                       `protobuf:"varint,16,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	CommentParentId       string                      `protobuf:"bytes,17,opt,name=CommentParentId,proto3" json:"CommentParentId,omitempty"`
	PublishName           string                      `protobuf:"bytes,18,opt,name=PublishName,proto3" json:"PublishName,omitempty"`
	CommentedUseID        string                      `protobuf:"bytes,19,opt,name=CommentedUseID,proto3" json:"CommentedUseID,omitempty"`
	CommentedUserName     string                      `protobuf:"bytes,20,opt,name=CommentedUserName,proto3" json:"CommentedUserName,omitempty"`
	ReplyCommentId        string                      `protobuf:"bytes,21,opt,name=ReplyCommentId,proto3" json:"ReplyCommentId,omitempty"`
	MContentImagesArrayV2 []*MomentImageRequestObject `protobuf:"bytes,22,rep,name=MContentImagesArrayV2,proto3" json:"MContentImagesArrayV2,omitempty"`
	MContentVideosArrayV2 []*MomentVideoRequestObject `protobuf:"bytes,23,rep,name=MContentVideosArrayV2,proto3" json:"MContentVideosArrayV2,omitempty"`
}

func (x *GetMomentComment) Reset() {
	*x = GetMomentComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentComment) ProtoMessage() {}

func (x *GetMomentComment) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentComment.ProtoReflect.Descriptor instead.
func (*GetMomentComment) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{11}
}

func (x *GetMomentComment) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *GetMomentComment) GetPublishAccount() string {
	if x != nil {
		return x.PublishAccount
	}
	return ""
}

func (x *GetMomentComment) GetMCreateTime() int64 {
	if x != nil {
		return x.MCreateTime
	}
	return 0
}

func (x *GetMomentComment) GetMContentText() string {
	if x != nil {
		return x.MContentText
	}
	return ""
}

func (x *GetMomentComment) GetMContentImagesArray() string {
	if x != nil {
		return x.MContentImagesArray
	}
	return ""
}

func (x *GetMomentComment) GetMContentVideosArray() string {
	if x != nil {
		return x.MContentVideosArray
	}
	return ""
}

func (x *GetMomentComment) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetMomentComment) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetMomentComment) GetCommentContent() string {
	if x != nil {
		return x.CommentContent
	}
	return ""
}

func (x *GetMomentComment) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *GetMomentComment) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GetMomentComment) GetCommentReplies() int64 {
	if x != nil {
		return x.CommentReplies
	}
	return 0
}

func (x *GetMomentComment) GetLikeCounts() int64 {
	if x != nil {
		return x.LikeCounts
	}
	return 0
}

func (x *GetMomentComment) GetCommentID() string {
	if x != nil {
		return x.CommentID
	}
	return ""
}

func (x *GetMomentComment) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetMomentComment) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *GetMomentComment) GetCommentParentId() string {
	if x != nil {
		return x.CommentParentId
	}
	return ""
}

func (x *GetMomentComment) GetPublishName() string {
	if x != nil {
		return x.PublishName
	}
	return ""
}

func (x *GetMomentComment) GetCommentedUseID() string {
	if x != nil {
		return x.CommentedUseID
	}
	return ""
}

func (x *GetMomentComment) GetCommentedUserName() string {
	if x != nil {
		return x.CommentedUserName
	}
	return ""
}

func (x *GetMomentComment) GetReplyCommentId() string {
	if x != nil {
		return x.ReplyCommentId
	}
	return ""
}

func (x *GetMomentComment) GetMContentImagesArrayV2() []*MomentImageRequestObject {
	if x != nil {
		return x.MContentImagesArrayV2
	}
	return nil
}

func (x *GetMomentComment) GetMContentVideosArrayV2() []*MomentVideoRequestObject {
	if x != nil {
		return x.MContentVideosArrayV2
	}
	return nil
}

type ReplyOfMomentComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorID      string `protobuf:"bytes,1,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	MomentID       string `protobuf:"bytes,2,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	CommentContent string `protobuf:"bytes,3,opt,name=CommentContent,proto3" json:"CommentContent,omitempty"`
	CommentID      string `protobuf:"bytes,4,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
}

func (x *ReplyOfMomentComment) Reset() {
	*x = ReplyOfMomentComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyOfMomentComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyOfMomentComment) ProtoMessage() {}

func (x *ReplyOfMomentComment) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyOfMomentComment.ProtoReflect.Descriptor instead.
func (*ReplyOfMomentComment) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{12}
}

func (x *ReplyOfMomentComment) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *ReplyOfMomentComment) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *ReplyOfMomentComment) GetCommentContent() string {
	if x != nil {
		return x.CommentContent
	}
	return ""
}

func (x *ReplyOfMomentComment) GetCommentID() string {
	if x != nil {
		return x.CommentID
	}
	return ""
}

// ListHomeTimeLineOfMomentsRequest
type ListHomeTimeLineOfMomentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorID     string `protobuf:"bytes,1,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	PageNumber    int64  `protobuf:"varint,2,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	MomentLimit   int64  `protobuf:"varint,3,opt,name=MomentLimit,proto3" json:"MomentLimit,omitempty"`
	CommentsLimit int64  `protobuf:"varint,4,opt,name=CommentsLimit,proto3" json:"CommentsLimit,omitempty"`
}

func (x *ListHomeTimeLineOfMomentsReq) Reset() {
	*x = ListHomeTimeLineOfMomentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHomeTimeLineOfMomentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHomeTimeLineOfMomentsReq) ProtoMessage() {}

func (x *ListHomeTimeLineOfMomentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHomeTimeLineOfMomentsReq.ProtoReflect.Descriptor instead.
func (*ListHomeTimeLineOfMomentsReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{13}
}

func (x *ListHomeTimeLineOfMomentsReq) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *ListHomeTimeLineOfMomentsReq) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListHomeTimeLineOfMomentsReq) GetMomentLimit() int64 {
	if x != nil {
		return x.MomentLimit
	}
	return 0
}

func (x *ListHomeTimeLineOfMomentsReq) GetCommentsLimit() int64 {
	if x != nil {
		return x.CommentsLimit
	}
	return 0
}

type ListHomeTimeLineOfMoments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeTimeLineOfMoments []*HomeTimeLineOfMoments `protobuf:"bytes,1,rep,name=HomeTimeLineOfMoments,proto3" json:"HomeTimeLineOfMoments,omitempty"`
}

func (x *ListHomeTimeLineOfMoments) Reset() {
	*x = ListHomeTimeLineOfMoments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHomeTimeLineOfMoments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHomeTimeLineOfMoments) ProtoMessage() {}

func (x *ListHomeTimeLineOfMoments) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHomeTimeLineOfMoments.ProtoReflect.Descriptor instead.
func (*ListHomeTimeLineOfMoments) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{14}
}

func (x *ListHomeTimeLineOfMoments) GetHomeTimeLineOfMoments() []*HomeTimeLineOfMoments {
	if x != nil {
		return x.HomeTimeLineOfMoments
	}
	return nil
}

type HomeTimeLineOfMoments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moment         *Moment               `protobuf:"bytes,1,opt,name=Moment,proto3" json:"Moment,omitempty"`
	MomentLikes    []*MomentLikeResponse `protobuf:"bytes,2,rep,name=MomentLikes,proto3" json:"MomentLikes,omitempty"`
	MomentComments []*MomentCommentResp  `protobuf:"bytes,3,rep,name=MomentComments,proto3" json:"MomentComments,omitempty"`
}

func (x *HomeTimeLineOfMoments) Reset() {
	*x = HomeTimeLineOfMoments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeTimeLineOfMoments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeTimeLineOfMoments) ProtoMessage() {}

func (x *HomeTimeLineOfMoments) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeTimeLineOfMoments.ProtoReflect.Descriptor instead.
func (*HomeTimeLineOfMoments) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{15}
}

func (x *HomeTimeLineOfMoments) GetMoment() *Moment {
	if x != nil {
		return x.Moment
	}
	return nil
}

func (x *HomeTimeLineOfMoments) GetMomentLikes() []*MomentLikeResponse {
	if x != nil {
		return x.MomentLikes
	}
	return nil
}

func (x *HomeTimeLineOfMoments) GetMomentComments() []*MomentCommentResp {
	if x != nil {
		return x.MomentComments
	}
	return nil
}

type MomentLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentID       string `protobuf:"bytes,1,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	UserID         string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName       string `protobuf:"bytes,3,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserProfileImg string `protobuf:"bytes,4,opt,name=UserProfileImg,proto3" json:"UserProfileImg,omitempty"`
	CreateBy       string `protobuf:"bytes,5,opt,name=CreateBy,proto3" json:"CreateBy,omitempty"`
	CreateTime     int64  `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateBy       string `protobuf:"bytes,7,opt,name=UpdateBy,proto3" json:"UpdateBy,omitempty"`
	UpdatedTime    int64  `protobuf:"varint,8,opt,name=UpdatedTime,proto3" json:"UpdatedTime,omitempty"`
	DeletedBy      string `protobuf:"bytes,9,opt,name=DeletedBy,proto3" json:"DeletedBy,omitempty"`
	DeleteTime     int64  `protobuf:"varint,10,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
	Status         int32  `protobuf:"varint,11,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *MomentLikeResponse) Reset() {
	*x = MomentLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MomentLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentLikeResponse) ProtoMessage() {}

func (x *MomentLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentLikeResponse.ProtoReflect.Descriptor instead.
func (*MomentLikeResponse) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{16}
}

func (x *MomentLikeResponse) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *MomentLikeResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MomentLikeResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MomentLikeResponse) GetUserProfileImg() string {
	if x != nil {
		return x.UserProfileImg
	}
	return ""
}

func (x *MomentLikeResponse) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MomentLikeResponse) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MomentLikeResponse) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MomentLikeResponse) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

func (x *MomentLikeResponse) GetDeletedBy() string {
	if x != nil {
		return x.DeletedBy
	}
	return ""
}

func (x *MomentLikeResponse) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *MomentLikeResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type MomentCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentID         string `protobuf:"bytes,1,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	CommentID        string `protobuf:"bytes,2,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	UserID           string `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName         string `protobuf:"bytes,4,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserProfileImg   string `protobuf:"bytes,5,opt,name=UserProfileImg,proto3" json:"UserProfileImg,omitempty"`
	CommentContent   string `protobuf:"bytes,6,opt,name=CommentContent,proto3" json:"CommentContent,omitempty"`
	CommentParentID  string `protobuf:"bytes,7,opt,name=CommentParentID,proto3" json:"CommentParentID,omitempty"`
	CPUserID         string `protobuf:"bytes,8,opt,name=CPUserID,proto3" json:"CPUserID,omitempty"`
	CPUserName       string `protobuf:"bytes,9,opt,name=CPUserName,proto3" json:"CPUserName,omitempty"`
	CPUserProfileImg string `protobuf:"bytes,10,opt,name=CPUserProfileImg,proto3" json:"CPUserProfileImg,omitempty"`
	CreateBy         string `protobuf:"bytes,11,opt,name=CreateBy,proto3" json:"CreateBy,omitempty"`
	CreateTime       int64  `protobuf:"varint,12,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateBy         string `protobuf:"bytes,13,opt,name=UpdateBy,proto3" json:"UpdateBy,omitempty"`
	UpdatedTime      int64  `protobuf:"varint,14,opt,name=UpdatedTime,proto3" json:"UpdatedTime,omitempty"`
	DeletedBy        string `protobuf:"bytes,15,opt,name=DeletedBy,proto3" json:"DeletedBy,omitempty"`
	DeleteTime       int64  `protobuf:"varint,16,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
	Status           int32  `protobuf:"varint,17,opt,name=Status,proto3" json:"Status,omitempty"`
	AccountStatus    int32  `protobuf:"varint,18,opt,name=AccountStatus,proto3" json:"AccountStatus,omitempty"`
}

func (x *MomentCommentResp) Reset() {
	*x = MomentCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MomentCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentCommentResp) ProtoMessage() {}

func (x *MomentCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentCommentResp.ProtoReflect.Descriptor instead.
func (*MomentCommentResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{17}
}

func (x *MomentCommentResp) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *MomentCommentResp) GetCommentID() string {
	if x != nil {
		return x.CommentID
	}
	return ""
}

func (x *MomentCommentResp) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MomentCommentResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MomentCommentResp) GetUserProfileImg() string {
	if x != nil {
		return x.UserProfileImg
	}
	return ""
}

func (x *MomentCommentResp) GetCommentContent() string {
	if x != nil {
		return x.CommentContent
	}
	return ""
}

func (x *MomentCommentResp) GetCommentParentID() string {
	if x != nil {
		return x.CommentParentID
	}
	return ""
}

func (x *MomentCommentResp) GetCPUserID() string {
	if x != nil {
		return x.CPUserID
	}
	return ""
}

func (x *MomentCommentResp) GetCPUserName() string {
	if x != nil {
		return x.CPUserName
	}
	return ""
}

func (x *MomentCommentResp) GetCPUserProfileImg() string {
	if x != nil {
		return x.CPUserProfileImg
	}
	return ""
}

func (x *MomentCommentResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MomentCommentResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MomentCommentResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MomentCommentResp) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

func (x *MomentCommentResp) GetDeletedBy() string {
	if x != nil {
		return x.DeletedBy
	}
	return ""
}

func (x *MomentCommentResp) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *MomentCommentResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MomentCommentResp) GetAccountStatus() int32 {
	if x != nil {
		return x.AccountStatus
	}
	return 0
}

type GetMomentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentID              string                      `protobuf:"bytes,1,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	MCreateTime           int64                       `protobuf:"varint,2,opt,name=MCreateTime,proto3" json:"MCreateTime,omitempty"`
	MContentText          string                      `protobuf:"bytes,3,opt,name=MContentText,proto3" json:"MContentText,omitempty"`
	MContentImagesArray   string                      `protobuf:"bytes,4,opt,name=MContentImagesArray,proto3" json:"MContentImagesArray,omitempty"`
	MContentVideosArray   string                      `protobuf:"bytes,5,opt,name=MContentVideosArray,proto3" json:"MContentVideosArray,omitempty"`
	MContentImagesArrayV2 []*MomentImageRequestObject `protobuf:"bytes,6,rep,name=MContentImagesArrayV2,proto3" json:"MContentImagesArrayV2,omitempty"`
	MContentVideosArrayV2 []*MomentVideoRequestObject `protobuf:"bytes,7,rep,name=MContentVideosArrayV2,proto3" json:"MContentVideosArrayV2,omitempty"`
	Privacy               int32                       `protobuf:"varint,8,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	UserID                string                      `protobuf:"bytes,9,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName              string                      `protobuf:"bytes,10,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Status                int32                       `protobuf:"varint,11,opt,name=Status,proto3" json:"Status,omitempty"`
	Interests             []*admin_cms.InterestResp   `protobuf:"bytes,12,rep,name=interests,proto3" json:"interests,omitempty"`
	MContentThumbnilArray string                      `protobuf:"bytes,13,opt,name=MContentThumbnilArray,proto3" json:"MContentThumbnilArray,omitempty"`
	OrignalID             string                      `protobuf:"bytes,14,opt,name=OrignalID,proto3" json:"OrignalID,omitempty"`
	MomentType            int32                       `protobuf:"varint,15,opt,name=MomentType,proto3" json:"MomentType,omitempty"`
	OriginalCreatorName   string                      `protobuf:"bytes,16,opt,name=OriginalCreatorName,proto3" json:"OriginalCreatorName,omitempty"`
	OriginalCreatorID     string                      `protobuf:"bytes,17,opt,name=OriginalCreatorID,proto3" json:"OriginalCreatorID,omitempty"`
	ArticleID             int64                       `protobuf:"varint,18,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
}

func (x *GetMomentRes) Reset() {
	*x = GetMomentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentRes) ProtoMessage() {}

func (x *GetMomentRes) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentRes.ProtoReflect.Descriptor instead.
func (*GetMomentRes) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{18}
}

func (x *GetMomentRes) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *GetMomentRes) GetMCreateTime() int64 {
	if x != nil {
		return x.MCreateTime
	}
	return 0
}

func (x *GetMomentRes) GetMContentText() string {
	if x != nil {
		return x.MContentText
	}
	return ""
}

func (x *GetMomentRes) GetMContentImagesArray() string {
	if x != nil {
		return x.MContentImagesArray
	}
	return ""
}

func (x *GetMomentRes) GetMContentVideosArray() string {
	if x != nil {
		return x.MContentVideosArray
	}
	return ""
}

func (x *GetMomentRes) GetMContentImagesArrayV2() []*MomentImageRequestObject {
	if x != nil {
		return x.MContentImagesArrayV2
	}
	return nil
}

func (x *GetMomentRes) GetMContentVideosArrayV2() []*MomentVideoRequestObject {
	if x != nil {
		return x.MContentVideosArrayV2
	}
	return nil
}

func (x *GetMomentRes) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *GetMomentRes) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetMomentRes) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetMomentRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetMomentRes) GetInterests() []*admin_cms.InterestResp {
	if x != nil {
		return x.Interests
	}
	return nil
}

func (x *GetMomentRes) GetMContentThumbnilArray() string {
	if x != nil {
		return x.MContentThumbnilArray
	}
	return ""
}

func (x *GetMomentRes) GetOrignalID() string {
	if x != nil {
		return x.OrignalID
	}
	return ""
}

func (x *GetMomentRes) GetMomentType() int32 {
	if x != nil {
		return x.MomentType
	}
	return 0
}

func (x *GetMomentRes) GetOriginalCreatorName() string {
	if x != nil {
		return x.OriginalCreatorName
	}
	return ""
}

func (x *GetMomentRes) GetOriginalCreatorID() string {
	if x != nil {
		return x.OriginalCreatorID
	}
	return ""
}

func (x *GetMomentRes) GetArticleID() int64 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

type MomentDetailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentID              string                      `protobuf:"bytes,1,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	MCreateTime           int64                       `protobuf:"varint,2,opt,name=MCreateTime,proto3" json:"MCreateTime,omitempty"`
	MContentText          string                      `protobuf:"bytes,3,opt,name=MContentText,proto3" json:"MContentText,omitempty"`
	MContentImagesArray   string                      `protobuf:"bytes,4,opt,name=MContentImagesArray,proto3" json:"MContentImagesArray,omitempty"`
	MContentVideosArray   string                      `protobuf:"bytes,5,opt,name=MContentVideosArray,proto3" json:"MContentVideosArray,omitempty"`
	UserID                string                      `protobuf:"bytes,6,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName              string                      `protobuf:"bytes,7,opt,name=UserName,proto3" json:"UserName,omitempty"`
	LastLoginIp           string                      `protobuf:"bytes,8,opt,name=LastLoginIp,proto3" json:"LastLoginIp,omitempty"`
	MLikesCount           int32                       `protobuf:"varint,9,opt,name=MLikesCount,proto3" json:"MLikesCount,omitempty"`
	MCommentsCount        int32                       `protobuf:"varint,10,opt,name=MCommentsCount,proto3" json:"MCommentsCount,omitempty"`
	MRepostCount          int64                       `protobuf:"varint,11,opt,name=MRepostCount,proto3" json:"MRepostCount,omitempty"`
	Privacy               int32                       `protobuf:"varint,12,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	CommentCtl            int32                       `protobuf:"varint,13,opt,name=CommentCtl,proto3" json:"CommentCtl,omitempty"`
	OriginalCreatorName   string                      `protobuf:"bytes,14,opt,name=OriginalCreatorName,proto3" json:"OriginalCreatorName,omitempty"`
	OrignalCreatorID      string                      `protobuf:"bytes,15,opt,name=OrignalCreatorID,proto3" json:"OrignalCreatorID,omitempty"`
	OrignalID             string                      `protobuf:"bytes,16,opt,name=OrignalID,proto3" json:"OrignalID,omitempty"`
	MContentImagesArrayV2 []*MomentImageRequestObject `protobuf:"bytes,17,rep,name=MContentImagesArrayV2,proto3" json:"MContentImagesArrayV2,omitempty"`
	MContentVideosArrayV2 []*MomentVideoRequestObject `protobuf:"bytes,18,rep,name=MContentVideosArrayV2,proto3" json:"MContentVideosArrayV2,omitempty"`
}

func (x *MomentDetailRes) Reset() {
	*x = MomentDetailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MomentDetailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentDetailRes) ProtoMessage() {}

func (x *MomentDetailRes) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentDetailRes.ProtoReflect.Descriptor instead.
func (*MomentDetailRes) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{19}
}

func (x *MomentDetailRes) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *MomentDetailRes) GetMCreateTime() int64 {
	if x != nil {
		return x.MCreateTime
	}
	return 0
}

func (x *MomentDetailRes) GetMContentText() string {
	if x != nil {
		return x.MContentText
	}
	return ""
}

func (x *MomentDetailRes) GetMContentImagesArray() string {
	if x != nil {
		return x.MContentImagesArray
	}
	return ""
}

func (x *MomentDetailRes) GetMContentVideosArray() string {
	if x != nil {
		return x.MContentVideosArray
	}
	return ""
}

func (x *MomentDetailRes) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MomentDetailRes) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MomentDetailRes) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *MomentDetailRes) GetMLikesCount() int32 {
	if x != nil {
		return x.MLikesCount
	}
	return 0
}

func (x *MomentDetailRes) GetMCommentsCount() int32 {
	if x != nil {
		return x.MCommentsCount
	}
	return 0
}

func (x *MomentDetailRes) GetMRepostCount() int64 {
	if x != nil {
		return x.MRepostCount
	}
	return 0
}

func (x *MomentDetailRes) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *MomentDetailRes) GetCommentCtl() int32 {
	if x != nil {
		return x.CommentCtl
	}
	return 0
}

func (x *MomentDetailRes) GetOriginalCreatorName() string {
	if x != nil {
		return x.OriginalCreatorName
	}
	return ""
}

func (x *MomentDetailRes) GetOrignalCreatorID() string {
	if x != nil {
		return x.OrignalCreatorID
	}
	return ""
}

func (x *MomentDetailRes) GetOrignalID() string {
	if x != nil {
		return x.OrignalID
	}
	return ""
}

func (x *MomentDetailRes) GetMContentImagesArrayV2() []*MomentImageRequestObject {
	if x != nil {
		return x.MContentImagesArrayV2
	}
	return nil
}

func (x *MomentDetailRes) GetMContentVideosArrayV2() []*MomentVideoRequestObject {
	if x != nil {
		return x.MContentVideosArrayV2
	}
	return nil
}

type GetMomentDetailsByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorID string `protobuf:"bytes,1,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	MomentID  string `protobuf:"bytes,2,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
}

func (x *GetMomentDetailsByIDRequest) Reset() {
	*x = GetMomentDetailsByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentDetailsByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentDetailsByIDRequest) ProtoMessage() {}

func (x *GetMomentDetailsByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentDetailsByIDRequest.ProtoReflect.Descriptor instead.
func (*GetMomentDetailsByIDRequest) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{20}
}

func (x *GetMomentDetailsByIDRequest) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *GetMomentDetailsByIDRequest) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

type GetMomentDetailsByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moment         *Moment               `protobuf:"bytes,1,opt,name=Moment,proto3" json:"Moment,omitempty"`
	MomentLikes    []*MomentLikeResponse `protobuf:"bytes,2,rep,name=MomentLikes,proto3" json:"MomentLikes,omitempty"`
	MomentComments []*MomentCommentResp  `protobuf:"bytes,3,rep,name=MomentComments,proto3" json:"MomentComments,omitempty"`
}

func (x *GetMomentDetailsByIDResponse) Reset() {
	*x = GetMomentDetailsByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentDetailsByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentDetailsByIDResponse) ProtoMessage() {}

func (x *GetMomentDetailsByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentDetailsByIDResponse.ProtoReflect.Descriptor instead.
func (*GetMomentDetailsByIDResponse) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{21}
}

func (x *GetMomentDetailsByIDResponse) GetMoment() *Moment {
	if x != nil {
		return x.Moment
	}
	return nil
}

func (x *GetMomentDetailsByIDResponse) GetMomentLikes() []*MomentLikeResponse {
	if x != nil {
		return x.MomentLikes
	}
	return nil
}

func (x *GetMomentDetailsByIDResponse) GetMomentComments() []*MomentCommentResp {
	if x != nil {
		return x.MomentComments
	}
	return nil
}

type GetMomentCommentsByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID   string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CreatorID     string `protobuf:"bytes,2,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	MomentID      string `protobuf:"bytes,3,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	PageNumber    int64  `protobuf:"varint,4,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	CommentsLimit int64  `protobuf:"varint,5,opt,name=CommentsLimit,proto3" json:"CommentsLimit,omitempty"`
}

func (x *GetMomentCommentsByIDRequest) Reset() {
	*x = GetMomentCommentsByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentCommentsByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentCommentsByIDRequest) ProtoMessage() {}

func (x *GetMomentCommentsByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentCommentsByIDRequest.ProtoReflect.Descriptor instead.
func (*GetMomentCommentsByIDRequest) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{22}
}

func (x *GetMomentCommentsByIDRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetMomentCommentsByIDRequest) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *GetMomentCommentsByIDRequest) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *GetMomentCommentsByIDRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetMomentCommentsByIDRequest) GetCommentsLimit() int64 {
	if x != nil {
		return x.CommentsLimit
	}
	return 0
}

type GetMomentCommentsByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentComments []*MomentCommentResp `protobuf:"bytes,1,rep,name=MomentComments,proto3" json:"MomentComments,omitempty"`
}

func (x *GetMomentCommentsByIDResponse) Reset() {
	*x = GetMomentCommentsByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentCommentsByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentCommentsByIDResponse) ProtoMessage() {}

func (x *GetMomentCommentsByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentCommentsByIDResponse.ProtoReflect.Descriptor instead.
func (*GetMomentCommentsByIDResponse) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{23}
}

func (x *GetMomentCommentsByIDResponse) GetMomentComments() []*MomentCommentResp {
	if x != nil {
		return x.MomentComments
	}
	return nil
}

type RepostAMomentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CreatorID   string `protobuf:"bytes,2,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	MomentID    string `protobuf:"bytes,3,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
}

func (x *RepostAMomentRequest) Reset() {
	*x = RepostAMomentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepostAMomentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepostAMomentRequest) ProtoMessage() {}

func (x *RepostAMomentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepostAMomentRequest.ProtoReflect.Descriptor instead.
func (*RepostAMomentRequest) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{24}
}

func (x *RepostAMomentRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *RepostAMomentRequest) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *RepostAMomentRequest) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

type GetAnyUserMomentsByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID   string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	PageNumber    int64  `protobuf:"varint,2,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	ShowNumber    int64  `protobuf:"varint,3,opt,name=ShowNumber,proto3" json:"ShowNumber,omitempty"`
	UserId        string `protobuf:"bytes,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CurrentUserId string `protobuf:"bytes,5,opt,name=CurrentUserId,proto3" json:"CurrentUserId,omitempty"`
}

func (x *GetAnyUserMomentsByIDRequest) Reset() {
	*x = GetAnyUserMomentsByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnyUserMomentsByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnyUserMomentsByIDRequest) ProtoMessage() {}

func (x *GetAnyUserMomentsByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnyUserMomentsByIDRequest.ProtoReflect.Descriptor instead.
func (*GetAnyUserMomentsByIDRequest) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{25}
}

func (x *GetAnyUserMomentsByIDRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAnyUserMomentsByIDRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetAnyUserMomentsByIDRequest) GetShowNumber() int64 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

func (x *GetAnyUserMomentsByIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAnyUserMomentsByIDRequest) GetCurrentUserId() string {
	if x != nil {
		return x.CurrentUserId
	}
	return ""
}

type GetAnyUserMomentsByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Moments    []*Moment   `protobuf:"bytes,2,rep,name=Moments,proto3" json:"Moments,omitempty"`
}

func (x *GetAnyUserMomentsByIDResp) Reset() {
	*x = GetAnyUserMomentsByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnyUserMomentsByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnyUserMomentsByIDResp) ProtoMessage() {}

func (x *GetAnyUserMomentsByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnyUserMomentsByIDResp.ProtoReflect.Descriptor instead.
func (*GetAnyUserMomentsByIDResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{26}
}

func (x *GetAnyUserMomentsByIDResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAnyUserMomentsByIDResp) GetMoments() []*Moment {
	if x != nil {
		return x.Moments
	}
	return nil
}

type GetUserMomentCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID   string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId        string `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CurrentUserId string `protobuf:"bytes,4,opt,name=CurrentUserId,proto3" json:"CurrentUserId,omitempty"`
}

func (x *GetUserMomentCountRequest) Reset() {
	*x = GetUserMomentCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserMomentCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMomentCountRequest) ProtoMessage() {}

func (x *GetUserMomentCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMomentCountRequest.ProtoReflect.Descriptor instead.
func (*GetUserMomentCountRequest) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{27}
}

func (x *GetUserMomentCountRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetUserMomentCountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserMomentCountRequest) GetCurrentUserId() string {
	if x != nil {
		return x.CurrentUserId
	}
	return ""
}

type GetUserMomentCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Posts      int64       `protobuf:"varint,2,opt,name=Posts,proto3" json:"Posts,omitempty"`
	Likes      int64       `protobuf:"varint,3,opt,name=Likes,proto3" json:"Likes,omitempty"`
}

func (x *GetUserMomentCountResp) Reset() {
	*x = GetUserMomentCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserMomentCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMomentCountResp) ProtoMessage() {}

func (x *GetUserMomentCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMomentCountResp.ProtoReflect.Descriptor instead.
func (*GetUserMomentCountResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserMomentCountResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserMomentCountResp) GetPosts() int64 {
	if x != nil {
		return x.Posts
	}
	return 0
}

func (x *GetUserMomentCountResp) GetLikes() int64 {
	if x != nil {
		return x.Likes
	}
	return 0
}

type DeleteMomentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CreatorID   string `protobuf:"bytes,2,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	MomentID    string `protobuf:"bytes,3,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
}

func (x *DeleteMomentRequest) Reset() {
	*x = DeleteMomentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMomentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMomentRequest) ProtoMessage() {}

func (x *DeleteMomentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMomentRequest.ProtoReflect.Descriptor instead.
func (*DeleteMomentRequest) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteMomentRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteMomentRequest) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *DeleteMomentRequest) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

type GetMomentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination   *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	Content      string                    `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Account      string                    `protobuf:"bytes,4,opt,name=Account,proto3" json:"Account,omitempty"`
	Privacy      int32                     `protobuf:"varint,5,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	IsReposted   int32                     `protobuf:"varint,6,opt,name=IsReposted,proto3" json:"IsReposted,omitempty"`
	OriginalUser string                    `protobuf:"bytes,7,opt,name=OriginalUser,proto3" json:"OriginalUser,omitempty"`
	IsBlocked    int32                     `protobuf:"varint,8,opt,name=IsBlocked,proto3" json:"IsBlocked,omitempty"`
	StartTime    string                    `protobuf:"bytes,9,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime      string                    `protobuf:"bytes,10,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	OrderBy      string                    `protobuf:"bytes,11,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	MediaType    int32                     `protobuf:"varint,12,opt,name=MediaType,proto3" json:"MediaType,omitempty"`
	ContentType  int32                     `protobuf:"varint,13,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
}

func (x *GetMomentsReq) Reset() {
	*x = GetMomentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentsReq) ProtoMessage() {}

func (x *GetMomentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentsReq.ProtoReflect.Descriptor instead.
func (*GetMomentsReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{30}
}

func (x *GetMomentsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetMomentsReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetMomentsReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetMomentsReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetMomentsReq) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *GetMomentsReq) GetIsReposted() int32 {
	if x != nil {
		return x.IsReposted
	}
	return 0
}

func (x *GetMomentsReq) GetOriginalUser() string {
	if x != nil {
		return x.OriginalUser
	}
	return ""
}

func (x *GetMomentsReq) GetIsBlocked() int32 {
	if x != nil {
		return x.IsBlocked
	}
	return 0
}

func (x *GetMomentsReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetMomentsReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetMomentsReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetMomentsReq) GetMediaType() int32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *GetMomentsReq) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

type GetMomentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Moments     []*GetMomentRes            `protobuf:"bytes,2,rep,name=Moments,proto3" json:"Moments,omitempty"`
	Pagination  *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	MomentsNums int32                      `protobuf:"varint,4,opt,name=MomentsNums,proto3" json:"MomentsNums,omitempty"`
}

func (x *GetMomentsResp) Reset() {
	*x = GetMomentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentsResp) ProtoMessage() {}

func (x *GetMomentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentsResp.ProtoReflect.Descriptor instead.
func (*GetMomentsResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{31}
}

func (x *GetMomentsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMomentsResp) GetMoments() []*GetMomentRes {
	if x != nil {
		return x.Moments
	}
	return nil
}

func (x *GetMomentsResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetMomentsResp) GetMomentsNums() int32 {
	if x != nil {
		return x.MomentsNums
	}
	return 0
}

type DeleteMomentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string   `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	Moments     []string `protobuf:"bytes,3,rep,name=Moments,proto3" json:"Moments,omitempty"`
	ArticleIDs  []int64  `protobuf:"varint,4,rep,packed,name=ArticleIDs,proto3" json:"ArticleIDs,omitempty"`
}

func (x *DeleteMomentsReq) Reset() {
	*x = DeleteMomentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMomentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMomentsReq) ProtoMessage() {}

func (x *DeleteMomentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMomentsReq.ProtoReflect.Descriptor instead.
func (*DeleteMomentsReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteMomentsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteMomentsReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *DeleteMomentsReq) GetMoments() []string {
	if x != nil {
		return x.Moments
	}
	return nil
}

func (x *DeleteMomentsReq) GetArticleIDs() []int64 {
	if x != nil {
		return x.ArticleIDs
	}
	return nil
}

type DeleteMomentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *DeleteMomentsResp) Reset() {
	*x = DeleteMomentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMomentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMomentsResp) ProtoMessage() {}

func (x *DeleteMomentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMomentsResp.ProtoReflect.Descriptor instead.
func (*DeleteMomentsResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteMomentsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AlterMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID           string                      `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId              string                      `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	MomentId              string                      `protobuf:"bytes,3,opt,name=MomentId,proto3" json:"MomentId,omitempty"`
	Privacy               int32                       `protobuf:"varint,4,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	IsReposted            bool                        `protobuf:"varint,5,opt,name=IsReposted,proto3" json:"IsReposted,omitempty"`
	Content               string                      `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	MContentImagesArray   string                      `protobuf:"bytes,7,opt,name=MContentImagesArray,proto3" json:"MContentImagesArray,omitempty"`
	MContentVideosArray   string                      `protobuf:"bytes,8,opt,name=MContentVideosArray,proto3" json:"MContentVideosArray,omitempty"`
	MContentThumbnilArray string                      `protobuf:"bytes,9,opt,name=MContentThumbnilArray,proto3" json:"MContentThumbnilArray,omitempty"`
	MContentImagesArrayV2 []*MomentImageRequestObject `protobuf:"bytes,10,rep,name=MContentImagesArrayV2,proto3" json:"MContentImagesArrayV2,omitempty"`
	MContentVideosArrayV2 []*MomentVideoRequestObject `protobuf:"bytes,11,rep,name=MContentVideosArrayV2,proto3" json:"MContentVideosArrayV2,omitempty"`
}

func (x *AlterMomentReq) Reset() {
	*x = AlterMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterMomentReq) ProtoMessage() {}

func (x *AlterMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterMomentReq.ProtoReflect.Descriptor instead.
func (*AlterMomentReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{34}
}

func (x *AlterMomentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterMomentReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *AlterMomentReq) GetMomentId() string {
	if x != nil {
		return x.MomentId
	}
	return ""
}

func (x *AlterMomentReq) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *AlterMomentReq) GetIsReposted() bool {
	if x != nil {
		return x.IsReposted
	}
	return false
}

func (x *AlterMomentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AlterMomentReq) GetMContentImagesArray() string {
	if x != nil {
		return x.MContentImagesArray
	}
	return ""
}

func (x *AlterMomentReq) GetMContentVideosArray() string {
	if x != nil {
		return x.MContentVideosArray
	}
	return ""
}

func (x *AlterMomentReq) GetMContentThumbnilArray() string {
	if x != nil {
		return x.MContentThumbnilArray
	}
	return ""
}

func (x *AlterMomentReq) GetMContentImagesArrayV2() []*MomentImageRequestObject {
	if x != nil {
		return x.MContentImagesArrayV2
	}
	return nil
}

func (x *AlterMomentReq) GetMContentVideosArrayV2() []*MomentVideoRequestObject {
	if x != nil {
		return x.MContentVideosArrayV2
	}
	return nil
}

type AlterMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterMomentResp) Reset() {
	*x = AlterMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterMomentResp) ProtoMessage() {}

func (x *AlterMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterMomentResp.ProtoReflect.Descriptor instead.
func (*AlterMomentResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{35}
}

func (x *AlterMomentResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type ChangeMomentStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	MomentIds   []string `protobuf:"bytes,2,rep,name=MomentIds,proto3" json:"MomentIds,omitempty"`
	Status      int32    `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ChangeMomentStatusReq) Reset() {
	*x = ChangeMomentStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMomentStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMomentStatusReq) ProtoMessage() {}

func (x *ChangeMomentStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMomentStatusReq.ProtoReflect.Descriptor instead.
func (*ChangeMomentStatusReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{36}
}

func (x *ChangeMomentStatusReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ChangeMomentStatusReq) GetMomentIds() []string {
	if x != nil {
		return x.MomentIds
	}
	return nil
}

func (x *ChangeMomentStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ChangeMomentStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *ChangeMomentStatusResp) Reset() {
	*x = ChangeMomentStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMomentStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMomentStatusResp) ProtoMessage() {}

func (x *ChangeMomentStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMomentStatusResp.ProtoReflect.Descriptor instead.
func (*ChangeMomentStatusResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{37}
}

func (x *ChangeMomentStatusResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type ModifyVisibilityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string   `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	Privacy     int32    `protobuf:"varint,3,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	MomentIds   []string `protobuf:"bytes,4,rep,name=MomentIds,proto3" json:"MomentIds,omitempty"`
}

func (x *ModifyVisibilityReq) Reset() {
	*x = ModifyVisibilityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVisibilityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVisibilityReq) ProtoMessage() {}

func (x *ModifyVisibilityReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVisibilityReq.ProtoReflect.Descriptor instead.
func (*ModifyVisibilityReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{38}
}

func (x *ModifyVisibilityReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ModifyVisibilityReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *ModifyVisibilityReq) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *ModifyVisibilityReq) GetMomentIds() []string {
	if x != nil {
		return x.MomentIds
	}
	return nil
}

type ModifyVisibilityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *ModifyVisibilityResp) Reset() {
	*x = ModifyVisibilityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVisibilityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVisibilityResp) ProtoMessage() {}

func (x *ModifyVisibilityResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVisibilityResp.ProtoReflect.Descriptor instead.
func (*ModifyVisibilityResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{39}
}

func (x *ModifyVisibilityResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetMomentDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	Account     string                    `protobuf:"bytes,3,opt,name=Account,proto3" json:"Account,omitempty"`
	MediaType   int32                     `protobuf:"varint,4,opt,name=MediaType,proto3" json:"MediaType,omitempty"`
	Content     string                    `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	StartTime   string                    `protobuf:"bytes,6,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime     string                    `protobuf:"bytes,7,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	OrderBy     string                    `protobuf:"bytes,8,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	ContentType int32                     `protobuf:"varint,9,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Privacy     int32                     `protobuf:"varint,10,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	MomentID    string                    `protobuf:"bytes,11,opt,name=MomentID,proto3" json:"MomentID,omitempty"`
	OriginalID  string                    `protobuf:"bytes,12,opt,name=OriginalID,proto3" json:"OriginalID,omitempty"`
}

func (x *GetMomentDetailsReq) Reset() {
	*x = GetMomentDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentDetailsReq) ProtoMessage() {}

func (x *GetMomentDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentDetailsReq.ProtoReflect.Descriptor instead.
func (*GetMomentDetailsReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{40}
}

func (x *GetMomentDetailsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetMomentDetailsReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetMomentDetailsReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetMomentDetailsReq) GetMediaType() int32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *GetMomentDetailsReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetMomentDetailsReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetMomentDetailsReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetMomentDetailsReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetMomentDetailsReq) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *GetMomentDetailsReq) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *GetMomentDetailsReq) GetMomentID() string {
	if x != nil {
		return x.MomentID
	}
	return ""
}

func (x *GetMomentDetailsReq) GetOriginalID() string {
	if x != nil {
		return x.OriginalID
	}
	return ""
}

type GetMomentDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp    *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	MomentDetails []*MomentDetailRes         `protobuf:"bytes,2,rep,name=MomentDetails,proto3" json:"MomentDetails,omitempty"`
	Pagination    *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	MomentsNums   int32                      `protobuf:"varint,4,opt,name=MomentsNums,proto3" json:"MomentsNums,omitempty"`
}

func (x *GetMomentDetailsResp) Reset() {
	*x = GetMomentDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentDetailsResp) ProtoMessage() {}

func (x *GetMomentDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentDetailsResp.ProtoReflect.Descriptor instead.
func (*GetMomentDetailsResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{41}
}

func (x *GetMomentDetailsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetMomentDetailsResp) GetMomentDetails() []*MomentDetailRes {
	if x != nil {
		return x.MomentDetails
	}
	return nil
}

func (x *GetMomentDetailsResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetMomentDetailsResp) GetMomentsNums() int32 {
	if x != nil {
		return x.MomentsNums
	}
	return 0
}

type CtlMomentCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	MomentId    string `protobuf:"bytes,2,opt,name=MomentId,proto3" json:"MomentId,omitempty"`
	CommentCtl  int32  `protobuf:"varint,3,opt,name=CommentCtl,proto3" json:"CommentCtl,omitempty"`
}

func (x *CtlMomentCommentReq) Reset() {
	*x = CtlMomentCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtlMomentCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtlMomentCommentReq) ProtoMessage() {}

func (x *CtlMomentCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtlMomentCommentReq.ProtoReflect.Descriptor instead.
func (*CtlMomentCommentReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{42}
}

func (x *CtlMomentCommentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CtlMomentCommentReq) GetMomentId() string {
	if x != nil {
		return x.MomentId
	}
	return ""
}

func (x *CtlMomentCommentReq) GetCommentCtl() int32 {
	if x != nil {
		return x.CommentCtl
	}
	return 0
}

type CtlMomentCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *CtlMomentCommentResp) Reset() {
	*x = CtlMomentCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtlMomentCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtlMomentCommentResp) ProtoMessage() {}

func (x *CtlMomentCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtlMomentCommentResp.ProtoReflect.Descriptor instead.
func (*CtlMomentCommentResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{43}
}

func (x *CtlMomentCommentResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetCommentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination      *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	PublishUser     string                    `protobuf:"bytes,3,opt,name=PublishUser,proto3" json:"PublishUser,omitempty"`
	MContentText    string                    `protobuf:"bytes,4,opt,name=MContentText,proto3" json:"MContentText,omitempty"`
	CommentUser     string                    `protobuf:"bytes,5,opt,name=CommentUser,proto3" json:"CommentUser,omitempty"`
	CommentContent  string                    `protobuf:"bytes,6,opt,name=CommentContent,proto3" json:"CommentContent,omitempty"`
	TimeType        int32                     `protobuf:"varint,7,opt,name=TimeType,proto3" json:"TimeType,omitempty"`
	StartTime       string                    `protobuf:"bytes,8,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime         string                    `protobuf:"bytes,9,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	OrderBy         string                    `protobuf:"bytes,10,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	MomentId        string                    `protobuf:"bytes,11,opt,name=MomentId,proto3" json:"MomentId,omitempty"`
	ParentCommentId string                    `protobuf:"bytes,12,opt,name=ParentCommentId,proto3" json:"ParentCommentId,omitempty"`
	MediaType       int32                     `protobuf:"varint,13,opt,name=MediaType,proto3" json:"MediaType,omitempty"`
	ContentType     int32                     `protobuf:"varint,14,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Privacy         int32                     `protobuf:"varint,15,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	CommentType     string                    `protobuf:"bytes,16,opt,name=CommentType,proto3" json:"CommentType,omitempty"`
	CommentedUser   string                    `protobuf:"bytes,17,opt,name=CommentedUser,proto3" json:"CommentedUser,omitempty"`
	ReplyCommentId  string                    `protobuf:"bytes,18,opt,name=ReplyCommentId,proto3" json:"ReplyCommentId,omitempty"`
}

func (x *GetCommentsReq) Reset() {
	*x = GetCommentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsReq) ProtoMessage() {}

func (x *GetCommentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsReq.ProtoReflect.Descriptor instead.
func (*GetCommentsReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{44}
}

func (x *GetCommentsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetCommentsReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetCommentsReq) GetPublishUser() string {
	if x != nil {
		return x.PublishUser
	}
	return ""
}

func (x *GetCommentsReq) GetMContentText() string {
	if x != nil {
		return x.MContentText
	}
	return ""
}

func (x *GetCommentsReq) GetCommentUser() string {
	if x != nil {
		return x.CommentUser
	}
	return ""
}

func (x *GetCommentsReq) GetCommentContent() string {
	if x != nil {
		return x.CommentContent
	}
	return ""
}

func (x *GetCommentsReq) GetTimeType() int32 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *GetCommentsReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetCommentsReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetCommentsReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetCommentsReq) GetMomentId() string {
	if x != nil {
		return x.MomentId
	}
	return ""
}

func (x *GetCommentsReq) GetParentCommentId() string {
	if x != nil {
		return x.ParentCommentId
	}
	return ""
}

func (x *GetCommentsReq) GetMediaType() int32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *GetCommentsReq) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *GetCommentsReq) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *GetCommentsReq) GetCommentType() string {
	if x != nil {
		return x.CommentType
	}
	return ""
}

func (x *GetCommentsReq) GetCommentedUser() string {
	if x != nil {
		return x.CommentedUser
	}
	return ""
}

func (x *GetCommentsReq) GetReplyCommentId() string {
	if x != nil {
		return x.ReplyCommentId
	}
	return ""
}

type GetCommentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Comments     []*GetMomentComment        `protobuf:"bytes,2,rep,name=Comments,proto3" json:"Comments,omitempty"`
	Pagination   *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	CommentsNums int32                      `protobuf:"varint,4,opt,name=CommentsNums,proto3" json:"CommentsNums,omitempty"`
}

func (x *GetCommentsResp) Reset() {
	*x = GetCommentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsResp) ProtoMessage() {}

func (x *GetCommentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsResp.ProtoReflect.Descriptor instead.
func (*GetCommentsResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{45}
}

func (x *GetCommentsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetCommentsResp) GetComments() []*GetMomentComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetCommentsResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetCommentsResp) GetCommentsNums() int32 {
	if x != nil {
		return x.CommentsNums
	}
	return 0
}

type RemoveCommentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string   `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	CommentIds  []string `protobuf:"bytes,3,rep,name=CommentIds,proto3" json:"CommentIds,omitempty"`
	MomentIds   []string `protobuf:"bytes,4,rep,name=MomentIds,proto3" json:"MomentIds,omitempty"`
	ParentIds   []string `protobuf:"bytes,5,rep,name=ParentIds,proto3" json:"ParentIds,omitempty"`
	ReplyIds    []string `protobuf:"bytes,6,rep,name=ReplyIds,proto3" json:"ReplyIds,omitempty"`
}

func (x *RemoveCommentsReq) Reset() {
	*x = RemoveCommentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCommentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCommentsReq) ProtoMessage() {}

func (x *RemoveCommentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCommentsReq.ProtoReflect.Descriptor instead.
func (*RemoveCommentsReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{46}
}

func (x *RemoveCommentsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *RemoveCommentsReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *RemoveCommentsReq) GetCommentIds() []string {
	if x != nil {
		return x.CommentIds
	}
	return nil
}

func (x *RemoveCommentsReq) GetMomentIds() []string {
	if x != nil {
		return x.MomentIds
	}
	return nil
}

func (x *RemoveCommentsReq) GetParentIds() []string {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *RemoveCommentsReq) GetReplyIds() []string {
	if x != nil {
		return x.ReplyIds
	}
	return nil
}

type RemoveCommentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *RemoveCommentsResp) Reset() {
	*x = RemoveCommentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCommentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCommentsResp) ProtoMessage() {}

func (x *RemoveCommentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCommentsResp.ProtoReflect.Descriptor instead.
func (*RemoveCommentsResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{47}
}

func (x *RemoveCommentsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AlterCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	CommentId   string `protobuf:"bytes,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	Content     string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *AlterCommentReq) Reset() {
	*x = AlterCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterCommentReq) ProtoMessage() {}

func (x *AlterCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterCommentReq.ProtoReflect.Descriptor instead.
func (*AlterCommentReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{48}
}

func (x *AlterCommentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterCommentReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *AlterCommentReq) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *AlterCommentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AlterCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterCommentResp) Reset() {
	*x = AlterCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterCommentResp) ProtoMessage() {}

func (x *AlterCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterCommentResp.ProtoReflect.Descriptor instead.
func (*AlterCommentResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{49}
}

func (x *AlterCommentResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SwitchCommentHideStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	CommentId   string `protobuf:"bytes,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	Status      int32  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *SwitchCommentHideStateReq) Reset() {
	*x = SwitchCommentHideStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchCommentHideStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchCommentHideStateReq) ProtoMessage() {}

func (x *SwitchCommentHideStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchCommentHideStateReq.ProtoReflect.Descriptor instead.
func (*SwitchCommentHideStateReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{50}
}

func (x *SwitchCommentHideStateReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SwitchCommentHideStateReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *SwitchCommentHideStateReq) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *SwitchCommentHideStateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SwitchCommentHideStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SwitchCommentHideStateResp) Reset() {
	*x = SwitchCommentHideStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchCommentHideStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchCommentHideStateResp) ProtoMessage() {}

func (x *SwitchCommentHideStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchCommentHideStateResp.ProtoReflect.Descriptor instead.
func (*SwitchCommentHideStateResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{51}
}

func (x *SwitchCommentHideStateResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetLikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination   *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	PublishUser  string                    `protobuf:"bytes,3,opt,name=PublishUser,proto3" json:"PublishUser,omitempty"`
	MContentText string                    `protobuf:"bytes,4,opt,name=MContentText,proto3" json:"MContentText,omitempty"`
	LikeUser     string                    `protobuf:"bytes,5,opt,name=LikeUser,proto3" json:"LikeUser,omitempty"`
	TimeType     int32                     `protobuf:"varint,6,opt,name=TimeType,proto3" json:"TimeType,omitempty"`
	StartTime    string                    `protobuf:"bytes,7,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime      string                    `protobuf:"bytes,8,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	OrderBy      string                    `protobuf:"bytes,9,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	MomentId     string                    `protobuf:"bytes,10,opt,name=MomentId,proto3" json:"MomentId,omitempty"`
	MediaType    int32                     `protobuf:"varint,11,opt,name=MediaType,proto3" json:"MediaType,omitempty"`
	ContentType  int32                     `protobuf:"varint,12,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Privacy      int32                     `protobuf:"varint,13,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
}

func (x *GetLikesReq) Reset() {
	*x = GetLikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikesReq) ProtoMessage() {}

func (x *GetLikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikesReq.ProtoReflect.Descriptor instead.
func (*GetLikesReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{52}
}

func (x *GetLikesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetLikesReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetLikesReq) GetPublishUser() string {
	if x != nil {
		return x.PublishUser
	}
	return ""
}

func (x *GetLikesReq) GetMContentText() string {
	if x != nil {
		return x.MContentText
	}
	return ""
}

func (x *GetLikesReq) GetLikeUser() string {
	if x != nil {
		return x.LikeUser
	}
	return ""
}

func (x *GetLikesReq) GetTimeType() int32 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *GetLikesReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetLikesReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetLikesReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetLikesReq) GetMomentId() string {
	if x != nil {
		return x.MomentId
	}
	return ""
}

func (x *GetLikesReq) GetMediaType() int32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *GetLikesReq) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *GetLikesReq) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

type GetLikesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Likes      []*GetMomentLike           `protobuf:"bytes,2,rep,name=Likes,proto3" json:"Likes,omitempty"`
	Pagination *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	LikeNums   int32                      `protobuf:"varint,4,opt,name=LikeNums,proto3" json:"LikeNums,omitempty"`
}

func (x *GetLikesResp) Reset() {
	*x = GetLikesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikesResp) ProtoMessage() {}

func (x *GetLikesResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikesResp.ProtoReflect.Descriptor instead.
func (*GetLikesResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{53}
}

func (x *GetLikesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetLikesResp) GetLikes() []*GetMomentLike {
	if x != nil {
		return x.Likes
	}
	return nil
}

func (x *GetLikesResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetLikesResp) GetLikeNums() int32 {
	if x != nil {
		return x.LikeNums
	}
	return 0
}

type RemoveLikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string   `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	MomentsId   []string `protobuf:"bytes,3,rep,name=MomentsId,proto3" json:"MomentsId,omitempty"`
	UsersId     []string `protobuf:"bytes,4,rep,name=UsersId,proto3" json:"UsersId,omitempty"`
}

func (x *RemoveLikesReq) Reset() {
	*x = RemoveLikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLikesReq) ProtoMessage() {}

func (x *RemoveLikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLikesReq.ProtoReflect.Descriptor instead.
func (*RemoveLikesReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{54}
}

func (x *RemoveLikesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *RemoveLikesReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *RemoveLikesReq) GetMomentsId() []string {
	if x != nil {
		return x.MomentsId
	}
	return nil
}

func (x *RemoveLikesReq) GetUsersId() []string {
	if x != nil {
		return x.UsersId
	}
	return nil
}

type RemoveLikesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *RemoveLikesResp) Reset() {
	*x = RemoveLikesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLikesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLikesResp) ProtoMessage() {}

func (x *RemoveLikesResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLikesResp.ProtoReflect.Descriptor instead.
func (*RemoveLikesResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{55}
}

func (x *RemoveLikesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SwitchLikeHideStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	MomentId    string `protobuf:"bytes,3,opt,name=MomentId,proto3" json:"MomentId,omitempty"`
	UserId      string `protobuf:"bytes,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Status      int32  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *SwitchLikeHideStateReq) Reset() {
	*x = SwitchLikeHideStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchLikeHideStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchLikeHideStateReq) ProtoMessage() {}

func (x *SwitchLikeHideStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchLikeHideStateReq.ProtoReflect.Descriptor instead.
func (*SwitchLikeHideStateReq) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{56}
}

func (x *SwitchLikeHideStateReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SwitchLikeHideStateReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *SwitchLikeHideStateReq) GetMomentId() string {
	if x != nil {
		return x.MomentId
	}
	return ""
}

func (x *SwitchLikeHideStateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SwitchLikeHideStateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SwitchLikeHideStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SwitchLikeHideStateResp) Reset() {
	*x = SwitchLikeHideStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchLikeHideStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchLikeHideStateResp) ProtoMessage() {}

func (x *SwitchLikeHideStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchLikeHideStateResp.ProtoReflect.Descriptor instead.
func (*SwitchLikeHideStateResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{57}
}

func (x *SwitchLikeHideStateResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteMomentCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CreatorID   string `protobuf:"bytes,2,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	CommentID   string `protobuf:"bytes,3,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
}

func (x *DeleteMomentCommentRequest) Reset() {
	*x = DeleteMomentCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMomentCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMomentCommentRequest) ProtoMessage() {}

func (x *DeleteMomentCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMomentCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteMomentCommentRequest) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteMomentCommentRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteMomentCommentRequest) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *DeleteMomentCommentRequest) GetCommentID() string {
	if x != nil {
		return x.CommentID
	}
	return ""
}

// GlobalSearchInMomentsRequest SearchKeyWord
type GlobalSearchInMomentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorID     string `protobuf:"bytes,1,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	PageNumber    int64  `protobuf:"varint,2,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	MomentLimit   int64  `protobuf:"varint,3,opt,name=MomentLimit,proto3" json:"MomentLimit,omitempty"`
	CommentsLimit int64  `protobuf:"varint,4,opt,name=CommentsLimit,proto3" json:"CommentsLimit,omitempty"`
	SearchKeyWord string `protobuf:"bytes,5,opt,name=SearchKeyWord,proto3" json:"SearchKeyWord,omitempty"`
}

func (x *GlobalSearchInMomentsRequest) Reset() {
	*x = GlobalSearchInMomentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSearchInMomentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSearchInMomentsRequest) ProtoMessage() {}

func (x *GlobalSearchInMomentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSearchInMomentsRequest.ProtoReflect.Descriptor instead.
func (*GlobalSearchInMomentsRequest) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{59}
}

func (x *GlobalSearchInMomentsRequest) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *GlobalSearchInMomentsRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GlobalSearchInMomentsRequest) GetMomentLimit() int64 {
	if x != nil {
		return x.MomentLimit
	}
	return 0
}

func (x *GlobalSearchInMomentsRequest) GetCommentsLimit() int64 {
	if x != nil {
		return x.CommentsLimit
	}
	return 0
}

func (x *GlobalSearchInMomentsRequest) GetSearchKeyWord() string {
	if x != nil {
		return x.SearchKeyWord
	}
	return ""
}

type GetMomentAnyUserMediaByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserID      string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	LastCount   int32  `protobuf:"varint,3,opt,name=LastCount,proto3" json:"LastCount,omitempty"`
}

func (x *GetMomentAnyUserMediaByIDRequest) Reset() {
	*x = GetMomentAnyUserMediaByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentAnyUserMediaByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentAnyUserMediaByIDRequest) ProtoMessage() {}

func (x *GetMomentAnyUserMediaByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentAnyUserMediaByIDRequest.ProtoReflect.Descriptor instead.
func (*GetMomentAnyUserMediaByIDRequest) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{60}
}

func (x *GetMomentAnyUserMediaByIDRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetMomentAnyUserMediaByIDRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetMomentAnyUserMediaByIDRequest) GetLastCount() int32 {
	if x != nil {
		return x.LastCount
	}
	return 0
}

type Pic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL  string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Type int32  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *Pic) Reset() {
	*x = Pic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pic) ProtoMessage() {}

func (x *Pic) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pic.ProtoReflect.Descriptor instead.
func (*Pic) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{61}
}

func (x *Pic) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Pic) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type GetMomentAnyUserMediaByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pics                []*Pic `protobuf:"bytes,1,rep,name=pics,proto3" json:"pics,omitempty"`
	AllMediaMomentCount int64  `protobuf:"varint,2,opt,name=AllMediaMomentCount,proto3" json:"AllMediaMomentCount,omitempty"`
}

func (x *GetMomentAnyUserMediaByIDResp) Reset() {
	*x = GetMomentAnyUserMediaByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMomentAnyUserMediaByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMomentAnyUserMediaByIDResp) ProtoMessage() {}

func (x *GetMomentAnyUserMediaByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMomentAnyUserMediaByIDResp.ProtoReflect.Descriptor instead.
func (*GetMomentAnyUserMediaByIDResp) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{62}
}

func (x *GetMomentAnyUserMediaByIDResp) GetPics() []*Pic {
	if x != nil {
		return x.Pics
	}
	return nil
}

func (x *GetMomentAnyUserMediaByIDResp) GetAllMediaMomentCount() int64 {
	if x != nil {
		return x.AllMediaMomentCount
	}
	return 0
}

type Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleID          int64  `protobuf:"varint,1,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
	OfficialID         int64  `protobuf:"varint,2,opt,name=OfficialID,proto3" json:"OfficialID,omitempty"`
	Title              string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Content            string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	TextContent        string `protobuf:"bytes,5,opt,name=TextContent,proto3" json:"TextContent,omitempty"`
	OfficialName       string `protobuf:"bytes,6,opt,name=OfficialName,proto3" json:"OfficialName,omitempty"`
	OfficialProfileImg string `protobuf:"bytes,7,opt,name=OfficialProfileImg,proto3" json:"OfficialProfileImg,omitempty"`
	CreatedBy          string `protobuf:"bytes,8,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	CreateTime         int64  `protobuf:"varint,9,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdatedBy          string `protobuf:"bytes,10,opt,name=UpdatedBy,proto3" json:"UpdatedBy,omitempty"`
	UpdateTime         int64  `protobuf:"varint,11,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	DeletedBy          string `protobuf:"bytes,12,opt,name=DeletedBy,proto3" json:"DeletedBy,omitempty"`
	DeleteTime         int64  `protobuf:"varint,13,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
	Status             int32  `protobuf:"varint,14,opt,name=Status,proto3" json:"Status,omitempty"`
	Privacy            int32  `protobuf:"varint,15,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	CommentCounts      int64  `protobuf:"varint,16,opt,name=CommentCounts,proto3" json:"CommentCounts,omitempty"`
	LikeCounts         int64  `protobuf:"varint,17,opt,name=LikeCounts,proto3" json:"LikeCounts,omitempty"`
	RepostCounts       int64  `protobuf:"varint,18,opt,name=RepostCounts,proto3" json:"RepostCounts,omitempty"`
	LastLoginIp        string `protobuf:"bytes,19,opt,name=LastLoginIp,proto3" json:"LastLoginIp,omitempty"`
	LastLoginTime      string `protobuf:"bytes,20,opt,name=LastLoginTime,proto3" json:"LastLoginTime,omitempty"`
	OfficialType       int32  `protobuf:"varint,21,opt,name=OfficialType,proto3" json:"OfficialType,omitempty"`
}

func (x *Article) Reset() {
	*x = Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moments_moments_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_moments_moments_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_moments_moments_proto_rawDescGZIP(), []int{63}
}

func (x *Article) GetArticleID() int64 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

func (x *Article) GetOfficialID() int64 {
	if x != nil {
		return x.OfficialID
	}
	return 0
}

func (x *Article) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Article) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Article) GetTextContent() string {
	if x != nil {
		return x.TextContent
	}
	return ""
}

func (x *Article) GetOfficialName() string {
	if x != nil {
		return x.OfficialName
	}
	return ""
}

func (x *Article) GetOfficialProfileImg() string {
	if x != nil {
		return x.OfficialProfileImg
	}
	return ""
}

func (x *Article) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Article) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Article) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *Article) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Article) GetDeletedBy() string {
	if x != nil {
		return x.DeletedBy
	}
	return ""
}

func (x *Article) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *Article) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Article) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *Article) GetCommentCounts() int64 {
	if x != nil {
		return x.CommentCounts
	}
	return 0
}

func (x *Article) GetLikeCounts() int64 {
	if x != nil {
		return x.LikeCounts
	}
	return 0
}

func (x *Article) GetRepostCounts() int64 {
	if x != nil {
		return x.RepostCounts
	}
	return 0
}

func (x *Article) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *Article) GetLastLoginTime() string {
	if x != nil {
		return x.LastLoginTime
	}
	return ""
}

func (x *Article) GetOfficialType() int32 {
	if x != nil {
		return x.OfficialType
	}
	return 0
}

var File_moments_moments_proto protoreflect.FileDescriptor

var file_moments_moments_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x64, 0x6b, 0x5f, 0x77, 0x73, 0x2f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x22, 0xe0, 0x09, 0x0a, 0x06, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x4d, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x4d,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x4d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x4f, 0x72, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4f, 0x72, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4f,
	0x72, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x4f, 0x72, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x34, 0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x69, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x69, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x57, 0x0a, 0x16, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x49, 0x6e, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x49, 0x6e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x16, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x49, 0x6e, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x57, 0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x18, 0x18, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x12, 0x57, 0x0a, 0x15, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x56, 0x32, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x15, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x56, 0x32, 0x12, 0x30, 0x0a, 0x13, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6d, 0x67, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6d, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x6f, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f, 0x6f, 0x6d, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x0b, 0x57, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x57, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x53, 0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x20,
	0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x9a, 0x01, 0x0a, 0x18, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x6e, 0x61,
	0x70, 0x53, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x53, 0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x73, 0x0a,
	0x16, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x49,
	0x6e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x08, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x22, 0x71, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x06,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xd1, 0x04, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x30, 0x0a, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x12, 0x57, 0x0a,
	0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x22, 0x4c, 0x0a, 0x10, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x22, 0x71, 0x0a, 0x0d, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x7f, 0x0a, 0x15, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x12, 0x34, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xac, 0x07, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4c,
	0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x49, 0x44, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x49, 0x44, 0x12,
	0x2c, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x18, 0x16,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x12, 0x57,
	0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x22, 0xa4, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x4c, 0x69, 0x6e, 0x65, 0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x71, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x6f, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x4f, 0x66, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x54, 0x0a, 0x15, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x4c, 0x69, 0x6e, 0x65, 0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x15, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x15, 0x48,
	0x6f, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x4f, 0x66, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a,
	0x0b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0e,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xdc, 0x02, 0x0a, 0x12, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xd9, 0x04, 0x0a, 0x11, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x50, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x50, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x50, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43,
	0x50, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x50, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x43, 0x50, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x95, 0x06, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x30,
	0x0a, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x12, 0x30, 0x0a, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x57, 0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x12, 0x57, 0x0a, 0x15, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x56, 0x32, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x15, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x56, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x34, 0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x69, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x69, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x72, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x44, 0x22, 0x83, 0x06, 0x0a, 0x0f, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x4c, 0x69, 0x6b, 0x65, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x4d,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x4d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x4d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x74, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x74, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x4f, 0x72, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4f, 0x72, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x72,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x57, 0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32,
	0x12, 0x57, 0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x22, 0x57, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0xca, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0b,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xc0, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x63, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x72, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x74, 0x41, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xbe, 0x01, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x41, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29,
	0x0a, 0x07, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x7b, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6b, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6b, 0x65,
	0x73, 0x22, 0x71, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x22, 0xb9, 0x03, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x49, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xdf, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x07, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x52, 0x07, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4e, 0x75,
	0x6d, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x22,
	0x48, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8a, 0x04, 0x0a, 0x0e, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x30, 0x0a, 0x13,
	0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4d, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x34,
	0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x69, 0x6c, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x69, 0x6c, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x57, 0x0a, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x12, 0x57, 0x0a,
	0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x15, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x56, 0x32, 0x22, 0x46, 0x0a, 0x0f, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6f,
	0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x4d, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8b,
	0x01, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x14,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x99, 0x03, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x22, 0xf4, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0d, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x52, 0x0d, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x73, 0x0a, 0x13,
	0x43, 0x74, 0x6c, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x74, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x74,
	0x6c, 0x22, 0x4b, 0x0a, 0x14, 0x43, 0x74, 0x6c, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x86,
	0x05, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe8, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x35, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4e, 0x75,
	0x6d, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x73, 0x22, 0x49,
	0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x87, 0x01, 0x0a, 0x0f, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x10, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8f, 0x01, 0x0a,
	0x19, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x51,
	0x0a, 0x1a, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48,
	0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xbb, 0x03, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x4d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x22,
	0xd4, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x05, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x05, 0x4c, 0x69,
	0x6b, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x69,
	0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x69,
	0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x64, 0x22,
	0x46, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa2, 0x01, 0x0a, 0x16, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x4c, 0x69, 0x6b, 0x65, 0x48, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4e, 0x0a, 0x17,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x6b, 0x65, 0x48, 0x69, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7a, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xca, 0x01, 0x0a, 0x1c, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65,
	0x79, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x7a, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x2b, 0x0a, 0x03, 0x50, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x73,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x20, 0x0a, 0x04, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x69, 0x63, 0x52, 0x04, 0x70, 0x69, 0x63,
	0x73, 0x12, 0x30, 0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xaf, 0x05, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6d, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12,
	0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x4c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x32, 0xc2, 0x12, 0x0a, 0x07, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x1a, 0x13, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x42, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x6b, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x1a, 0x13,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5b, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a,
	0x1e, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x69, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x25, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x63, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x24, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x66, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x74, 0x41, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x25, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x40, 0x0a, 0x0b, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x55, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x74,
	0x6c, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x74, 0x6c, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x74, 0x6c, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a,
	0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1a, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0c, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a,
	0x16, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48,
	0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x48, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x37, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x13, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x6b, 0x65, 0x48, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x6b, 0x65, 0x48, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x6b, 0x65, 0x48, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x25, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x4f, 0x66, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x6e, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3b, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_moments_moments_proto_rawDescOnce sync.Once
	file_moments_moments_proto_rawDescData = file_moments_moments_proto_rawDesc
)

func file_moments_moments_proto_rawDescGZIP() []byte {
	file_moments_moments_proto_rawDescOnce.Do(func() {
		file_moments_moments_proto_rawDescData = protoimpl.X.CompressGZIP(file_moments_moments_proto_rawDescData)
	})
	return file_moments_moments_proto_rawDescData
}

var file_moments_moments_proto_msgTypes = make([]protoimpl.MessageInfo, 64)
var file_moments_moments_proto_goTypes = []interface{}{
	(*CommonResp)(nil),                       // 0: moments.CommonResp
	(*Moment)(nil),                           // 1: moments.Moment
	(*MomentImageRequestObject)(nil),         // 2: moments.MomentImageRequestObject
	(*MomentVideoRequestObject)(nil),         // 3: moments.MomentVideoRequestObject
	(*ArticleDetailsInMoment)(nil),           // 4: moments.ArticleDetailsInMoment
	(*CreateMomentResponse)(nil),             // 5: moments.CreateMomentResponse
	(*MomentLike)(nil),                       // 6: moments.MomentLike
	(*GetMomentLike)(nil),                    // 7: moments.GetMomentLike
	(*MomentCancelLike)(nil),                 // 8: moments.MomentCancelLike
	(*MomentComment)(nil),                    // 9: moments.MomentComment
	(*MomentCommentResponse)(nil),            // 10: moments.MomentCommentResponse
	(*GetMomentComment)(nil),                 // 11: moments.GetMomentComment
	(*ReplyOfMomentComment)(nil),             // 12: moments.ReplyOfMomentComment
	(*ListHomeTimeLineOfMomentsReq)(nil),     // 13: moments.ListHomeTimeLineOfMomentsReq
	(*ListHomeTimeLineOfMoments)(nil),        // 14: moments.ListHomeTimeLineOfMoments
	(*HomeTimeLineOfMoments)(nil),            // 15: moments.HomeTimeLineOfMoments
	(*MomentLikeResponse)(nil),               // 16: moments.MomentLikeResponse
	(*MomentCommentResp)(nil),                // 17: moments.MomentCommentResp
	(*GetMomentRes)(nil),                     // 18: moments.GetMomentRes
	(*MomentDetailRes)(nil),                  // 19: moments.MomentDetailRes
	(*GetMomentDetailsByIDRequest)(nil),      // 20: moments.GetMomentDetailsByIDRequest
	(*GetMomentDetailsByIDResponse)(nil),     // 21: moments.GetMomentDetailsByIDResponse
	(*GetMomentCommentsByIDRequest)(nil),     // 22: moments.GetMomentCommentsByIDRequest
	(*GetMomentCommentsByIDResponse)(nil),    // 23: moments.GetMomentCommentsByIDResponse
	(*RepostAMomentRequest)(nil),             // 24: moments.RepostAMomentRequest
	(*GetAnyUserMomentsByIDRequest)(nil),     // 25: moments.GetAnyUserMomentsByIDRequest
	(*GetAnyUserMomentsByIDResp)(nil),        // 26: moments.GetAnyUserMomentsByIDResp
	(*GetUserMomentCountRequest)(nil),        // 27: moments.GetUserMomentCountRequest
	(*GetUserMomentCountResp)(nil),           // 28: moments.GetUserMomentCountResp
	(*DeleteMomentRequest)(nil),              // 29: moments.DeleteMomentRequest
	(*GetMomentsReq)(nil),                    // 30: moments.GetMomentsReq
	(*GetMomentsResp)(nil),                   // 31: moments.GetMomentsResp
	(*DeleteMomentsReq)(nil),                 // 32: moments.DeleteMomentsReq
	(*DeleteMomentsResp)(nil),                // 33: moments.DeleteMomentsResp
	(*AlterMomentReq)(nil),                   // 34: moments.AlterMomentReq
	(*AlterMomentResp)(nil),                  // 35: moments.AlterMomentResp
	(*ChangeMomentStatusReq)(nil),            // 36: moments.ChangeMomentStatusReq
	(*ChangeMomentStatusResp)(nil),           // 37: moments.ChangeMomentStatusResp
	(*ModifyVisibilityReq)(nil),              // 38: moments.ModifyVisibilityReq
	(*ModifyVisibilityResp)(nil),             // 39: moments.ModifyVisibilityResp
	(*GetMomentDetailsReq)(nil),              // 40: moments.GetMomentDetailsReq
	(*GetMomentDetailsResp)(nil),             // 41: moments.GetMomentDetailsResp
	(*CtlMomentCommentReq)(nil),              // 42: moments.CtlMomentCommentReq
	(*CtlMomentCommentResp)(nil),             // 43: moments.CtlMomentCommentResp
	(*GetCommentsReq)(nil),                   // 44: moments.GetCommentsReq
	(*GetCommentsResp)(nil),                  // 45: moments.GetCommentsResp
	(*RemoveCommentsReq)(nil),                // 46: moments.RemoveCommentsReq
	(*RemoveCommentsResp)(nil),               // 47: moments.RemoveCommentsResp
	(*AlterCommentReq)(nil),                  // 48: moments.AlterCommentReq
	(*AlterCommentResp)(nil),                 // 49: moments.AlterCommentResp
	(*SwitchCommentHideStateReq)(nil),        // 50: moments.SwitchCommentHideStateReq
	(*SwitchCommentHideStateResp)(nil),       // 51: moments.SwitchCommentHideStateResp
	(*GetLikesReq)(nil),                      // 52: moments.GetLikesReq
	(*GetLikesResp)(nil),                     // 53: moments.GetLikesResp
	(*RemoveLikesReq)(nil),                   // 54: moments.RemoveLikesReq
	(*RemoveLikesResp)(nil),                  // 55: moments.RemoveLikesResp
	(*SwitchLikeHideStateReq)(nil),           // 56: moments.SwitchLikeHideStateReq
	(*SwitchLikeHideStateResp)(nil),          // 57: moments.SwitchLikeHideStateResp
	(*DeleteMomentCommentRequest)(nil),       // 58: moments.DeleteMomentCommentRequest
	(*GlobalSearchInMomentsRequest)(nil),     // 59: moments.GlobalSearchInMomentsRequest
	(*GetMomentAnyUserMediaByIDRequest)(nil), // 60: moments.GetMomentAnyUserMediaByIDRequest
	(*Pic)(nil),                              // 61: moments.Pic
	(*GetMomentAnyUserMediaByIDResp)(nil),    // 62: moments.GetMomentAnyUserMediaByIDResp
	(*Article)(nil),                          // 63: moments.Article
	(*short_video.ShortVideoInfo)(nil),       // 64: short_video.ShortVideoInfo
	(*news.UserArticle)(nil),                 // 65: news.UserArticle
	(*news.UserFollow)(nil),                  // 66: news.UserFollow
	(*admin_cms.InterestResp)(nil),           // 67: admin_cms.InterestResp
	(*sdk_ws.RequestPagination)(nil),         // 68: server_api_params.RequestPagination
	(*sdk_ws.ResponsePagination)(nil),        // 69: server_api_params.ResponsePagination
}
var file_moments_moments_proto_depIdxs = []int32{
	4,  // 0: moments.Moment.ArticleDetailsInMoment:type_name -> moments.ArticleDetailsInMoment
	2,  // 1: moments.Moment.MContentImagesArrayV2:type_name -> moments.MomentImageRequestObject
	3,  // 2: moments.Moment.MContentVideosArrayV2:type_name -> moments.MomentVideoRequestObject
	64, // 3: moments.Moment.WoomDetails:type_name -> short_video.ShortVideoInfo
	65, // 4: moments.ArticleDetailsInMoment.Article:type_name -> news.UserArticle
	66, // 5: moments.ArticleDetailsInMoment.Official:type_name -> news.UserFollow
	1,  // 6: moments.CreateMomentResponse.Moment:type_name -> moments.Moment
	2,  // 7: moments.GetMomentLike.MContentImagesArrayV2:type_name -> moments.MomentImageRequestObject
	3,  // 8: moments.GetMomentLike.MContentVideosArrayV2:type_name -> moments.MomentVideoRequestObject
	17, // 9: moments.MomentCommentResponse.Comment:type_name -> moments.MomentCommentResp
	2,  // 10: moments.GetMomentComment.MContentImagesArrayV2:type_name -> moments.MomentImageRequestObject
	3,  // 11: moments.GetMomentComment.MContentVideosArrayV2:type_name -> moments.MomentVideoRequestObject
	15, // 12: moments.ListHomeTimeLineOfMoments.HomeTimeLineOfMoments:type_name -> moments.HomeTimeLineOfMoments
	1,  // 13: moments.HomeTimeLineOfMoments.Moment:type_name -> moments.Moment
	16, // 14: moments.HomeTimeLineOfMoments.MomentLikes:type_name -> moments.MomentLikeResponse
	17, // 15: moments.HomeTimeLineOfMoments.MomentComments:type_name -> moments.MomentCommentResp
	2,  // 16: moments.GetMomentRes.MContentImagesArrayV2:type_name -> moments.MomentImageRequestObject
	3,  // 17: moments.GetMomentRes.MContentVideosArrayV2:type_name -> moments.MomentVideoRequestObject
	67, // 18: moments.GetMomentRes.interests:type_name -> admin_cms.InterestResp
	2,  // 19: moments.MomentDetailRes.MContentImagesArrayV2:type_name -> moments.MomentImageRequestObject
	3,  // 20: moments.MomentDetailRes.MContentVideosArrayV2:type_name -> moments.MomentVideoRequestObject
	1,  // 21: moments.GetMomentDetailsByIDResponse.Moment:type_name -> moments.Moment
	16, // 22: moments.GetMomentDetailsByIDResponse.MomentLikes:type_name -> moments.MomentLikeResponse
	17, // 23: moments.GetMomentDetailsByIDResponse.MomentComments:type_name -> moments.MomentCommentResp
	17, // 24: moments.GetMomentCommentsByIDResponse.MomentComments:type_name -> moments.MomentCommentResp
	0,  // 25: moments.GetAnyUserMomentsByIDResp.CommonResp:type_name -> moments.CommonResp
	1,  // 26: moments.GetAnyUserMomentsByIDResp.Moments:type_name -> moments.Moment
	0,  // 27: moments.GetUserMomentCountResp.CommonResp:type_name -> moments.CommonResp
	68, // 28: moments.GetMomentsReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 29: moments.GetMomentsResp.CommonResp:type_name -> moments.CommonResp
	18, // 30: moments.GetMomentsResp.Moments:type_name -> moments.GetMomentRes
	69, // 31: moments.GetMomentsResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,  // 32: moments.DeleteMomentsResp.CommonResp:type_name -> moments.CommonResp
	2,  // 33: moments.AlterMomentReq.MContentImagesArrayV2:type_name -> moments.MomentImageRequestObject
	3,  // 34: moments.AlterMomentReq.MContentVideosArrayV2:type_name -> moments.MomentVideoRequestObject
	0,  // 35: moments.AlterMomentResp.CommonResp:type_name -> moments.CommonResp
	0,  // 36: moments.ChangeMomentStatusResp.CommonResp:type_name -> moments.CommonResp
	0,  // 37: moments.ModifyVisibilityResp.CommonResp:type_name -> moments.CommonResp
	68, // 38: moments.GetMomentDetailsReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 39: moments.GetMomentDetailsResp.CommonResp:type_name -> moments.CommonResp
	19, // 40: moments.GetMomentDetailsResp.MomentDetails:type_name -> moments.MomentDetailRes
	69, // 41: moments.GetMomentDetailsResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,  // 42: moments.CtlMomentCommentResp.CommonResp:type_name -> moments.CommonResp
	68, // 43: moments.GetCommentsReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 44: moments.GetCommentsResp.CommonResp:type_name -> moments.CommonResp
	11, // 45: moments.GetCommentsResp.Comments:type_name -> moments.GetMomentComment
	69, // 46: moments.GetCommentsResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,  // 47: moments.RemoveCommentsResp.CommonResp:type_name -> moments.CommonResp
	0,  // 48: moments.AlterCommentResp.CommonResp:type_name -> moments.CommonResp
	0,  // 49: moments.SwitchCommentHideStateResp.CommonResp:type_name -> moments.CommonResp
	68, // 50: moments.GetLikesReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 51: moments.GetLikesResp.CommonResp:type_name -> moments.CommonResp
	7,  // 52: moments.GetLikesResp.Likes:type_name -> moments.GetMomentLike
	69, // 53: moments.GetLikesResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,  // 54: moments.RemoveLikesResp.CommonResp:type_name -> moments.CommonResp
	0,  // 55: moments.SwitchLikeHideStateResp.CommonResp:type_name -> moments.CommonResp
	61, // 56: moments.GetMomentAnyUserMediaByIDResp.pics:type_name -> moments.Pic
	1,  // 57: moments.moments.CreateMoment:input_type -> moments.Moment
	6,  // 58: moments.moments.CreateMomentLike:input_type -> moments.MomentLike
	8,  // 59: moments.moments.CancelMomentLike:input_type -> moments.MomentCancelLike
	9,  // 60: moments.moments.CreateMomentComment:input_type -> moments.MomentComment
	12, // 61: moments.moments.CreateReplyOfMomentComment:input_type -> moments.ReplyOfMomentComment
	13, // 62: moments.moments.GetListHomeTimeLineOfMoments:input_type -> moments.ListHomeTimeLineOfMomentsReq
	20, // 63: moments.moments.GetMomentDetailsByID:input_type -> moments.GetMomentDetailsByIDRequest
	22, // 64: moments.moments.GetMomentCommentsByID:input_type -> moments.GetMomentCommentsByIDRequest
	24, // 65: moments.moments.RepostAMoment:input_type -> moments.RepostAMomentRequest
	25, // 66: moments.moments.GetAnyUserMomentsByID:input_type -> moments.GetAnyUserMomentsByIDRequest
	27, // 67: moments.moments.GetUserMomentCount:input_type -> moments.GetUserMomentCountRequest
	29, // 68: moments.moments.DeleteMoment:input_type -> moments.DeleteMomentRequest
	30, // 69: moments.moments.GetMoments:input_type -> moments.GetMomentsReq
	32, // 70: moments.moments.DeleteMoments:input_type -> moments.DeleteMomentsReq
	34, // 71: moments.moments.AlterMoment:input_type -> moments.AlterMomentReq
	36, // 72: moments.moments.ChangeMomentStatus:input_type -> moments.ChangeMomentStatusReq
	38, // 73: moments.moments.ModifyVisibility:input_type -> moments.ModifyVisibilityReq
	40, // 74: moments.moments.GetMomentDetails:input_type -> moments.GetMomentDetailsReq
	42, // 75: moments.moments.CtlMomentComment:input_type -> moments.CtlMomentCommentReq
	44, // 76: moments.moments.GetComments:input_type -> moments.GetCommentsReq
	46, // 77: moments.moments.RemoveComments:input_type -> moments.RemoveCommentsReq
	48, // 78: moments.moments.AlterComment:input_type -> moments.AlterCommentReq
	50, // 79: moments.moments.SwitchCommentHideState:input_type -> moments.SwitchCommentHideStateReq
	52, // 80: moments.moments.GetLikes:input_type -> moments.GetLikesReq
	54, // 81: moments.moments.RemoveLikes:input_type -> moments.RemoveLikesReq
	56, // 82: moments.moments.SwitchLikeHideState:input_type -> moments.SwitchLikeHideStateReq
	58, // 83: moments.moments.DeleteMomentComment:input_type -> moments.DeleteMomentCommentRequest
	59, // 84: moments.moments.GlobalSearchInMoments:input_type -> moments.GlobalSearchInMomentsRequest
	60, // 85: moments.moments.GetMomentAnyUserMediaByID:input_type -> moments.GetMomentAnyUserMediaByIDRequest
	5,  // 86: moments.moments.CreateMoment:output_type -> moments.CreateMomentResponse
	0,  // 87: moments.moments.CreateMomentLike:output_type -> moments.CommonResp
	0,  // 88: moments.moments.CancelMomentLike:output_type -> moments.CommonResp
	10, // 89: moments.moments.CreateMomentComment:output_type -> moments.MomentCommentResponse
	10, // 90: moments.moments.CreateReplyOfMomentComment:output_type -> moments.MomentCommentResponse
	14, // 91: moments.moments.GetListHomeTimeLineOfMoments:output_type -> moments.ListHomeTimeLineOfMoments
	21, // 92: moments.moments.GetMomentDetailsByID:output_type -> moments.GetMomentDetailsByIDResponse
	23, // 93: moments.moments.GetMomentCommentsByID:output_type -> moments.GetMomentCommentsByIDResponse
	5,  // 94: moments.moments.RepostAMoment:output_type -> moments.CreateMomentResponse
	26, // 95: moments.moments.GetAnyUserMomentsByID:output_type -> moments.GetAnyUserMomentsByIDResp
	28, // 96: moments.moments.GetUserMomentCount:output_type -> moments.GetUserMomentCountResp
	0,  // 97: moments.moments.DeleteMoment:output_type -> moments.CommonResp
	31, // 98: moments.moments.GetMoments:output_type -> moments.GetMomentsResp
	33, // 99: moments.moments.DeleteMoments:output_type -> moments.DeleteMomentsResp
	35, // 100: moments.moments.AlterMoment:output_type -> moments.AlterMomentResp
	37, // 101: moments.moments.ChangeMomentStatus:output_type -> moments.ChangeMomentStatusResp
	39, // 102: moments.moments.ModifyVisibility:output_type -> moments.ModifyVisibilityResp
	41, // 103: moments.moments.GetMomentDetails:output_type -> moments.GetMomentDetailsResp
	43, // 104: moments.moments.CtlMomentComment:output_type -> moments.CtlMomentCommentResp
	45, // 105: moments.moments.GetComments:output_type -> moments.GetCommentsResp
	47, // 106: moments.moments.RemoveComments:output_type -> moments.RemoveCommentsResp
	49, // 107: moments.moments.AlterComment:output_type -> moments.AlterCommentResp
	51, // 108: moments.moments.SwitchCommentHideState:output_type -> moments.SwitchCommentHideStateResp
	53, // 109: moments.moments.GetLikes:output_type -> moments.GetLikesResp
	55, // 110: moments.moments.RemoveLikes:output_type -> moments.RemoveLikesResp
	57, // 111: moments.moments.SwitchLikeHideState:output_type -> moments.SwitchLikeHideStateResp
	0,  // 112: moments.moments.DeleteMomentComment:output_type -> moments.CommonResp
	14, // 113: moments.moments.GlobalSearchInMoments:output_type -> moments.ListHomeTimeLineOfMoments
	62, // 114: moments.moments.GetMomentAnyUserMediaByID:output_type -> moments.GetMomentAnyUserMediaByIDResp
	86, // [86:115] is the sub-list for method output_type
	57, // [57:86] is the sub-list for method input_type
	57, // [57:57] is the sub-list for extension type_name
	57, // [57:57] is the sub-list for extension extendee
	0,  // [0:57] is the sub-list for field type_name
}

func init() { file_moments_moments_proto_init() }
func file_moments_moments_proto_init() {
	if File_moments_moments_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_moments_moments_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Moment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MomentImageRequestObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MomentVideoRequestObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleDetailsInMoment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMomentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MomentLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MomentCancelLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MomentComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MomentCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyOfMomentComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHomeTimeLineOfMomentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHomeTimeLineOfMoments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeTimeLineOfMoments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MomentLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MomentCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MomentDetailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentDetailsByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentDetailsByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentCommentsByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentCommentsByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepostAMomentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnyUserMomentsByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnyUserMomentsByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserMomentCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserMomentCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMomentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMomentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMomentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMomentStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMomentStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVisibilityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVisibilityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtlMomentCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtlMomentCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCommentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCommentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchCommentHideStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchCommentHideStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLikesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchLikeHideStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchLikeHideStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMomentCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalSearchInMomentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentAnyUserMediaByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMomentAnyUserMediaByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moments_moments_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_moments_moments_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   64,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_moments_moments_proto_goTypes,
		DependencyIndexes: file_moments_moments_proto_depIdxs,
		MessageInfos:      file_moments_moments_proto_msgTypes,
	}.Build()
	File_moments_moments_proto = out.File
	file_moments_moments_proto_rawDesc = nil
	file_moments_moments_proto_goTypes = nil
	file_moments_moments_proto_depIdxs = nil
}
