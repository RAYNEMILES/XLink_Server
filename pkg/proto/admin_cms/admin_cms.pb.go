// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: admin_cms/admin_cms.proto

package admin_cms

import (
	appversion "Open_IM/pkg/proto/appversion"
	sdk_ws "Open_IM/pkg/proto/sdk_ws"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type AdminUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	NickName         string `protobuf:"bytes,2,opt,name=NickName,proto3" json:"NickName,omitempty"`
	UserId           string `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CreateTime       int64  `protobuf:"varint,4,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Status           int32  `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	TwoFactorEnabled int64  `protobuf:"varint,7,opt,name=TwoFactorEnabled,proto3" json:"TwoFactorEnabled,omitempty"`
	Role             int64  `protobuf:"varint,8,opt,name=Role,proto3" json:"Role,omitempty"`
	CreateUser       string `protobuf:"bytes,9,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	UpdateUser       string `protobuf:"bytes,10,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	IPRangeStart     string `protobuf:"bytes,11,opt,name=IPRangeStart,proto3" json:"IPRangeStart,omitempty"`
	IPRangeEnd       string `protobuf:"bytes,12,opt,name=IPRangeEnd,proto3" json:"IPRangeEnd,omitempty"`
	LastLoginIP      string `protobuf:"bytes,13,opt,name=LastLoginIP,proto3" json:"LastLoginIP,omitempty"`
	Remarks          string `protobuf:"bytes,14,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	User2FAuthEnable int64  `protobuf:"varint,15,opt,name=User2FAuthEnable,proto3" json:"User2FAuthEnable,omitempty"`
	LastLoginTime    int64  `protobuf:"varint,16,opt,name=LastLoginTime,proto3" json:"LastLoginTime,omitempty"`
}

func (x *AdminUser) Reset() {
	*x = AdminUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUser) ProtoMessage() {}

func (x *AdminUser) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUser.ProtoReflect.Descriptor instead.
func (*AdminUser) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{1}
}

func (x *AdminUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminUser) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AdminUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AdminUser) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AdminUser) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdminUser) GetTwoFactorEnabled() int64 {
	if x != nil {
		return x.TwoFactorEnabled
	}
	return 0
}

func (x *AdminUser) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *AdminUser) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *AdminUser) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *AdminUser) GetIPRangeStart() string {
	if x != nil {
		return x.IPRangeStart
	}
	return ""
}

func (x *AdminUser) GetIPRangeEnd() string {
	if x != nil {
		return x.IPRangeEnd
	}
	return ""
}

func (x *AdminUser) GetLastLoginIP() string {
	if x != nil {
		return x.LastLoginIP
	}
	return ""
}

func (x *AdminUser) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *AdminUser) GetUser2FAuthEnable() int64 {
	if x != nil {
		return x.User2FAuthEnable
	}
	return 0
}

func (x *AdminUser) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

type InterestLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	InterestId   int64  `protobuf:"varint,2,opt,name=InterestId,proto3" json:"InterestId,omitempty"`
	LanguageType string `protobuf:"bytes,3,opt,name=LanguageType,proto3" json:"LanguageType,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *InterestLanguage) Reset() {
	*x = InterestLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestLanguage) ProtoMessage() {}

func (x *InterestLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestLanguage.ProtoReflect.Descriptor instead.
func (*InterestLanguage) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{2}
}

func (x *InterestLanguage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InterestLanguage) GetInterestId() int64 {
	if x != nil {
		return x.InterestId
	}
	return 0
}

func (x *InterestLanguage) GetLanguageType() string {
	if x != nil {
		return x.LanguageType
	}
	return ""
}

func (x *InterestLanguage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type InterestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       []*InterestLanguage `protobuf:"bytes,2,rep,name=Name,proto3" json:"Name,omitempty"`
	Status     int32               `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	UpdateUser string              `protobuf:"bytes,4,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	UpdateTime int64               `protobuf:"varint,5,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Remark     string              `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark,omitempty"`
	CreateUser string              `protobuf:"bytes,7,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	CreateTime int64               `protobuf:"varint,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	DeleteTime int64               `protobuf:"varint,9,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
	IsDefault  int32               `protobuf:"varint,10,opt,name=IsDefault,proto3" json:"IsDefault,omitempty"`
}

func (x *InterestReq) Reset() {
	*x = InterestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestReq) ProtoMessage() {}

func (x *InterestReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestReq.ProtoReflect.Descriptor instead.
func (*InterestReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{3}
}

func (x *InterestReq) GetName() []*InterestLanguage {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *InterestReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *InterestReq) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *InterestReq) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *InterestReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *InterestReq) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *InterestReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *InterestReq) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *InterestReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type InterestResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64               `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name       []*InterestLanguage `protobuf:"bytes,2,rep,name=Name,proto3" json:"Name,omitempty"`
	Status     int32               `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	UpdateUser string              `protobuf:"bytes,4,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	UpdateTime int64               `protobuf:"varint,5,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Remark     string              `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark,omitempty"`
	CreateUser string              `protobuf:"bytes,7,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	CreateTime int64               `protobuf:"varint,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	DeleteTime int64               `protobuf:"varint,9,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
	IsDefault  int32               `protobuf:"varint,10,opt,name=IsDefault,proto3" json:"IsDefault,omitempty"`
}

func (x *InterestResp) Reset() {
	*x = InterestResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestResp) ProtoMessage() {}

func (x *InterestResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestResp.ProtoReflect.Descriptor instead.
func (*InterestResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{4}
}

func (x *InterestResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InterestResp) GetName() []*InterestLanguage {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *InterestResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *InterestResp) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *InterestResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *InterestResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *InterestResp) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *InterestResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *InterestResp) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *InterestResp) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type UserInterests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string          `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	UserID    string          `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Type      int32           `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Interests []*InterestResp `protobuf:"bytes,4,rep,name=Interests,proto3" json:"Interests,omitempty"`
}

func (x *UserInterests) Reset() {
	*x = UserInterests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInterests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInterests) ProtoMessage() {}

func (x *UserInterests) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInterests.ProtoReflect.Descriptor instead.
func (*UserInterests) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{5}
}

func (x *UserInterests) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInterests) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserInterests) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserInterests) GetInterests() []*InterestResp {
	if x != nil {
		return x.Interests
	}
	return nil
}

type GroupInterests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID   string          `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupName string          `protobuf:"bytes,2,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	GroupType int32           `protobuf:"varint,3,opt,name=GroupType,proto3" json:"GroupType,omitempty"`
	Interests []*InterestResp `protobuf:"bytes,4,rep,name=Interests,proto3" json:"Interests,omitempty"`
}

func (x *GroupInterests) Reset() {
	*x = GroupInterests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInterests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInterests) ProtoMessage() {}

func (x *GroupInterests) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInterests.ProtoReflect.Descriptor instead.
func (*GroupInterests) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{6}
}

func (x *GroupInterests) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GroupInterests) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupInterests) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *GroupInterests) GetInterests() []*InterestResp {
	if x != nil {
		return x.Interests
	}
	return nil
}

type AdminLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	AdminID        string `protobuf:"bytes,2,opt,name=AdminID,proto3" json:"AdminID,omitempty"`
	Secret         string `protobuf:"bytes,3,opt,name=Secret,proto3" json:"Secret,omitempty"`
	GAuthTypeToken bool   `protobuf:"varint,4,opt,name=GAuthTypeToken,proto3" json:"GAuthTypeToken,omitempty"`
	SecretHashd    bool   `protobuf:"varint,5,opt,name=SecretHashd,proto3" json:"SecretHashd,omitempty"`
	RequestIP      string `protobuf:"bytes,6,opt,name=RequestIP,proto3" json:"RequestIP,omitempty"`
}

func (x *AdminLoginReq) Reset() {
	*x = AdminLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginReq) ProtoMessage() {}

func (x *AdminLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginReq.ProtoReflect.Descriptor instead.
func (*AdminLoginReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{7}
}

func (x *AdminLoginReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AdminLoginReq) GetAdminID() string {
	if x != nil {
		return x.AdminID
	}
	return ""
}

func (x *AdminLoginReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AdminLoginReq) GetGAuthTypeToken() bool {
	if x != nil {
		return x.GAuthTypeToken
	}
	return false
}

func (x *AdminLoginReq) GetSecretHashd() bool {
	if x != nil {
		return x.SecretHashd
	}
	return false
}

func (x *AdminLoginReq) GetRequestIP() string {
	if x != nil {
		return x.RequestIP
	}
	return ""
}

type AdminLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token              string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	GAuthEnabled       bool   `protobuf:"varint,2,opt,name=GAuthEnabled,proto3" json:"GAuthEnabled,omitempty"`
	GAuthSetupRequired bool   `protobuf:"varint,3,opt,name=GAuthSetupRequired,proto3" json:"GAuthSetupRequired,omitempty"`
	GAuthSetupProvUri  string `protobuf:"bytes,4,opt,name=GAuthSetupProvUri,proto3" json:"GAuthSetupProvUri,omitempty"`
}

func (x *AdminLoginResp) Reset() {
	*x = AdminLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginResp) ProtoMessage() {}

func (x *AdminLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginResp.ProtoReflect.Descriptor instead.
func (*AdminLoginResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{8}
}

func (x *AdminLoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AdminLoginResp) GetGAuthEnabled() bool {
	if x != nil {
		return x.GAuthEnabled
	}
	return false
}

func (x *AdminLoginResp) GetGAuthSetupRequired() bool {
	if x != nil {
		return x.GAuthSetupRequired
	}
	return false
}

func (x *AdminLoginResp) GetGAuthSetupProvUri() string {
	if x != nil {
		return x.GAuthSetupProvUri
	}
	return ""
}

type DiscoverUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Url        string `protobuf:"bytes,2,opt,name=Url,proto3" json:"Url,omitempty"`
	Status     int64  `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	PlatformId int64  `protobuf:"varint,4,opt,name=PlatformId,proto3" json:"PlatformId,omitempty"`
	CreateTime int64  `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	CreateUser string `protobuf:"bytes,6,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	UpdateTime int64  `protobuf:"varint,7,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	UpdateUser string `protobuf:"bytes,8,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	DeleteTime int64  `protobuf:"varint,9,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
	DeleteUser string `protobuf:"bytes,10,opt,name=DeleteUser,proto3" json:"DeleteUser,omitempty"`
}

func (x *DiscoverUrl) Reset() {
	*x = DiscoverUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverUrl) ProtoMessage() {}

func (x *DiscoverUrl) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverUrl.ProtoReflect.Descriptor instead.
func (*DiscoverUrl) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{9}
}

func (x *DiscoverUrl) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DiscoverUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DiscoverUrl) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DiscoverUrl) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *DiscoverUrl) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *DiscoverUrl) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *DiscoverUrl) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *DiscoverUrl) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *DiscoverUrl) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *DiscoverUrl) GetDeleteUser() string {
	if x != nil {
		return x.DeleteUser
	}
	return ""
}

type GetDiscoverUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	PlatformID  string `protobuf:"bytes,2,opt,name=PlatformID,proto3" json:"PlatformID,omitempty"`
	UserId      string `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetDiscoverUrlReq) Reset() {
	*x = GetDiscoverUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscoverUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscoverUrlReq) ProtoMessage() {}

func (x *GetDiscoverUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscoverUrlReq.ProtoReflect.Descriptor instead.
func (*GetDiscoverUrlReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{10}
}

func (x *GetDiscoverUrlReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetDiscoverUrlReq) GetPlatformID() string {
	if x != nil {
		return x.PlatformID
	}
	return ""
}

func (x *GetDiscoverUrlReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetDiscoverUrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url *DiscoverUrl `protobuf:"bytes,1,opt,name=Url,proto3" json:"Url,omitempty"`
}

func (x *GetDiscoverUrlResp) Reset() {
	*x = GetDiscoverUrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscoverUrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscoverUrlResp) ProtoMessage() {}

func (x *GetDiscoverUrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscoverUrlResp.ProtoReflect.Descriptor instead.
func (*GetDiscoverUrlResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{11}
}

func (x *GetDiscoverUrlResp) GetUrl() *DiscoverUrl {
	if x != nil {
		return x.Url
	}
	return nil
}

type GetInviteCodeBaseLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *GetInviteCodeBaseLinkReq) Reset() {
	*x = GetInviteCodeBaseLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInviteCodeBaseLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteCodeBaseLinkReq) ProtoMessage() {}

func (x *GetInviteCodeBaseLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteCodeBaseLinkReq.ProtoReflect.Descriptor instead.
func (*GetInviteCodeBaseLinkReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{12}
}

func (x *GetInviteCodeBaseLinkReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetInviteCodeBaseLinkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCodeBaseLink string `protobuf:"bytes,1,opt,name=InviteCodeBaseLink,proto3" json:"InviteCodeBaseLink,omitempty"`
}

func (x *GetInviteCodeBaseLinkResp) Reset() {
	*x = GetInviteCodeBaseLinkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInviteCodeBaseLinkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteCodeBaseLinkResp) ProtoMessage() {}

func (x *GetInviteCodeBaseLinkResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteCodeBaseLinkResp.ProtoReflect.Descriptor instead.
func (*GetInviteCodeBaseLinkResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{13}
}

func (x *GetInviteCodeBaseLinkResp) GetInviteCodeBaseLink() string {
	if x != nil {
		return x.InviteCodeBaseLink
	}
	return ""
}

type SetInviteCodeBaseLinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Value       string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	UpdateUser  string `protobuf:"bytes,4,opt,name=update_user,json=updateUser,proto3" json:"update_user,omitempty"`
}

func (x *SetInviteCodeBaseLinkReq) Reset() {
	*x = SetInviteCodeBaseLinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetInviteCodeBaseLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInviteCodeBaseLinkReq) ProtoMessage() {}

func (x *SetInviteCodeBaseLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInviteCodeBaseLinkReq.ProtoReflect.Descriptor instead.
func (*SetInviteCodeBaseLinkReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{14}
}

func (x *SetInviteCodeBaseLinkReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SetInviteCodeBaseLinkReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SetInviteCodeBaseLinkReq) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type AddInviteCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Code        string `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Greeting    string `protobuf:"bytes,4,opt,name=Greeting,proto3" json:"Greeting,omitempty"`
	Note        string `protobuf:"bytes,5,opt,name=Note,proto3" json:"Note,omitempty"`
}

func (x *AddInviteCodeRequest) Reset() {
	*x = AddInviteCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInviteCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInviteCodeRequest) ProtoMessage() {}

func (x *AddInviteCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInviteCodeRequest.ProtoReflect.Descriptor instead.
func (*AddInviteCodeRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{15}
}

func (x *AddInviteCodeRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddInviteCodeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddInviteCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddInviteCodeRequest) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *AddInviteCodeRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type AddInviteCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	InviteCode string                 `protobuf:"bytes,2,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
}

func (x *AddInviteCodeResponse) Reset() {
	*x = AddInviteCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInviteCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInviteCodeResponse) ProtoMessage() {}

func (x *AddInviteCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInviteCodeResponse.ProtoReflect.Descriptor instead.
func (*AddInviteCodeResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{16}
}

func (x *AddInviteCodeResponse) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *AddInviteCodeResponse) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

type SaveDiscoverUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=Url,proto3" json:"Url,omitempty"`
	UserID      string `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PlatformID  string `protobuf:"bytes,4,opt,name=PlatformID,proto3" json:"PlatformID,omitempty"`
}

func (x *SaveDiscoverUrlReq) Reset() {
	*x = SaveDiscoverUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDiscoverUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDiscoverUrlReq) ProtoMessage() {}

func (x *SaveDiscoverUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDiscoverUrlReq.ProtoReflect.Descriptor instead.
func (*SaveDiscoverUrlReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{17}
}

func (x *SaveDiscoverUrlReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SaveDiscoverUrlReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SaveDiscoverUrlReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SaveDiscoverUrlReq) GetPlatformID() string {
	if x != nil {
		return x.PlatformID
	}
	return ""
}

type SaveDiscoverUrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SaveDiscoverUrlResp) Reset() {
	*x = SaveDiscoverUrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDiscoverUrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDiscoverUrlResp) ProtoMessage() {}

func (x *SaveDiscoverUrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDiscoverUrlResp.ProtoReflect.Descriptor instead.
func (*SaveDiscoverUrlResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{18}
}

func (x *SaveDiscoverUrlResp) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SwitchDiscoverStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Status      uint32 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	UserID      string `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PlatformID  string `protobuf:"bytes,4,opt,name=PlatformID,proto3" json:"PlatformID,omitempty"`
}

func (x *SwitchDiscoverStatusReq) Reset() {
	*x = SwitchDiscoverStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchDiscoverStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchDiscoverStatusReq) ProtoMessage() {}

func (x *SwitchDiscoverStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchDiscoverStatusReq.ProtoReflect.Descriptor instead.
func (*SwitchDiscoverStatusReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{19}
}

func (x *SwitchDiscoverStatusReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SwitchDiscoverStatusReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SwitchDiscoverStatusReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SwitchDiscoverStatusReq) GetPlatformID() string {
	if x != nil {
		return x.PlatformID
	}
	return ""
}

type SwitchDiscoverStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SwitchDiscoverStatusResp) Reset() {
	*x = SwitchDiscoverStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchDiscoverStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchDiscoverStatusResp) ProtoMessage() {}

func (x *SwitchDiscoverStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchDiscoverStatusResp.ProtoReflect.Descriptor instead.
func (*SwitchDiscoverStatusResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{20}
}

func (x *SwitchDiscoverStatusResp) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type CheckInviteCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode string `protobuf:"bytes,1,opt,name=InviteCode,proto3" json:"InviteCode,omitempty"`
}

func (x *CheckInviteCodeRequest) Reset() {
	*x = CheckInviteCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInviteCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInviteCodeRequest) ProtoMessage() {}

func (x *CheckInviteCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInviteCodeRequest.ProtoReflect.Descriptor instead.
func (*CheckInviteCodeRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{21}
}

func (x *CheckInviteCodeRequest) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

type CheckInviteCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *CheckInviteCodeResponse) Reset() {
	*x = CheckInviteCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckInviteCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInviteCodeResponse) ProtoMessage() {}

func (x *CheckInviteCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInviteCodeResponse.ProtoReflect.Descriptor instead.
func (*CheckInviteCodeResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{22}
}

func (x *CheckInviteCodeResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type GetChannelCodeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                        `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination     `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	Conditions  *GetChannelCodeListConditions `protobuf:"bytes,3,opt,name=Conditions,proto3" json:"Conditions,omitempty"`
}

func (x *GetChannelCodeListRequest) Reset() {
	*x = GetChannelCodeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelCodeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelCodeListRequest) ProtoMessage() {}

func (x *GetChannelCodeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelCodeListRequest.ProtoReflect.Descriptor instead.
func (*GetChannelCodeListRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{23}
}

func (x *GetChannelCodeListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetChannelCodeListRequest) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetChannelCodeListRequest) GetConditions() *GetChannelCodeListConditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type GetChannelCodeListConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	FriendId   string `protobuf:"bytes,2,opt,name=FriendId,proto3" json:"FriendId,omitempty"`
	GroupId    string `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Note       string `protobuf:"bytes,4,opt,name=Note,proto3" json:"Note,omitempty"`
	State      string `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	IsOfficial string `protobuf:"bytes,6,opt,name=IsOfficial,proto3" json:"IsOfficial,omitempty"`
	OrderBy    string `protobuf:"bytes,7,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
}

func (x *GetChannelCodeListConditions) Reset() {
	*x = GetChannelCodeListConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelCodeListConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelCodeListConditions) ProtoMessage() {}

func (x *GetChannelCodeListConditions) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelCodeListConditions.ProtoReflect.Descriptor instead.
func (*GetChannelCodeListConditions) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{24}
}

func (x *GetChannelCodeListConditions) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChannelCodeListConditions) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *GetChannelCodeListConditions) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetChannelCodeListConditions) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *GetChannelCodeListConditions) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetChannelCodeListConditions) GetIsOfficial() string {
	if x != nil {
		return x.IsOfficial
	}
	return ""
}

func (x *GetChannelCodeListConditions) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type GetChannelCodeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentNumber int64          `protobuf:"varint,1,opt,name=CurrentNumber,proto3" json:"CurrentNumber,omitempty"`
	ShowNumber    int64          `protobuf:"varint,2,opt,name=ShowNumber,proto3" json:"ShowNumber,omitempty"`
	Total         int64          `protobuf:"varint,3,opt,name=Total,proto3" json:"Total,omitempty"`
	IsOpen        int64          `protobuf:"varint,4,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Limit         int64          `protobuf:"varint,5,opt,name=Limit,proto3" json:"Limit,omitempty"`
	ChannelCodes  []*ChannelCode `protobuf:"bytes,6,rep,name=ChannelCodes,proto3" json:"ChannelCodes,omitempty"`
}

func (x *GetChannelCodeListResponse) Reset() {
	*x = GetChannelCodeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelCodeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelCodeListResponse) ProtoMessage() {}

func (x *GetChannelCodeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelCodeListResponse.ProtoReflect.Descriptor instead.
func (*GetChannelCodeListResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{25}
}

func (x *GetChannelCodeListResponse) GetCurrentNumber() int64 {
	if x != nil {
		return x.CurrentNumber
	}
	return 0
}

func (x *GetChannelCodeListResponse) GetShowNumber() int64 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

func (x *GetChannelCodeListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetChannelCodeListResponse) GetIsOpen() int64 {
	if x != nil {
		return x.IsOpen
	}
	return 0
}

func (x *GetChannelCodeListResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChannelCodeListResponse) GetChannelCodes() []*ChannelCode {
	if x != nil {
		return x.ChannelCodes
	}
	return nil
}

type ChannelCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string     `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Code      string     `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Greeting  string     `protobuf:"bytes,3,opt,name=Greeting,proto3" json:"Greeting,omitempty"`
	Note      string     `protobuf:"bytes,4,opt,name=Note,proto3" json:"Note,omitempty"`
	State     string     `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	GroupIds  []string   `protobuf:"bytes,6,rep,name=GroupIds,proto3" json:"GroupIds,omitempty"`
	FriendIds []string   `protobuf:"bytes,7,rep,name=FriendIds,proto3" json:"FriendIds,omitempty"`
	SourceId  int64      `protobuf:"varint,8,opt,name=SourceId,proto3" json:"SourceId,omitempty"`
	Friends   []*Friends `protobuf:"bytes,9,rep,name=Friends,proto3" json:"Friends,omitempty"`
	Groups    []*Groups  `protobuf:"bytes,10,rep,name=Groups,proto3" json:"Groups,omitempty"`
}

func (x *ChannelCode) Reset() {
	*x = ChannelCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCode) ProtoMessage() {}

func (x *ChannelCode) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCode.ProtoReflect.Descriptor instead.
func (*ChannelCode) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{26}
}

func (x *ChannelCode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChannelCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ChannelCode) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *ChannelCode) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ChannelCode) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ChannelCode) GetGroupIds() []string {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *ChannelCode) GetFriendIds() []string {
	if x != nil {
		return x.FriendIds
	}
	return nil
}

func (x *ChannelCode) GetSourceId() int64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *ChannelCode) GetFriends() []*Friends {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *ChannelCode) GetGroups() []*Groups {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Friends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Friends) Reset() {
	*x = Friends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friends) ProtoMessage() {}

func (x *Friends) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friends.ProtoReflect.Descriptor instead.
func (*Friends) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{27}
}

func (x *Friends) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Friends) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Groups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Groups) Reset() {
	*x = Groups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Groups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Groups) ProtoMessage() {}

func (x *Groups) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Groups.ProtoReflect.Descriptor instead.
func (*Groups) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{28}
}

func (x *Groups) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Groups) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SwitchChannelCodeStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Code           string `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	State          string `protobuf:"bytes,3,opt,name=State,proto3" json:"State,omitempty"`
	OperatorUserId string `protobuf:"bytes,4,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
}

func (x *SwitchChannelCodeStateRequest) Reset() {
	*x = SwitchChannelCodeStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchChannelCodeStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchChannelCodeStateRequest) ProtoMessage() {}

func (x *SwitchChannelCodeStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchChannelCodeStateRequest.ProtoReflect.Descriptor instead.
func (*SwitchChannelCodeStateRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{29}
}

func (x *SwitchChannelCodeStateRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SwitchChannelCodeStateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SwitchChannelCodeStateRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SwitchChannelCodeStateRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

type SwitchChannelCodeStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SwitchChannelCodeStateResponse) Reset() {
	*x = SwitchChannelCodeStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchChannelCodeStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchChannelCodeStateResponse) ProtoMessage() {}

func (x *SwitchChannelCodeStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchChannelCodeStateResponse.ProtoReflect.Descriptor instead.
func (*SwitchChannelCodeStateResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{30}
}

func (x *SwitchChannelCodeStateResponse) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type EditChannelCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Code           string `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Greeting       string `protobuf:"bytes,3,opt,name=Greeting,proto3" json:"Greeting,omitempty"`
	Note           string `protobuf:"bytes,4,opt,name=Note,proto3" json:"Note,omitempty"`
	FriendIds      string `protobuf:"bytes,5,opt,name=FriendIds,proto3" json:"FriendIds,omitempty"`
	GroupIds       string `protobuf:"bytes,6,opt,name=GroupIds,proto3" json:"GroupIds,omitempty"`
	OperatorUserId string `protobuf:"bytes,7,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
	SourceId       int64  `protobuf:"varint,8,opt,name=SourceId,proto3" json:"SourceId,omitempty"`
}

func (x *EditChannelCodeRequest) Reset() {
	*x = EditChannelCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChannelCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChannelCodeRequest) ProtoMessage() {}

func (x *EditChannelCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChannelCodeRequest.ProtoReflect.Descriptor instead.
func (*EditChannelCodeRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{31}
}

func (x *EditChannelCodeRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *EditChannelCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EditChannelCodeRequest) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *EditChannelCodeRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *EditChannelCodeRequest) GetFriendIds() string {
	if x != nil {
		return x.FriendIds
	}
	return ""
}

func (x *EditChannelCodeRequest) GetGroupIds() string {
	if x != nil {
		return x.GroupIds
	}
	return ""
}

func (x *EditChannelCodeRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

func (x *EditChannelCodeRequest) GetSourceId() int64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

type EditChannelCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *EditChannelCodeResponse) Reset() {
	*x = EditChannelCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChannelCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChannelCodeResponse) ProtoMessage() {}

func (x *EditChannelCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChannelCodeResponse.ProtoReflect.Descriptor instead.
func (*EditChannelCodeResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{32}
}

func (x *EditChannelCodeResponse) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AddChannelCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Code           string `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Greeting       string `protobuf:"bytes,3,opt,name=Greeting,proto3" json:"Greeting,omitempty"`
	Note           string `protobuf:"bytes,4,opt,name=Note,proto3" json:"Note,omitempty"`
	FriendIds      string `protobuf:"bytes,5,opt,name=FriendIds,proto3" json:"FriendIds,omitempty"`
	GroupIds       string `protobuf:"bytes,6,opt,name=GroupIds,proto3" json:"GroupIds,omitempty"`
	OperatorUserId string `protobuf:"bytes,7,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
	SourceId       int64  `protobuf:"varint,8,opt,name=SourceId,proto3" json:"SourceId,omitempty"`
}

func (x *AddChannelCodeRequest) Reset() {
	*x = AddChannelCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChannelCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChannelCodeRequest) ProtoMessage() {}

func (x *AddChannelCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChannelCodeRequest.ProtoReflect.Descriptor instead.
func (*AddChannelCodeRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{33}
}

func (x *AddChannelCodeRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddChannelCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddChannelCodeRequest) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *AddChannelCodeRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *AddChannelCodeRequest) GetFriendIds() string {
	if x != nil {
		return x.FriendIds
	}
	return ""
}

func (x *AddChannelCodeRequest) GetGroupIds() string {
	if x != nil {
		return x.GroupIds
	}
	return ""
}

func (x *AddChannelCodeRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

func (x *AddChannelCodeRequest) GetSourceId() int64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

type AddChannelCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddChannelCodeResponse) Reset() {
	*x = AddChannelCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChannelCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChannelCodeResponse) ProtoMessage() {}

func (x *AddChannelCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChannelCodeResponse.ProtoReflect.Descriptor instead.
func (*AddChannelCodeResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{34}
}

func (x *AddChannelCodeResponse) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type MultiDeleteChannelCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Code           []string `protobuf:"bytes,2,rep,name=Code,proto3" json:"Code,omitempty"`
	OperatorUserId string   `protobuf:"bytes,3,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
}

func (x *MultiDeleteChannelCodeRequest) Reset() {
	*x = MultiDeleteChannelCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiDeleteChannelCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiDeleteChannelCodeRequest) ProtoMessage() {}

func (x *MultiDeleteChannelCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiDeleteChannelCodeRequest.ProtoReflect.Descriptor instead.
func (*MultiDeleteChannelCodeRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{35}
}

func (x *MultiDeleteChannelCodeRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *MultiDeleteChannelCodeRequest) GetCode() []string {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *MultiDeleteChannelCodeRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

type MultiDeleteChannelCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *MultiDeleteChannelCodeResponse) Reset() {
	*x = MultiDeleteChannelCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiDeleteChannelCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiDeleteChannelCodeResponse) ProtoMessage() {}

func (x *MultiDeleteChannelCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiDeleteChannelCodeResponse.ProtoReflect.Descriptor instead.
func (*MultiDeleteChannelCodeResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{36}
}

func (x *MultiDeleteChannelCodeResponse) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SetChannelCodeLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	State          string `protobuf:"bytes,2,opt,name=State,proto3" json:"State,omitempty"`
	OperatorUserId string `protobuf:"bytes,3,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
}

func (x *SetChannelCodeLimitRequest) Reset() {
	*x = SetChannelCodeLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChannelCodeLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChannelCodeLimitRequest) ProtoMessage() {}

func (x *SetChannelCodeLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChannelCodeLimitRequest.ProtoReflect.Descriptor instead.
func (*SetChannelCodeLimitRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{37}
}

func (x *SetChannelCodeLimitRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SetChannelCodeLimitRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SetChannelCodeLimitRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

type SetChannelCodeLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SetChannelCodeLimitResponse) Reset() {
	*x = SetChannelCodeLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChannelCodeLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChannelCodeLimitResponse) ProtoMessage() {}

func (x *SetChannelCodeLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChannelCodeLimitResponse.ProtoReflect.Descriptor instead.
func (*SetChannelCodeLimitResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{38}
}

func (x *SetChannelCodeLimitResponse) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SetChannelCodeSwitchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	State          string `protobuf:"bytes,2,opt,name=State,proto3" json:"State,omitempty"`
	OperatorUserId string `protobuf:"bytes,3,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
}

func (x *SetChannelCodeSwitchRequest) Reset() {
	*x = SetChannelCodeSwitchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChannelCodeSwitchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChannelCodeSwitchRequest) ProtoMessage() {}

func (x *SetChannelCodeSwitchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChannelCodeSwitchRequest.ProtoReflect.Descriptor instead.
func (*SetChannelCodeSwitchRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{39}
}

func (x *SetChannelCodeSwitchRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SetChannelCodeSwitchRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SetChannelCodeSwitchRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

type SetChannelCodeSwitchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SetChannelCodeSwitchResponse) Reset() {
	*x = SetChannelCodeSwitchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChannelCodeSwitchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChannelCodeSwitchResponse) ProtoMessage() {}

func (x *SetChannelCodeSwitchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChannelCodeSwitchResponse.ProtoReflect.Descriptor instead.
func (*SetChannelCodeSwitchResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{40}
}

func (x *SetChannelCodeSwitchResponse) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SetInviteCodeSwitchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	State          string `protobuf:"bytes,2,opt,name=State,proto3" json:"State,omitempty"`
	OperatorUserId string `protobuf:"bytes,3,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
}

func (x *SetInviteCodeSwitchRequest) Reset() {
	*x = SetInviteCodeSwitchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetInviteCodeSwitchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInviteCodeSwitchRequest) ProtoMessage() {}

func (x *SetInviteCodeSwitchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInviteCodeSwitchRequest.ProtoReflect.Descriptor instead.
func (*SetInviteCodeSwitchRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{41}
}

func (x *SetInviteCodeSwitchRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SetInviteCodeSwitchRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SetInviteCodeSwitchRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

type SetInviteCodeSwitchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SetInviteCodeSwitchResponse) Reset() {
	*x = SetInviteCodeSwitchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetInviteCodeSwitchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInviteCodeSwitchResponse) ProtoMessage() {}

func (x *SetInviteCodeSwitchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInviteCodeSwitchResponse.ProtoReflect.Descriptor instead.
func (*SetInviteCodeSwitchResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{42}
}

func (x *SetInviteCodeSwitchResponse) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SetInviteCodeLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	State          string `protobuf:"bytes,2,opt,name=State,proto3" json:"State,omitempty"`
	OperatorUserId string `protobuf:"bytes,3,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
}

func (x *SetInviteCodeLimitRequest) Reset() {
	*x = SetInviteCodeLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetInviteCodeLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInviteCodeLimitRequest) ProtoMessage() {}

func (x *SetInviteCodeLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInviteCodeLimitRequest.ProtoReflect.Descriptor instead.
func (*SetInviteCodeLimitRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{43}
}

func (x *SetInviteCodeLimitRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SetInviteCodeLimitRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SetInviteCodeLimitRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

type SetInviteCodeLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SetInviteCodeLimitResponse) Reset() {
	*x = SetInviteCodeLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetInviteCodeLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInviteCodeLimitResponse) ProtoMessage() {}

func (x *SetInviteCodeLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInviteCodeLimitResponse.ProtoReflect.Descriptor instead.
func (*SetInviteCodeLimitResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{44}
}

func (x *SetInviteCodeLimitResponse) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type MultiDeleteInviteCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Code           []string `protobuf:"bytes,2,rep,name=Code,proto3" json:"Code,omitempty"`
	OperatorUserId string   `protobuf:"bytes,3,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
}

func (x *MultiDeleteInviteCodeRequest) Reset() {
	*x = MultiDeleteInviteCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiDeleteInviteCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiDeleteInviteCodeRequest) ProtoMessage() {}

func (x *MultiDeleteInviteCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiDeleteInviteCodeRequest.ProtoReflect.Descriptor instead.
func (*MultiDeleteInviteCodeRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{45}
}

func (x *MultiDeleteInviteCodeRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *MultiDeleteInviteCodeRequest) GetCode() []string {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *MultiDeleteInviteCodeRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

type MultiDeleteInviteCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *appversion.CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *MultiDeleteInviteCodeResponse) Reset() {
	*x = MultiDeleteInviteCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiDeleteInviteCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiDeleteInviteCodeResponse) ProtoMessage() {}

func (x *MultiDeleteInviteCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiDeleteInviteCodeResponse.ProtoReflect.Descriptor instead.
func (*MultiDeleteInviteCodeResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{46}
}

func (x *MultiDeleteInviteCodeResponse) GetCommonResp() *appversion.CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetInviteCodeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                       `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination    `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	Conditions  *GetInviteCodeListConditions `protobuf:"bytes,3,opt,name=Conditions,proto3" json:"Conditions,omitempty"`
}

func (x *GetInviteCodeListRequest) Reset() {
	*x = GetInviteCodeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInviteCodeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteCodeListRequest) ProtoMessage() {}

func (x *GetInviteCodeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteCodeListRequest.ProtoReflect.Descriptor instead.
func (*GetInviteCodeListRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{47}
}

func (x *GetInviteCodeListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetInviteCodeListRequest) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetInviteCodeListRequest) GetConditions() *GetInviteCodeListConditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type GetInviteCodeListConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Note     string `protobuf:"bytes,4,opt,name=Note,proto3" json:"Note,omitempty"`
	State    string `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	OrderBy  string `protobuf:"bytes,6,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
}

func (x *GetInviteCodeListConditions) Reset() {
	*x = GetInviteCodeListConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInviteCodeListConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteCodeListConditions) ProtoMessage() {}

func (x *GetInviteCodeListConditions) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteCodeListConditions.ProtoReflect.Descriptor instead.
func (*GetInviteCodeListConditions) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{48}
}

func (x *GetInviteCodeListConditions) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetInviteCodeListConditions) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetInviteCodeListConditions) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetInviteCodeListConditions) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *GetInviteCodeListConditions) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetInviteCodeListConditions) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type GetInviteCodeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentNumber      int64          `protobuf:"varint,1,opt,name=CurrentNumber,proto3" json:"CurrentNumber,omitempty"`
	ShowNumber         int64          `protobuf:"varint,2,opt,name=ShowNumber,proto3" json:"ShowNumber,omitempty"`
	Total              int64          `protobuf:"varint,3,opt,name=Total,proto3" json:"Total,omitempty"`
	IsOpen             int64          `protobuf:"varint,4,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Limit              int64          `protobuf:"varint,5,opt,name=Limit,proto3" json:"Limit,omitempty"`
	InviteCodeBaseLink string         `protobuf:"bytes,6,opt,name=InviteCodeBaseLink,proto3" json:"InviteCodeBaseLink,omitempty"`
	List               []*InviteCodes `protobuf:"bytes,7,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *GetInviteCodeListResponse) Reset() {
	*x = GetInviteCodeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInviteCodeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteCodeListResponse) ProtoMessage() {}

func (x *GetInviteCodeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteCodeListResponse.ProtoReflect.Descriptor instead.
func (*GetInviteCodeListResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{49}
}

func (x *GetInviteCodeListResponse) GetCurrentNumber() int64 {
	if x != nil {
		return x.CurrentNumber
	}
	return 0
}

func (x *GetInviteCodeListResponse) GetShowNumber() int64 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

func (x *GetInviteCodeListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetInviteCodeListResponse) GetIsOpen() int64 {
	if x != nil {
		return x.IsOpen
	}
	return 0
}

func (x *GetInviteCodeListResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetInviteCodeListResponse) GetInviteCodeBaseLink() string {
	if x != nil {
		return x.InviteCodeBaseLink
	}
	return ""
}

func (x *GetInviteCodeListResponse) GetList() []*InviteCodes {
	if x != nil {
		return x.List
	}
	return nil
}

type InviteCodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName string `protobuf:"bytes,4,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Greeting string `protobuf:"bytes,5,opt,name=Greeting,proto3" json:"Greeting,omitempty"`
	Note     string `protobuf:"bytes,6,opt,name=Note,proto3" json:"Note,omitempty"`
	State    string `protobuf:"bytes,7,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *InviteCodes) Reset() {
	*x = InviteCodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteCodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteCodes) ProtoMessage() {}

func (x *InviteCodes) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteCodes.ProtoReflect.Descriptor instead.
func (*InviteCodes) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{50}
}

func (x *InviteCodes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InviteCodes) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InviteCodes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InviteCodes) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *InviteCodes) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func (x *InviteCodes) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *InviteCodes) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type AddAdminUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddAdminUserResp) Reset() {
	*x = AddAdminUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminUserResp) ProtoMessage() {}

func (x *AddAdminUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminUserResp.ProtoReflect.Descriptor instead.
func (*AddAdminUserResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{51}
}

func (x *AddAdminUserResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AddAdminUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	NickName         string `protobuf:"bytes,3,opt,name=NickName,proto3" json:"NickName,omitempty"`
	Password         string `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	PhoneNumber      string `protobuf:"bytes,5,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	TwoFactorEnabled int64  `protobuf:"varint,6,opt,name=TwoFactorEnabled,proto3" json:"TwoFactorEnabled,omitempty"`
	OperationID      string `protobuf:"bytes,7,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId         string `protobuf:"bytes,8,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	IPRangeStart     string `protobuf:"bytes,9,opt,name=IPRangeStart,proto3" json:"IPRangeStart,omitempty"`
	IPRangeEnd       string `protobuf:"bytes,10,opt,name=IPRangeEnd,proto3" json:"IPRangeEnd,omitempty"`
	Role             int32  `protobuf:"varint,11,opt,name=Role,proto3" json:"Role,omitempty"`
	User2FAuthEnable int64  `protobuf:"varint,12,opt,name=User2FAuthEnable,proto3" json:"User2FAuthEnable,omitempty"`
	LastLoginIP      string `protobuf:"bytes,13,opt,name=LastLoginIP,proto3" json:"LastLoginIP,omitempty"`
	Remarks          string `protobuf:"bytes,14,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	Status           int64  `protobuf:"varint,15,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *AddAdminUserReq) Reset() {
	*x = AddAdminUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminUserReq) ProtoMessage() {}

func (x *AddAdminUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminUserReq.ProtoReflect.Descriptor instead.
func (*AddAdminUserReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{52}
}

func (x *AddAdminUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddAdminUserReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddAdminUserReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AddAdminUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddAdminUserReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AddAdminUserReq) GetTwoFactorEnabled() int64 {
	if x != nil {
		return x.TwoFactorEnabled
	}
	return 0
}

func (x *AddAdminUserReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddAdminUserReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *AddAdminUserReq) GetIPRangeStart() string {
	if x != nil {
		return x.IPRangeStart
	}
	return ""
}

func (x *AddAdminUserReq) GetIPRangeEnd() string {
	if x != nil {
		return x.IPRangeEnd
	}
	return ""
}

func (x *AddAdminUserReq) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *AddAdminUserReq) GetUser2FAuthEnable() int64 {
	if x != nil {
		return x.User2FAuthEnable
	}
	return 0
}

func (x *AddAdminUserReq) GetLastLoginIP() string {
	if x != nil {
		return x.LastLoginIP
	}
	return ""
}

func (x *AddAdminUserReq) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *AddAdminUserReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DeleteAdminUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=User_id,json=UserId,proto3" json:"User_id,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string `protobuf:"bytes,3,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
}

func (x *DeleteAdminUserReq) Reset() {
	*x = DeleteAdminUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAdminUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdminUserReq) ProtoMessage() {}

func (x *DeleteAdminUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdminUserReq.ProtoReflect.Descriptor instead.
func (*DeleteAdminUserReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteAdminUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteAdminUserReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteAdminUserReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

type DeleteAdminUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *DeleteAdminUserResp) Reset() {
	*x = DeleteAdminUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAdminUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdminUserResp) ProtoMessage() {}

func (x *DeleteAdminUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdminUserResp.ProtoReflect.Descriptor instead.
func (*DeleteAdminUserResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{54}
}

func (x *DeleteAdminUserResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AlterAdminUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	NickName         string `protobuf:"bytes,3,opt,name=NickName,proto3" json:"NickName,omitempty"`
	Password         string `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	PhoneNumber      string `protobuf:"bytes,5,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	TwoFactorEnabled int64  `protobuf:"varint,6,opt,name=TwoFactorEnabled,proto3" json:"TwoFactorEnabled,omitempty"`
	OperationID      string `protobuf:"bytes,7,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId         string `protobuf:"bytes,8,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	IPRangeStart     string `protobuf:"bytes,9,opt,name=IPRangeStart,proto3" json:"IPRangeStart,omitempty"`
	IPRangeEnd       string `protobuf:"bytes,10,opt,name=IPRangeEnd,proto3" json:"IPRangeEnd,omitempty"`
	Role             int32  `protobuf:"varint,11,opt,name=Role,proto3" json:"Role,omitempty"`
	User2FAuthEnable int64  `protobuf:"varint,12,opt,name=User2FAuthEnable,proto3" json:"User2FAuthEnable,omitempty"`
	LastLoginIP      string `protobuf:"bytes,13,opt,name=LastLoginIP,proto3" json:"LastLoginIP,omitempty"`
	Remarks          string `protobuf:"bytes,14,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	Status           int64  `protobuf:"varint,15,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *AlterAdminUserRequest) Reset() {
	*x = AlterAdminUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterAdminUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterAdminUserRequest) ProtoMessage() {}

func (x *AlterAdminUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterAdminUserRequest.ProtoReflect.Descriptor instead.
func (*AlterAdminUserRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{55}
}

func (x *AlterAdminUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AlterAdminUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlterAdminUserRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AlterAdminUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AlterAdminUserRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AlterAdminUserRequest) GetTwoFactorEnabled() int64 {
	if x != nil {
		return x.TwoFactorEnabled
	}
	return 0
}

func (x *AlterAdminUserRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterAdminUserRequest) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *AlterAdminUserRequest) GetIPRangeStart() string {
	if x != nil {
		return x.IPRangeStart
	}
	return ""
}

func (x *AlterAdminUserRequest) GetIPRangeEnd() string {
	if x != nil {
		return x.IPRangeEnd
	}
	return ""
}

func (x *AlterAdminUserRequest) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *AlterAdminUserRequest) GetUser2FAuthEnable() int64 {
	if x != nil {
		return x.User2FAuthEnable
	}
	return 0
}

func (x *AlterAdminUserRequest) GetLastLoginIP() string {
	if x != nil {
		return x.LastLoginIP
	}
	return ""
}

func (x *AlterAdminUserRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *AlterAdminUserRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AlterAdminUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterAdminUserResp) Reset() {
	*x = AlterAdminUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterAdminUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterAdminUserResp) ProtoMessage() {}

func (x *AlterAdminUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterAdminUserResp.ProtoReflect.Descriptor instead.
func (*AlterAdminUserResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{56}
}

func (x *AlterAdminUserResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetAdminUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	UserName    string                    `protobuf:"bytes,3,opt,name=UserName,proto3" json:"UserName,omitempty"`
}

func (x *GetAdminUsersReq) Reset() {
	*x = GetAdminUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminUsersReq) ProtoMessage() {}

func (x *GetAdminUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminUsersReq.ProtoReflect.Descriptor instead.
func (*GetAdminUsersReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{57}
}

func (x *GetAdminUsersReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAdminUsersReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAdminUsersReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type GetAdminUsersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	User       []*AdminUser               `protobuf:"bytes,2,rep,name=user,proto3" json:"user,omitempty"`
	Pagination *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	UserNums   int32                      `protobuf:"varint,4,opt,name=UserNums,proto3" json:"UserNums,omitempty"`
}

func (x *GetAdminUsersResp) Reset() {
	*x = GetAdminUsersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminUsersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminUsersResp) ProtoMessage() {}

func (x *GetAdminUsersResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminUsersResp.ProtoReflect.Descriptor instead.
func (*GetAdminUsersResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{58}
}

func (x *GetAdminUsersResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAdminUsersResp) GetUser() []*AdminUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetAdminUsersResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAdminUsersResp) GetUserNums() int32 {
	if x != nil {
		return x.UserNums
	}
	return 0
}

type SwitchAdminUserStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=User_id,json=UserId,proto3" json:"User_id,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string `protobuf:"bytes,3,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	Status      int32  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *SwitchAdminUserStatusReq) Reset() {
	*x = SwitchAdminUserStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchAdminUserStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchAdminUserStatusReq) ProtoMessage() {}

func (x *SwitchAdminUserStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchAdminUserStatusReq.ProtoReflect.Descriptor instead.
func (*SwitchAdminUserStatusReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{59}
}

func (x *SwitchAdminUserStatusReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SwitchAdminUserStatusReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SwitchAdminUserStatusReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *SwitchAdminUserStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ChangeAdminUserPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret      string `protobuf:"bytes,1,opt,name=Secret,proto3" json:"Secret,omitempty"`
	NewSecret   string `protobuf:"bytes,2,opt,name=NewSecret,proto3" json:"NewSecret,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	TOTP        string `protobuf:"bytes,4,opt,name=TOTP,proto3" json:"TOTP,omitempty"`
	UserId      string `protobuf:"bytes,5,opt,name=User_id,json=UserId,proto3" json:"User_id,omitempty"`
}

func (x *ChangeAdminUserPasswordReq) Reset() {
	*x = ChangeAdminUserPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAdminUserPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAdminUserPasswordReq) ProtoMessage() {}

func (x *ChangeAdminUserPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAdminUserPasswordReq.ProtoReflect.Descriptor instead.
func (*ChangeAdminUserPasswordReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{60}
}

func (x *ChangeAdminUserPasswordReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ChangeAdminUserPasswordReq) GetNewSecret() string {
	if x != nil {
		return x.NewSecret
	}
	return ""
}

func (x *ChangeAdminUserPasswordReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ChangeAdminUserPasswordReq) GetTOTP() string {
	if x != nil {
		return x.TOTP
	}
	return ""
}

func (x *ChangeAdminUserPasswordReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ChangeAdminUserPasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token           string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	PasswordUpdated bool   `protobuf:"varint,2,opt,name=PasswordUpdated,proto3" json:"PasswordUpdated,omitempty"`
}

func (x *ChangeAdminUserPasswordResp) Reset() {
	*x = ChangeAdminUserPasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAdminUserPasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAdminUserPasswordResp) ProtoMessage() {}

func (x *ChangeAdminUserPasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAdminUserPasswordResp.ProtoReflect.Descriptor instead.
func (*ChangeAdminUserPasswordResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{61}
}

func (x *ChangeAdminUserPasswordResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ChangeAdminUserPasswordResp) GetPasswordUpdated() bool {
	if x != nil {
		return x.PasswordUpdated
	}
	return false
}

type SwitchAdminUserStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SwitchAdminUserStatusResp) Reset() {
	*x = SwitchAdminUserStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchAdminUserStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchAdminUserStatusResp) ProtoMessage() {}

func (x *SwitchAdminUserStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchAdminUserStatusResp.ProtoReflect.Descriptor instead.
func (*SwitchAdminUserStatusResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{62}
}

func (x *SwitchAdminUserStatusResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AdminPermissionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=User_id,json=UserId,proto3" json:"User_id,omitempty"`
}

func (x *AdminPermissionsReq) Reset() {
	*x = AdminPermissionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminPermissionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminPermissionsReq) ProtoMessage() {}

func (x *AdminPermissionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminPermissionsReq.ProtoReflect.Descriptor instead.
func (*AdminPermissionsReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{63}
}

func (x *AdminPermissionsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AdminRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedApis  []*AdminApiPath  `protobuf:"bytes,1,rep,name=allowedApis,proto3" json:"allowedApis,omitempty"`
	AllowedPages []*AdminPagePath `protobuf:"bytes,2,rep,name=allowedPages,proto3" json:"allowedPages,omitempty"`
	Id           int64            `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Status       int64            `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *AdminRole) Reset() {
	*x = AdminRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRole) ProtoMessage() {}

func (x *AdminRole) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRole.ProtoReflect.Descriptor instead.
func (*AdminRole) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{64}
}

func (x *AdminRole) GetAllowedApis() []*AdminApiPath {
	if x != nil {
		return x.AllowedApis
	}
	return nil
}

func (x *AdminRole) GetAllowedPages() []*AdminPagePath {
	if x != nil {
		return x.AllowedPages
	}
	return nil
}

func (x *AdminRole) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminRole) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AdminAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName   string           `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty"`
	AllowedApis  []*AdminApiPath  `protobuf:"bytes,2,rep,name=allowedApis,proto3" json:"allowedApis,omitempty"`
	AllowedPages []*AdminPagePath `protobuf:"bytes,3,rep,name=allowedPages,proto3" json:"allowedPages,omitempty"`
	Id           int64            `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Status       int64            `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *AdminAction) Reset() {
	*x = AdminAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAction) ProtoMessage() {}

func (x *AdminAction) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAction.ProtoReflect.Descriptor instead.
func (*AdminAction) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{65}
}

func (x *AdminAction) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *AdminAction) GetAllowedApis() []*AdminApiPath {
	if x != nil {
		return x.AllowedApis
	}
	return nil
}

func (x *AdminAction) GetAllowedPages() []*AdminPagePath {
	if x != nil {
		return x.AllowedPages
	}
	return nil
}

func (x *AdminAction) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminAction) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AdminApiPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiName string `protobuf:"bytes,1,opt,name=apiName,proto3" json:"apiName,omitempty"`
	ApiPath string `protobuf:"bytes,2,opt,name=apiPath,proto3" json:"apiPath,omitempty"`
	Id      int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Status  int64  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *AdminApiPath) Reset() {
	*x = AdminApiPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminApiPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminApiPath) ProtoMessage() {}

func (x *AdminApiPath) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminApiPath.ProtoReflect.Descriptor instead.
func (*AdminApiPath) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{66}
}

func (x *AdminApiPath) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *AdminApiPath) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *AdminApiPath) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminApiPath) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AdminPagePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageName     string           `protobuf:"bytes,1,opt,name=pageName,proto3" json:"pageName,omitempty"`
	PagePath     string           `protobuf:"bytes,2,opt,name=pagePath,proto3" json:"pagePath,omitempty"`
	Id           int64            `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	FatherPageID int64            `protobuf:"varint,4,opt,name=fatherPageID,proto3" json:"fatherPageID,omitempty"`
	IsMenu       int64            `protobuf:"varint,5,opt,name=isMenu,proto3" json:"isMenu,omitempty"`
	SortPriority int64            `protobuf:"varint,6,opt,name=sortPriority,proto3" json:"sortPriority,omitempty"`
	Status       int64            `protobuf:"varint,7,opt,name=Status,proto3" json:"Status,omitempty"`
	Childs       []*AdminPagePath `protobuf:"bytes,8,rep,name=childs,proto3" json:"childs,omitempty"`
	AdminAPIsIDs []int64          `protobuf:"varint,9,rep,packed,name=AdminAPIsIDs,proto3" json:"AdminAPIsIDs,omitempty"`
	IsButton     int64            `protobuf:"varint,10,opt,name=IsButton,proto3" json:"IsButton,omitempty"`
}

func (x *AdminPagePath) Reset() {
	*x = AdminPagePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminPagePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminPagePath) ProtoMessage() {}

func (x *AdminPagePath) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminPagePath.ProtoReflect.Descriptor instead.
func (*AdminPagePath) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{67}
}

func (x *AdminPagePath) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *AdminPagePath) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *AdminPagePath) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminPagePath) GetFatherPageID() int64 {
	if x != nil {
		return x.FatherPageID
	}
	return 0
}

func (x *AdminPagePath) GetIsMenu() int64 {
	if x != nil {
		return x.IsMenu
	}
	return 0
}

func (x *AdminPagePath) GetSortPriority() int64 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *AdminPagePath) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdminPagePath) GetChilds() []*AdminPagePath {
	if x != nil {
		return x.Childs
	}
	return nil
}

func (x *AdminPagePath) GetAdminAPIsIDs() []int64 {
	if x != nil {
		return x.AdminAPIsIDs
	}
	return nil
}

func (x *AdminPagePath) GetIsButton() int64 {
	if x != nil {
		return x.IsButton
	}
	return 0
}

type AdminPermissionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminRole *AdminRole `protobuf:"bytes,1,opt,name=adminRole,proto3" json:"adminRole,omitempty"`
}

func (x *AdminPermissionsResp) Reset() {
	*x = AdminPermissionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminPermissionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminPermissionsResp) ProtoMessage() {}

func (x *AdminPermissionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminPermissionsResp.ProtoReflect.Descriptor instead.
func (*AdminPermissionsResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{68}
}

func (x *AdminPermissionsResp) GetAdminRole() *AdminRole {
	if x != nil {
		return x.AdminRole
	}
	return nil
}

type AddAdminRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID          string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	AdminRoleName        string `protobuf:"bytes,2,opt,name=AdminRoleName,proto3" json:"AdminRoleName,omitempty"`
	Status               int64  `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	AdminAPIsIDs         string `protobuf:"bytes,4,opt,name=AdminAPIsIDs,proto3" json:"AdminAPIsIDs,omitempty"`
	AdminPagesIDs        string `protobuf:"bytes,5,opt,name=AdminPagesIDs,proto3" json:"AdminPagesIDs,omitempty"`
	AdminRoleDiscription string `protobuf:"bytes,6,opt,name=AdminRoleDiscription,proto3" json:"AdminRoleDiscription,omitempty"`
	CreateUser           string `protobuf:"bytes,7,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	CreateTime           int64  `protobuf:"varint,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateUser           string `protobuf:"bytes,9,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	UpdateTime           int64  `protobuf:"varint,10,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	AdminRoleRemarks     string `protobuf:"bytes,11,opt,name=AdminRoleRemarks,proto3" json:"AdminRoleRemarks,omitempty"`
}

func (x *AddAdminRoleRequest) Reset() {
	*x = AddAdminRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminRoleRequest) ProtoMessage() {}

func (x *AddAdminRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminRoleRequest.ProtoReflect.Descriptor instead.
func (*AddAdminRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{69}
}

func (x *AddAdminRoleRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddAdminRoleRequest) GetAdminRoleName() string {
	if x != nil {
		return x.AdminRoleName
	}
	return ""
}

func (x *AddAdminRoleRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddAdminRoleRequest) GetAdminAPIsIDs() string {
	if x != nil {
		return x.AdminAPIsIDs
	}
	return ""
}

func (x *AddAdminRoleRequest) GetAdminPagesIDs() string {
	if x != nil {
		return x.AdminPagesIDs
	}
	return ""
}

func (x *AddAdminRoleRequest) GetAdminRoleDiscription() string {
	if x != nil {
		return x.AdminRoleDiscription
	}
	return ""
}

func (x *AddAdminRoleRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *AddAdminRoleRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AddAdminRoleRequest) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *AddAdminRoleRequest) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *AddAdminRoleRequest) GetAdminRoleRemarks() string {
	if x != nil {
		return x.AdminRoleRemarks
	}
	return ""
}

type AddAdminRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddAdminRoleResponse) Reset() {
	*x = AddAdminRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminRoleResponse) ProtoMessage() {}

func (x *AddAdminRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminRoleResponse.ProtoReflect.Descriptor instead.
func (*AddAdminRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{70}
}

func (x *AddAdminRoleResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SearchAminRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName    string `protobuf:"bytes,1,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	PageNumber  int64  `protobuf:"varint,3,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	PageLimit   int64  `protobuf:"varint,4,opt,name=PageLimit,proto3" json:"PageLimit,omitempty"`
}

func (x *SearchAminRolesRequest) Reset() {
	*x = SearchAminRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAminRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAminRolesRequest) ProtoMessage() {}

func (x *SearchAminRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAminRolesRequest.ProtoReflect.Descriptor instead.
func (*SearchAminRolesRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{71}
}

func (x *SearchAminRolesRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *SearchAminRolesRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SearchAminRolesRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *SearchAminRolesRequest) GetPageLimit() int64 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

type AlterAdminRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminRoleID          int64  `protobuf:"varint,1,opt,name=AdminRoleID,proto3" json:"AdminRoleID,omitempty"`
	OperationID          string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	AdminRoleName        string `protobuf:"bytes,3,opt,name=AdminRoleName,proto3" json:"AdminRoleName,omitempty"`
	Status               int64  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	AdminAPIsIDs         string `protobuf:"bytes,5,opt,name=AdminAPIsIDs,proto3" json:"AdminAPIsIDs,omitempty"`
	AdminPagesIDs        string `protobuf:"bytes,6,opt,name=AdminPagesIDs,proto3" json:"AdminPagesIDs,omitempty"`
	AdminRoleDiscription string `protobuf:"bytes,7,opt,name=AdminRoleDiscription,proto3" json:"AdminRoleDiscription,omitempty"`
	CreateUser           string `protobuf:"bytes,8,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	CreateTime           int64  `protobuf:"varint,9,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateUser           string `protobuf:"bytes,10,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	UpdateTime           int64  `protobuf:"varint,11,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	AdminRoleRemarks     string `protobuf:"bytes,12,opt,name=AdminRoleRemarks,proto3" json:"AdminRoleRemarks,omitempty"`
}

func (x *AlterAdminRoleRequest) Reset() {
	*x = AlterAdminRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterAdminRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterAdminRoleRequest) ProtoMessage() {}

func (x *AlterAdminRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterAdminRoleRequest.ProtoReflect.Descriptor instead.
func (*AlterAdminRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{72}
}

func (x *AlterAdminRoleRequest) GetAdminRoleID() int64 {
	if x != nil {
		return x.AdminRoleID
	}
	return 0
}

func (x *AlterAdminRoleRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterAdminRoleRequest) GetAdminRoleName() string {
	if x != nil {
		return x.AdminRoleName
	}
	return ""
}

func (x *AlterAdminRoleRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AlterAdminRoleRequest) GetAdminAPIsIDs() string {
	if x != nil {
		return x.AdminAPIsIDs
	}
	return ""
}

func (x *AlterAdminRoleRequest) GetAdminPagesIDs() string {
	if x != nil {
		return x.AdminPagesIDs
	}
	return ""
}

func (x *AlterAdminRoleRequest) GetAdminRoleDiscription() string {
	if x != nil {
		return x.AdminRoleDiscription
	}
	return ""
}

func (x *AlterAdminRoleRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *AlterAdminRoleRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AlterAdminRoleRequest) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *AlterAdminRoleRequest) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *AlterAdminRoleRequest) GetAdminRoleRemarks() string {
	if x != nil {
		return x.AdminRoleRemarks
	}
	return ""
}

type AlterAdminRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterAdminRoleResponse) Reset() {
	*x = AlterAdminRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterAdminRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterAdminRoleResponse) ProtoMessage() {}

func (x *AlterAdminRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterAdminRoleResponse.ProtoReflect.Descriptor instead.
func (*AlterAdminRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{73}
}

func (x *AlterAdminRoleResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetAllAdminRolesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetAllAdminRolesReq) Reset() {
	*x = GetAllAdminRolesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAdminRolesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAdminRolesReq) ProtoMessage() {}

func (x *GetAllAdminRolesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAdminRolesReq.ProtoReflect.Descriptor instead.
func (*GetAllAdminRolesReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{74}
}

func (x *GetAllAdminRolesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAllAdminRolesReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AdminRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminRoleID          int64  `protobuf:"varint,1,opt,name=AdminRoleID,proto3" json:"AdminRoleID,omitempty"`
	AdminRoleName        string `protobuf:"bytes,2,opt,name=AdminRoleName,proto3" json:"AdminRoleName,omitempty"`
	Status               int64  `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	AdminAPIsIDs         string `protobuf:"bytes,4,opt,name=AdminAPIsIDs,proto3" json:"AdminAPIsIDs,omitempty"`
	AdminPagesIDs        string `protobuf:"bytes,5,opt,name=AdminPagesIDs,proto3" json:"AdminPagesIDs,omitempty"`
	AdminRoleDiscription string `protobuf:"bytes,6,opt,name=AdminRoleDiscription,proto3" json:"AdminRoleDiscription,omitempty"`
	CreateUser           string `protobuf:"bytes,7,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	CreateTime           int64  `protobuf:"varint,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateUser           string `protobuf:"bytes,9,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	UpdateTime           int64  `protobuf:"varint,10,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	AdminRoleRemarks     string `protobuf:"bytes,11,opt,name=AdminRoleRemarks,proto3" json:"AdminRoleRemarks,omitempty"`
}

func (x *AdminRoleResp) Reset() {
	*x = AdminRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRoleResp) ProtoMessage() {}

func (x *AdminRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRoleResp.ProtoReflect.Descriptor instead.
func (*AdminRoleResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{75}
}

func (x *AdminRoleResp) GetAdminRoleID() int64 {
	if x != nil {
		return x.AdminRoleID
	}
	return 0
}

func (x *AdminRoleResp) GetAdminRoleName() string {
	if x != nil {
		return x.AdminRoleName
	}
	return ""
}

func (x *AdminRoleResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdminRoleResp) GetAdminAPIsIDs() string {
	if x != nil {
		return x.AdminAPIsIDs
	}
	return ""
}

func (x *AdminRoleResp) GetAdminPagesIDs() string {
	if x != nil {
		return x.AdminPagesIDs
	}
	return ""
}

func (x *AdminRoleResp) GetAdminRoleDiscription() string {
	if x != nil {
		return x.AdminRoleDiscription
	}
	return ""
}

func (x *AdminRoleResp) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *AdminRoleResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AdminRoleResp) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *AdminRoleResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *AdminRoleResp) GetAdminRoleRemarks() string {
	if x != nil {
		return x.AdminRoleRemarks
	}
	return ""
}

type GetAllAdminRolesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	AdminRoles     []*AdminRoleResp           `protobuf:"bytes,2,rep,name=adminRoles,proto3" json:"adminRoles,omitempty"`
	Pagination     *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	AdminRolesNums int32                      `protobuf:"varint,4,opt,name=adminRolesNums,proto3" json:"adminRolesNums,omitempty"`
}

func (x *GetAllAdminRolesResp) Reset() {
	*x = GetAllAdminRolesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAdminRolesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAdminRolesResp) ProtoMessage() {}

func (x *GetAllAdminRolesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAdminRolesResp.ProtoReflect.Descriptor instead.
func (*GetAllAdminRolesResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{76}
}

func (x *GetAllAdminRolesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllAdminRolesResp) GetAdminRoles() []*AdminRoleResp {
	if x != nil {
		return x.AdminRoles
	}
	return nil
}

func (x *GetAllAdminRolesResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllAdminRolesResp) GetAdminRolesNums() int32 {
	if x != nil {
		return x.AdminRolesNums
	}
	return 0
}

// Admin API Models
type AddApiAdminRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	ApiName     string `protobuf:"bytes,2,opt,name=ApiName,proto3" json:"ApiName,omitempty"`
	ApiPath     string `protobuf:"bytes,3,opt,name=ApiPath,proto3" json:"ApiPath,omitempty"`
	Status      int64  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateUser  string `protobuf:"bytes,5,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
}

func (x *AddApiAdminRoleRequest) Reset() {
	*x = AddApiAdminRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddApiAdminRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddApiAdminRoleRequest) ProtoMessage() {}

func (x *AddApiAdminRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddApiAdminRoleRequest.ProtoReflect.Descriptor instead.
func (*AddApiAdminRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{77}
}

func (x *AddApiAdminRoleRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddApiAdminRoleRequest) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *AddApiAdminRoleRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *AddApiAdminRoleRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddApiAdminRoleRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

type AddApiAdminRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddApiAdminRoleResponse) Reset() {
	*x = AddApiAdminRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddApiAdminRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddApiAdminRoleResponse) ProtoMessage() {}

func (x *AddApiAdminRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddApiAdminRoleResponse.ProtoReflect.Descriptor instead.
func (*AddApiAdminRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{78}
}

func (x *AddApiAdminRoleResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AlterApiAdminRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiID       int64  `protobuf:"varint,1,opt,name=ApiID,proto3" json:"ApiID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	ApiName     string `protobuf:"bytes,3,opt,name=ApiName,proto3" json:"ApiName,omitempty"`
	ApiPath     string `protobuf:"bytes,4,opt,name=ApiPath,proto3" json:"ApiPath,omitempty"`
	Status      int32  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateUser  string `protobuf:"bytes,6,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
}

func (x *AlterApiAdminRoleRequest) Reset() {
	*x = AlterApiAdminRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterApiAdminRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterApiAdminRoleRequest) ProtoMessage() {}

func (x *AlterApiAdminRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterApiAdminRoleRequest.ProtoReflect.Descriptor instead.
func (*AlterApiAdminRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{79}
}

func (x *AlterApiAdminRoleRequest) GetApiID() int64 {
	if x != nil {
		return x.ApiID
	}
	return 0
}

func (x *AlterApiAdminRoleRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterApiAdminRoleRequest) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *AlterApiAdminRoleRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *AlterApiAdminRoleRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AlterApiAdminRoleRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

type AlterApiAdminRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterApiAdminRoleResponse) Reset() {
	*x = AlterApiAdminRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterApiAdminRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterApiAdminRoleResponse) ProtoMessage() {}

func (x *AlterApiAdminRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterApiAdminRoleResponse.ProtoReflect.Descriptor instead.
func (*AlterApiAdminRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{80}
}

func (x *AlterApiAdminRoleResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetAllApiAdminRolesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetAllApiAdminRolesReq) Reset() {
	*x = GetAllApiAdminRolesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllApiAdminRolesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllApiAdminRolesReq) ProtoMessage() {}

func (x *GetAllApiAdminRolesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllApiAdminRolesReq.ProtoReflect.Descriptor instead.
func (*GetAllApiAdminRolesReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{81}
}

func (x *GetAllApiAdminRolesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAllApiAdminRolesReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ApiAdminRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiID      int64  `protobuf:"varint,1,opt,name=ApiID,proto3" json:"ApiID,omitempty"`
	ApiName    string `protobuf:"bytes,2,opt,name=ApiName,proto3" json:"ApiName,omitempty"`
	ApiPath    string `protobuf:"bytes,3,opt,name=ApiPath,proto3" json:"ApiPath,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateUser string `protobuf:"bytes,5,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	UpdateUser string `protobuf:"bytes,6,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	CreateTime int64  `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,8,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
}

func (x *ApiAdminRoleResp) Reset() {
	*x = ApiAdminRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAdminRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAdminRoleResp) ProtoMessage() {}

func (x *ApiAdminRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAdminRoleResp.ProtoReflect.Descriptor instead.
func (*ApiAdminRoleResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{82}
}

func (x *ApiAdminRoleResp) GetApiID() int64 {
	if x != nil {
		return x.ApiID
	}
	return 0
}

func (x *ApiAdminRoleResp) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *ApiAdminRoleResp) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *ApiAdminRoleResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ApiAdminRoleResp) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *ApiAdminRoleResp) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *ApiAdminRoleResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ApiAdminRoleResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type GetAllApiAdminRolesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp    *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	ApisAdminRole []*ApiAdminRoleResp        `protobuf:"bytes,2,rep,name=ApisAdminRole,proto3" json:"ApisAdminRole,omitempty"`
	Pagination    *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	ApiNums       int32                      `protobuf:"varint,4,opt,name=ApiNums,proto3" json:"ApiNums,omitempty"`
}

func (x *GetAllApiAdminRolesResp) Reset() {
	*x = GetAllApiAdminRolesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllApiAdminRolesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllApiAdminRolesResp) ProtoMessage() {}

func (x *GetAllApiAdminRolesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllApiAdminRolesResp.ProtoReflect.Descriptor instead.
func (*GetAllApiAdminRolesResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{83}
}

func (x *GetAllApiAdminRolesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllApiAdminRolesResp) GetApisAdminRole() []*ApiAdminRoleResp {
	if x != nil {
		return x.ApisAdminRole
	}
	return nil
}

func (x *GetAllApiAdminRolesResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllApiAdminRolesResp) GetApiNums() int32 {
	if x != nil {
		return x.ApiNums
	}
	return 0
}

// Admin Page Models
type AddPageAdminRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	PageName     string `protobuf:"bytes,2,opt,name=PageName,proto3" json:"PageName,omitempty"`
	PagePath     string `protobuf:"bytes,3,opt,name=PagePath,proto3" json:"PagePath,omitempty"`
	Status       int64  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateUser   string `protobuf:"bytes,5,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	FatherPageID int64  `protobuf:"varint,6,opt,name=FatherPageID,proto3" json:"FatherPageID,omitempty"`
	IsMenu       int64  `protobuf:"varint,7,opt,name=IsMenu,proto3" json:"IsMenu,omitempty"`
	SortPriority int64  `protobuf:"varint,8,opt,name=SortPriority,proto3" json:"SortPriority,omitempty"`
	AdminAPIsIDs string `protobuf:"bytes,9,opt,name=AdminAPIsIDs,proto3" json:"AdminAPIsIDs,omitempty"`
	IsButton     int64  `protobuf:"varint,10,opt,name=IsButton,proto3" json:"IsButton,omitempty"`
}

func (x *AddPageAdminRoleRequest) Reset() {
	*x = AddPageAdminRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPageAdminRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPageAdminRoleRequest) ProtoMessage() {}

func (x *AddPageAdminRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPageAdminRoleRequest.ProtoReflect.Descriptor instead.
func (*AddPageAdminRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{84}
}

func (x *AddPageAdminRoleRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddPageAdminRoleRequest) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *AddPageAdminRoleRequest) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *AddPageAdminRoleRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddPageAdminRoleRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *AddPageAdminRoleRequest) GetFatherPageID() int64 {
	if x != nil {
		return x.FatherPageID
	}
	return 0
}

func (x *AddPageAdminRoleRequest) GetIsMenu() int64 {
	if x != nil {
		return x.IsMenu
	}
	return 0
}

func (x *AddPageAdminRoleRequest) GetSortPriority() int64 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *AddPageAdminRoleRequest) GetAdminAPIsIDs() string {
	if x != nil {
		return x.AdminAPIsIDs
	}
	return ""
}

func (x *AddPageAdminRoleRequest) GetIsButton() int64 {
	if x != nil {
		return x.IsButton
	}
	return 0
}

type AddPageAdminRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddPageAdminRoleResponse) Reset() {
	*x = AddPageAdminRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPageAdminRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPageAdminRoleResponse) ProtoMessage() {}

func (x *AddPageAdminRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPageAdminRoleResponse.ProtoReflect.Descriptor instead.
func (*AddPageAdminRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{85}
}

func (x *AddPageAdminRoleResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AlterPageAdminRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageID       int64  `protobuf:"varint,1,opt,name=PageID,proto3" json:"PageID,omitempty"`
	OperationID  string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	PageName     string `protobuf:"bytes,3,opt,name=PageName,proto3" json:"PageName,omitempty"`
	PagePath     string `protobuf:"bytes,4,opt,name=PagePath,proto3" json:"PagePath,omitempty"`
	Status       int32  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateUser   string `protobuf:"bytes,6,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	FatherPageID int64  `protobuf:"varint,7,opt,name=FatherPageID,proto3" json:"FatherPageID,omitempty"`
	IsMenu       int64  `protobuf:"varint,8,opt,name=IsMenu,proto3" json:"IsMenu,omitempty"`
	SortPriority int64  `protobuf:"varint,9,opt,name=SortPriority,proto3" json:"SortPriority,omitempty"`
	AdminAPIsIDs string `protobuf:"bytes,10,opt,name=AdminAPIsIDs,proto3" json:"AdminAPIsIDs,omitempty"`
	IsButton     int64  `protobuf:"varint,11,opt,name=IsButton,proto3" json:"IsButton,omitempty"`
}

func (x *AlterPageAdminRoleRequest) Reset() {
	*x = AlterPageAdminRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterPageAdminRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterPageAdminRoleRequest) ProtoMessage() {}

func (x *AlterPageAdminRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterPageAdminRoleRequest.ProtoReflect.Descriptor instead.
func (*AlterPageAdminRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{86}
}

func (x *AlterPageAdminRoleRequest) GetPageID() int64 {
	if x != nil {
		return x.PageID
	}
	return 0
}

func (x *AlterPageAdminRoleRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterPageAdminRoleRequest) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *AlterPageAdminRoleRequest) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *AlterPageAdminRoleRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AlterPageAdminRoleRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *AlterPageAdminRoleRequest) GetFatherPageID() int64 {
	if x != nil {
		return x.FatherPageID
	}
	return 0
}

func (x *AlterPageAdminRoleRequest) GetIsMenu() int64 {
	if x != nil {
		return x.IsMenu
	}
	return 0
}

func (x *AlterPageAdminRoleRequest) GetSortPriority() int64 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *AlterPageAdminRoleRequest) GetAdminAPIsIDs() string {
	if x != nil {
		return x.AdminAPIsIDs
	}
	return ""
}

func (x *AlterPageAdminRoleRequest) GetIsButton() int64 {
	if x != nil {
		return x.IsButton
	}
	return 0
}

type AlterPageAdminRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterPageAdminRoleResponse) Reset() {
	*x = AlterPageAdminRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterPageAdminRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterPageAdminRoleResponse) ProtoMessage() {}

func (x *AlterPageAdminRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterPageAdminRoleResponse.ProtoReflect.Descriptor instead.
func (*AlterPageAdminRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{87}
}

func (x *AlterPageAdminRoleResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetAllPageAdminRolesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination     *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	FatherIDFilter int32                     `protobuf:"varint,3,opt,name=FatherIDFilter,proto3" json:"FatherIDFilter,omitempty"`
}

func (x *GetAllPageAdminRolesReq) Reset() {
	*x = GetAllPageAdminRolesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPageAdminRolesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPageAdminRolesReq) ProtoMessage() {}

func (x *GetAllPageAdminRolesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPageAdminRolesReq.ProtoReflect.Descriptor instead.
func (*GetAllPageAdminRolesReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{88}
}

func (x *GetAllPageAdminRolesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAllPageAdminRolesReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllPageAdminRolesReq) GetFatherIDFilter() int32 {
	if x != nil {
		return x.FatherIDFilter
	}
	return 0
}

type PageAdminRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageID       int64  `protobuf:"varint,1,opt,name=PageID,proto3" json:"PageID,omitempty"`
	PageName     string `protobuf:"bytes,2,opt,name=PageName,proto3" json:"PageName,omitempty"`
	PagePath     string `protobuf:"bytes,3,opt,name=PagePath,proto3" json:"PagePath,omitempty"`
	Status       int32  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateUser   string `protobuf:"bytes,5,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	UpdateUser   string `protobuf:"bytes,6,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	FatherPageID int64  `protobuf:"varint,7,opt,name=FatherPageID,proto3" json:"FatherPageID,omitempty"`
	IsMenu       int64  `protobuf:"varint,8,opt,name=IsMenu,proto3" json:"IsMenu,omitempty"`
	SortPriority int64  `protobuf:"varint,9,opt,name=SortPriority,proto3" json:"SortPriority,omitempty"`
	AdminAPIsIDs string `protobuf:"bytes,10,opt,name=AdminAPIsIDs,proto3" json:"AdminAPIsIDs,omitempty"`
	IsButton     int64  `protobuf:"varint,11,opt,name=IsButton,proto3" json:"IsButton,omitempty"`
	CreateTime   int64  `protobuf:"varint,12,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime   int64  `protobuf:"varint,13,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
}

func (x *PageAdminRoleResp) Reset() {
	*x = PageAdminRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageAdminRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageAdminRoleResp) ProtoMessage() {}

func (x *PageAdminRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageAdminRoleResp.ProtoReflect.Descriptor instead.
func (*PageAdminRoleResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{89}
}

func (x *PageAdminRoleResp) GetPageID() int64 {
	if x != nil {
		return x.PageID
	}
	return 0
}

func (x *PageAdminRoleResp) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *PageAdminRoleResp) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *PageAdminRoleResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PageAdminRoleResp) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *PageAdminRoleResp) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *PageAdminRoleResp) GetFatherPageID() int64 {
	if x != nil {
		return x.FatherPageID
	}
	return 0
}

func (x *PageAdminRoleResp) GetIsMenu() int64 {
	if x != nil {
		return x.IsMenu
	}
	return 0
}

func (x *PageAdminRoleResp) GetSortPriority() int64 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *PageAdminRoleResp) GetAdminAPIsIDs() string {
	if x != nil {
		return x.AdminAPIsIDs
	}
	return ""
}

func (x *PageAdminRoleResp) GetIsButton() int64 {
	if x != nil {
		return x.IsButton
	}
	return 0
}

func (x *PageAdminRoleResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *PageAdminRoleResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type GetAllPageAdminRolesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp           *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	PagesAdminRole       []*PageAdminRoleResp       `protobuf:"bytes,2,rep,name=PagesAdminRole,proto3" json:"PagesAdminRole,omitempty"`
	Pagination           *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	ApiNums              int32                      `protobuf:"varint,4,opt,name=ApiNums,proto3" json:"ApiNums,omitempty"`
	ApisAdminRole        []*ApiAdminRoleResp        `protobuf:"bytes,5,rep,name=ApisAdminRole,proto3" json:"ApisAdminRole,omitempty"`
	FatherPagesAdminRole []*PageAdminRoleResp       `protobuf:"bytes,6,rep,name=FatherPagesAdminRole,proto3" json:"FatherPagesAdminRole,omitempty"`
	TotalRecCount        int32                      `protobuf:"varint,7,opt,name=TotalRecCount,proto3" json:"TotalRecCount,omitempty"`
}

func (x *GetAllPageAdminRolesResp) Reset() {
	*x = GetAllPageAdminRolesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPageAdminRolesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPageAdminRolesResp) ProtoMessage() {}

func (x *GetAllPageAdminRolesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPageAdminRolesResp.ProtoReflect.Descriptor instead.
func (*GetAllPageAdminRolesResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{90}
}

func (x *GetAllPageAdminRolesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllPageAdminRolesResp) GetPagesAdminRole() []*PageAdminRoleResp {
	if x != nil {
		return x.PagesAdminRole
	}
	return nil
}

func (x *GetAllPageAdminRolesResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllPageAdminRolesResp) GetApiNums() int32 {
	if x != nil {
		return x.ApiNums
	}
	return 0
}

func (x *GetAllPageAdminRolesResp) GetApisAdminRole() []*ApiAdminRoleResp {
	if x != nil {
		return x.ApisAdminRole
	}
	return nil
}

func (x *GetAllPageAdminRolesResp) GetFatherPagesAdminRole() []*PageAdminRoleResp {
	if x != nil {
		return x.FatherPagesAdminRole
	}
	return nil
}

func (x *GetAllPageAdminRolesResp) GetTotalRecCount() int32 {
	if x != nil {
		return x.TotalRecCount
	}
	return 0
}

// Admin action Models
type AddAdminActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	AdminActionName string `protobuf:"bytes,2,opt,name=AdminActionName,proto3" json:"AdminActionName,omitempty"`
	Status          int64  `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	AdminAPIsIDs    string `protobuf:"bytes,4,opt,name=AdminAPIsIDs,proto3" json:"AdminAPIsIDs,omitempty"`
	AdminPagesIDs   string `protobuf:"bytes,5,opt,name=AdminPagesIDs,proto3" json:"AdminPagesIDs,omitempty"`
	CreateUser      string `protobuf:"bytes,6,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
}

func (x *AddAdminActionRequest) Reset() {
	*x = AddAdminActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminActionRequest) ProtoMessage() {}

func (x *AddAdminActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminActionRequest.ProtoReflect.Descriptor instead.
func (*AddAdminActionRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{91}
}

func (x *AddAdminActionRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddAdminActionRequest) GetAdminActionName() string {
	if x != nil {
		return x.AdminActionName
	}
	return ""
}

func (x *AddAdminActionRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddAdminActionRequest) GetAdminAPIsIDs() string {
	if x != nil {
		return x.AdminAPIsIDs
	}
	return ""
}

func (x *AddAdminActionRequest) GetAdminPagesIDs() string {
	if x != nil {
		return x.AdminPagesIDs
	}
	return ""
}

func (x *AddAdminActionRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

type AddAdminActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddAdminActionResponse) Reset() {
	*x = AddAdminActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminActionResponse) ProtoMessage() {}

func (x *AddAdminActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminActionResponse.ProtoReflect.Descriptor instead.
func (*AddAdminActionResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{92}
}

func (x *AddAdminActionResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AlterAdminActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminActionID   int64  `protobuf:"varint,1,opt,name=AdminActionID,proto3" json:"AdminActionID,omitempty"`
	OperationID     string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	AdminActionName string `protobuf:"bytes,3,opt,name=AdminActionName,proto3" json:"AdminActionName,omitempty"`
	Status          int64  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	AdminAPIsIDs    string `protobuf:"bytes,5,opt,name=AdminAPIsIDs,proto3" json:"AdminAPIsIDs,omitempty"`
	AdminPagesIDs   string `protobuf:"bytes,6,opt,name=AdminPagesIDs,proto3" json:"AdminPagesIDs,omitempty"`
	CreateUser      string `protobuf:"bytes,7,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
}

func (x *AlterAdminActionRequest) Reset() {
	*x = AlterAdminActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterAdminActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterAdminActionRequest) ProtoMessage() {}

func (x *AlterAdminActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterAdminActionRequest.ProtoReflect.Descriptor instead.
func (*AlterAdminActionRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{93}
}

func (x *AlterAdminActionRequest) GetAdminActionID() int64 {
	if x != nil {
		return x.AdminActionID
	}
	return 0
}

func (x *AlterAdminActionRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterAdminActionRequest) GetAdminActionName() string {
	if x != nil {
		return x.AdminActionName
	}
	return ""
}

func (x *AlterAdminActionRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AlterAdminActionRequest) GetAdminAPIsIDs() string {
	if x != nil {
		return x.AdminAPIsIDs
	}
	return ""
}

func (x *AlterAdminActionRequest) GetAdminPagesIDs() string {
	if x != nil {
		return x.AdminPagesIDs
	}
	return ""
}

func (x *AlterAdminActionRequest) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

type AlterAdminActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterAdminActionResponse) Reset() {
	*x = AlterAdminActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterAdminActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterAdminActionResponse) ProtoMessage() {}

func (x *AlterAdminActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterAdminActionResponse.ProtoReflect.Descriptor instead.
func (*AlterAdminActionResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{94}
}

func (x *AlterAdminActionResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetAllAdminActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetAllAdminActionReq) Reset() {
	*x = GetAllAdminActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAdminActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAdminActionReq) ProtoMessage() {}

func (x *GetAllAdminActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAdminActionReq.ProtoReflect.Descriptor instead.
func (*GetAllAdminActionReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{95}
}

func (x *GetAllAdminActionReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAllAdminActionReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AdminActionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminActionID   int64  `protobuf:"varint,1,opt,name=AdminActionID,proto3" json:"AdminActionID,omitempty"`
	AdminActionName string `protobuf:"bytes,2,opt,name=AdminActionName,proto3" json:"AdminActionName,omitempty"`
	Status          int64  `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	AdminAPIsIDs    string `protobuf:"bytes,4,opt,name=AdminAPIsIDs,proto3" json:"AdminAPIsIDs,omitempty"`
	AdminPagesIDs   string `protobuf:"bytes,5,opt,name=AdminPagesIDs,proto3" json:"AdminPagesIDs,omitempty"`
	CreateUser      string `protobuf:"bytes,6,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	CreateTime      int64  `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *AdminActionResp) Reset() {
	*x = AdminActionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminActionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminActionResp) ProtoMessage() {}

func (x *AdminActionResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminActionResp.ProtoReflect.Descriptor instead.
func (*AdminActionResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{96}
}

func (x *AdminActionResp) GetAdminActionID() int64 {
	if x != nil {
		return x.AdminActionID
	}
	return 0
}

func (x *AdminActionResp) GetAdminActionName() string {
	if x != nil {
		return x.AdminActionName
	}
	return ""
}

func (x *AdminActionResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdminActionResp) GetAdminAPIsIDs() string {
	if x != nil {
		return x.AdminAPIsIDs
	}
	return ""
}

func (x *AdminActionResp) GetAdminPagesIDs() string {
	if x != nil {
		return x.AdminPagesIDs
	}
	return ""
}

func (x *AdminActionResp) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *AdminActionResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GetAllAdminActionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp      *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	AdminActions    []*AdminActionResp         `protobuf:"bytes,2,rep,name=adminActions,proto3" json:"adminActions,omitempty"`
	Pagination      *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	AdminActionNums int32                      `protobuf:"varint,4,opt,name=adminActionNums,proto3" json:"adminActionNums,omitempty"`
}

func (x *GetAllAdminActionResp) Reset() {
	*x = GetAllAdminActionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAdminActionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAdminActionResp) ProtoMessage() {}

func (x *GetAllAdminActionResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAdminActionResp.ProtoReflect.Descriptor instead.
func (*GetAllAdminActionResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{97}
}

func (x *GetAllAdminActionResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetAllAdminActionResp) GetAdminActions() []*AdminActionResp {
	if x != nil {
		return x.AdminActions
	}
	return nil
}

func (x *GetAllAdminActionResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllAdminActionResp) GetAdminActionNums() int32 {
	if x != nil {
		return x.AdminActionNums
	}
	return 0
}

type GetgAuthQrCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=User_id,json=UserId,proto3" json:"User_id,omitempty"`
}

func (x *GetgAuthQrCodeReq) Reset() {
	*x = GetgAuthQrCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetgAuthQrCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetgAuthQrCodeReq) ProtoMessage() {}

func (x *GetgAuthQrCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetgAuthQrCodeReq.ProtoReflect.Descriptor instead.
func (*GetgAuthQrCodeReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{98}
}

func (x *GetgAuthQrCodeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetgAuthQrCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GAuthSetupProvUri string `protobuf:"bytes,1,opt,name=gAuthSetupProvUri,proto3" json:"gAuthSetupProvUri,omitempty"`
	UsergAuthStatus   bool   `protobuf:"varint,2,opt,name=UsergAuthStatus,proto3" json:"UsergAuthStatus,omitempty"`
	GAuthAccountID    string `protobuf:"bytes,3,opt,name=gAuthAccountID,proto3" json:"gAuthAccountID,omitempty"`
	GAuthKey          string `protobuf:"bytes,4,opt,name=gAuthKey,proto3" json:"gAuthKey,omitempty"`
}

func (x *GetgAuthQrCodeResp) Reset() {
	*x = GetgAuthQrCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetgAuthQrCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetgAuthQrCodeResp) ProtoMessage() {}

func (x *GetgAuthQrCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetgAuthQrCodeResp.ProtoReflect.Descriptor instead.
func (*GetgAuthQrCodeResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{99}
}

func (x *GetgAuthQrCodeResp) GetGAuthSetupProvUri() string {
	if x != nil {
		return x.GAuthSetupProvUri
	}
	return ""
}

func (x *GetgAuthQrCodeResp) GetUsergAuthStatus() bool {
	if x != nil {
		return x.UsergAuthStatus
	}
	return false
}

func (x *GetgAuthQrCodeResp) GetGAuthAccountID() string {
	if x != nil {
		return x.GAuthAccountID
	}
	return ""
}

func (x *GetgAuthQrCodeResp) GetGAuthKey() string {
	if x != nil {
		return x.GAuthKey
	}
	return ""
}

type AlterGAuthStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string `protobuf:"bytes,1,opt,name=User_id,json=UserId,proto3" json:"User_id,omitempty"`
	UserGAuthStatus bool   `protobuf:"varint,2,opt,name=UserGAuthStatus,proto3" json:"UserGAuthStatus,omitempty"`
}

func (x *AlterGAuthStatusReq) Reset() {
	*x = AlterGAuthStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterGAuthStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterGAuthStatusReq) ProtoMessage() {}

func (x *AlterGAuthStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterGAuthStatusReq.ProtoReflect.Descriptor instead.
func (*AlterGAuthStatusReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{100}
}

func (x *AlterGAuthStatusReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AlterGAuthStatusReq) GetUserGAuthStatus() bool {
	if x != nil {
		return x.UserGAuthStatus
	}
	return false
}

type AlterGAuthStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GAuthStatus bool `protobuf:"varint,1,opt,name=gAuthStatus,proto3" json:"gAuthStatus,omitempty"`
}

func (x *AlterGAuthStatusResp) Reset() {
	*x = AlterGAuthStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterGAuthStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterGAuthStatusResp) ProtoMessage() {}

func (x *AlterGAuthStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterGAuthStatusResp.ProtoReflect.Descriptor instead.
func (*AlterGAuthStatusResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{101}
}

func (x *AlterGAuthStatusResp) GetGAuthStatus() bool {
	if x != nil {
		return x.GAuthStatus
	}
	return false
}

type GetInterestsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	Name        string                    `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	CreateUser  string                    `protobuf:"bytes,4,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	Remark      string                    `protobuf:"bytes,5,opt,name=Remark,proto3" json:"Remark,omitempty"`
	TimeType    int32                     `protobuf:"varint,6,opt,name=TimeType,proto3" json:"TimeType,omitempty"`
	StartTime   string                    `protobuf:"bytes,7,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime     string                    `protobuf:"bytes,8,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Status      string                    `protobuf:"bytes,9,opt,name=Status,proto3" json:"Status,omitempty"`
	OrderBy     string                    `protobuf:"bytes,10,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	IsDefault   int32                     `protobuf:"varint,11,opt,name=IsDefault,proto3" json:"IsDefault,omitempty"`
}

func (x *GetInterestsReq) Reset() {
	*x = GetInterestsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterestsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterestsReq) ProtoMessage() {}

func (x *GetInterestsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterestsReq.ProtoReflect.Descriptor instead.
func (*GetInterestsReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{102}
}

func (x *GetInterestsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetInterestsReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetInterestsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetInterestsReq) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *GetInterestsReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GetInterestsReq) GetTimeType() int32 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *GetInterestsReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetInterestsReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetInterestsReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetInterestsReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetInterestsReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type GetInterestsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Interests    []*InterestResp            `protobuf:"bytes,2,rep,name=Interests,proto3" json:"Interests,omitempty"`
	Pagination   *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	InterestNums int32                      `protobuf:"varint,4,opt,name=InterestNums,proto3" json:"InterestNums,omitempty"`
}

func (x *GetInterestsResp) Reset() {
	*x = GetInterestsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterestsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterestsResp) ProtoMessage() {}

func (x *GetInterestsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterestsResp.ProtoReflect.Descriptor instead.
func (*GetInterestsResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{103}
}

func (x *GetInterestsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetInterestsResp) GetInterests() []*InterestResp {
	if x != nil {
		return x.Interests
	}
	return nil
}

func (x *GetInterestsResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetInterestsResp) GetInterestNums() int32 {
	if x != nil {
		return x.InterestNums
	}
	return 0
}

type DeleteInterestsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	Interests   string `protobuf:"bytes,3,opt,name=Interests,proto3" json:"Interests,omitempty"`
}

func (x *DeleteInterestsReq) Reset() {
	*x = DeleteInterestsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInterestsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInterestsReq) ProtoMessage() {}

func (x *DeleteInterestsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInterestsReq.ProtoReflect.Descriptor instead.
func (*DeleteInterestsReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{104}
}

func (x *DeleteInterestsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteInterestsReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *DeleteInterestsReq) GetInterests() string {
	if x != nil {
		return x.Interests
	}
	return ""
}

type DeleteInterestsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *DeleteInterestsResp) Reset() {
	*x = DeleteInterestsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInterestsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInterestsResp) ProtoMessage() {}

func (x *DeleteInterestsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInterestsResp.ProtoReflect.Descriptor instead.
func (*DeleteInterestsResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{105}
}

func (x *DeleteInterestsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AlterInterestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64               `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        []*InterestLanguage `protobuf:"bytes,2,rep,name=Name,proto3" json:"Name,omitempty"`
	Status      int32               `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	UpdateUser  string              `protobuf:"bytes,4,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	UpdateTime  int64               `protobuf:"varint,5,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Remark      string              `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark,omitempty"`
	CreateUser  string              `protobuf:"bytes,7,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	CreateTime  int64               `protobuf:"varint,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	DeleteTime  int64               `protobuf:"varint,9,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
	OperationID string              `protobuf:"bytes,10,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string              `protobuf:"bytes,11,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	IsDefault   int32               `protobuf:"varint,12,opt,name=IsDefault,proto3" json:"IsDefault,omitempty"`
}

func (x *AlterInterestReq) Reset() {
	*x = AlterInterestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterInterestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterInterestReq) ProtoMessage() {}

func (x *AlterInterestReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterInterestReq.ProtoReflect.Descriptor instead.
func (*AlterInterestReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{106}
}

func (x *AlterInterestReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlterInterestReq) GetName() []*InterestLanguage {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *AlterInterestReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AlterInterestReq) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *AlterInterestReq) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *AlterInterestReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AlterInterestReq) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *AlterInterestReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AlterInterestReq) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *AlterInterestReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterInterestReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *AlterInterestReq) GetIsDefault() int32 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

type AlterInterestResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterInterestResp) Reset() {
	*x = AlterInterestResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterInterestResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterInterestResp) ProtoMessage() {}

func (x *AlterInterestResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterInterestResp.ProtoReflect.Descriptor instead.
func (*AlterInterestResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{107}
}

func (x *AlterInterestResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type ChangeInterestStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	InterestId  int64  `protobuf:"varint,2,opt,name=InterestId,proto3" json:"InterestId,omitempty"`
	Status      int32  `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	OpUserId    string `protobuf:"bytes,4,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
}

func (x *ChangeInterestStatusReq) Reset() {
	*x = ChangeInterestStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeInterestStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeInterestStatusReq) ProtoMessage() {}

func (x *ChangeInterestStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeInterestStatusReq.ProtoReflect.Descriptor instead.
func (*ChangeInterestStatusReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{108}
}

func (x *ChangeInterestStatusReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ChangeInterestStatusReq) GetInterestId() int64 {
	if x != nil {
		return x.InterestId
	}
	return 0
}

func (x *ChangeInterestStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ChangeInterestStatusReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

type ChangeInterestStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *ChangeInterestStatusResp) Reset() {
	*x = ChangeInterestStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeInterestStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeInterestStatusResp) ProtoMessage() {}

func (x *ChangeInterestStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeInterestStatusResp.ProtoReflect.Descriptor instead.
func (*ChangeInterestStatusResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{109}
}

func (x *ChangeInterestStatusResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AddInterestsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string         `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string         `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	Interests   []*InterestReq `protobuf:"bytes,3,rep,name=Interests,proto3" json:"Interests,omitempty"`
}

func (x *AddInterestsReq) Reset() {
	*x = AddInterestsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInterestsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInterestsReq) ProtoMessage() {}

func (x *AddInterestsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInterestsReq.ProtoReflect.Descriptor instead.
func (*AddInterestsReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{110}
}

func (x *AddInterestsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddInterestsReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *AddInterestsReq) GetInterests() []*InterestReq {
	if x != nil {
		return x.Interests
	}
	return nil
}

type AddInterestsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *AddInterestsResp) Reset() {
	*x = AddInterestsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInterestsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInterestsResp) ProtoMessage() {}

func (x *AddInterestsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInterestsResp.ProtoReflect.Descriptor instead.
func (*AddInterestsResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{111}
}

func (x *AddInterestsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetUserInterestsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination   *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	Account      string                    `protobuf:"bytes,3,opt,name=Account,proto3" json:"Account,omitempty"`
	InterestName string                    `protobuf:"bytes,4,opt,name=InterestName,proto3" json:"InterestName,omitempty"`
	Default      int32                     `protobuf:"varint,5,opt,name=Default,proto3" json:"Default,omitempty"`
	OrderBy      string                    `protobuf:"bytes,6,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	UserID       string                    `protobuf:"bytes,7,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserInterestsReq) Reset() {
	*x = GetUserInterestsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInterestsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInterestsReq) ProtoMessage() {}

func (x *GetUserInterestsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInterestsReq.ProtoReflect.Descriptor instead.
func (*GetUserInterestsReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{112}
}

func (x *GetUserInterestsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetUserInterestsReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetUserInterestsReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetUserInterestsReq) GetInterestName() string {
	if x != nil {
		return x.InterestName
	}
	return ""
}

func (x *GetUserInterestsReq) GetDefault() int32 {
	if x != nil {
		return x.Default
	}
	return 0
}

func (x *GetUserInterestsReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetUserInterestsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserInterestsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Interests    []*UserInterests           `protobuf:"bytes,2,rep,name=Interests,proto3" json:"Interests,omitempty"`
	Pagination   *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	InterestNums int32                      `protobuf:"varint,4,opt,name=InterestNums,proto3" json:"InterestNums,omitempty"`
}

func (x *GetUserInterestsResp) Reset() {
	*x = GetUserInterestsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInterestsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInterestsResp) ProtoMessage() {}

func (x *GetUserInterestsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInterestsResp.ProtoReflect.Descriptor instead.
func (*GetUserInterestsResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{113}
}

func (x *GetUserInterestsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUserInterestsResp) GetInterests() []*UserInterests {
	if x != nil {
		return x.Interests
	}
	return nil
}

func (x *GetUserInterestsResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetUserInterestsResp) GetInterestNums() int32 {
	if x != nil {
		return x.InterestNums
	}
	return 0
}

type AlterUserInterestsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserId    string `protobuf:"bytes,2,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	UserID      string `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Interests   string `protobuf:"bytes,4,opt,name=Interests,proto3" json:"Interests,omitempty"`
}

func (x *AlterUserInterestsReq) Reset() {
	*x = AlterUserInterestsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterUserInterestsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterUserInterestsReq) ProtoMessage() {}

func (x *AlterUserInterestsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterUserInterestsReq.ProtoReflect.Descriptor instead.
func (*AlterUserInterestsReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{114}
}

func (x *AlterUserInterestsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterUserInterestsReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *AlterUserInterestsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *AlterUserInterestsReq) GetInterests() string {
	if x != nil {
		return x.Interests
	}
	return ""
}

type AlterUserInterestsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterUserInterestsResp) Reset() {
	*x = AlterUserInterestsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterUserInterestsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterUserInterestsResp) ProtoMessage() {}

func (x *AlterUserInterestsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterUserInterestsResp.ProtoReflect.Descriptor instead.
func (*AlterUserInterestsResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{115}
}

func (x *AlterUserInterestsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteUserInterestsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UsersID     string `protobuf:"bytes,2,opt,name=UsersID,proto3" json:"UsersID,omitempty"`
}

func (x *DeleteUserInterestsReq) Reset() {
	*x = DeleteUserInterestsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserInterestsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserInterestsReq) ProtoMessage() {}

func (x *DeleteUserInterestsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserInterestsReq.ProtoReflect.Descriptor instead.
func (*DeleteUserInterestsReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{116}
}

func (x *DeleteUserInterestsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteUserInterestsReq) GetUsersID() string {
	if x != nil {
		return x.UsersID
	}
	return ""
}

type DeleteUserInterestsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *DeleteUserInterestsResp) Reset() {
	*x = DeleteUserInterestsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserInterestsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserInterestsResp) ProtoMessage() {}

func (x *DeleteUserInterestsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserInterestsResp.ProtoReflect.Descriptor instead.
func (*DeleteUserInterestsResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{117}
}

func (x *DeleteUserInterestsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetGroupInterestsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination   *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	CreatorUser  string                    `protobuf:"bytes,3,opt,name=CreatorUser,proto3" json:"CreatorUser,omitempty"`
	GroupName    string                    `protobuf:"bytes,4,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	InterestName string                    `protobuf:"bytes,5,opt,name=InterestName,proto3" json:"InterestName,omitempty"`
	OrderBy      string                    `protobuf:"bytes,6,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	GroupID      string                    `protobuf:"bytes,7,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *GetGroupInterestsReq) Reset() {
	*x = GetGroupInterestsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInterestsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInterestsReq) ProtoMessage() {}

func (x *GetGroupInterestsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInterestsReq.ProtoReflect.Descriptor instead.
func (*GetGroupInterestsReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{118}
}

func (x *GetGroupInterestsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetGroupInterestsReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGroupInterestsReq) GetCreatorUser() string {
	if x != nil {
		return x.CreatorUser
	}
	return ""
}

func (x *GetGroupInterestsReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GetGroupInterestsReq) GetInterestName() string {
	if x != nil {
		return x.InterestName
	}
	return ""
}

func (x *GetGroupInterestsReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetGroupInterestsReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type GetGroupInterestsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Interests    []*GroupInterests          `protobuf:"bytes,2,rep,name=Interests,proto3" json:"Interests,omitempty"`
	Pagination   *sdk_ws.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	InterestNums int32                      `protobuf:"varint,4,opt,name=InterestNums,proto3" json:"InterestNums,omitempty"`
}

func (x *GetGroupInterestsResp) Reset() {
	*x = GetGroupInterestsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInterestsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInterestsResp) ProtoMessage() {}

func (x *GetGroupInterestsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInterestsResp.ProtoReflect.Descriptor instead.
func (*GetGroupInterestsResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{119}
}

func (x *GetGroupInterestsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetGroupInterestsResp) GetInterests() []*GroupInterests {
	if x != nil {
		return x.Interests
	}
	return nil
}

func (x *GetGroupInterestsResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGroupInterestsResp) GetInterestNums() int32 {
	if x != nil {
		return x.InterestNums
	}
	return 0
}

type AlterGroupInterestsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	GroupID     string `protobuf:"bytes,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Interests   string `protobuf:"bytes,3,opt,name=Interests,proto3" json:"Interests,omitempty"`
}

func (x *AlterGroupInterestsReq) Reset() {
	*x = AlterGroupInterestsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterGroupInterestsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterGroupInterestsReq) ProtoMessage() {}

func (x *AlterGroupInterestsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterGroupInterestsReq.ProtoReflect.Descriptor instead.
func (*AlterGroupInterestsReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{120}
}

func (x *AlterGroupInterestsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterGroupInterestsReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *AlterGroupInterestsReq) GetInterests() string {
	if x != nil {
		return x.Interests
	}
	return ""
}

type AlterGroupInterestsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterGroupInterestsResp) Reset() {
	*x = AlterGroupInterestsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterGroupInterestsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterGroupInterestsResp) ProtoMessage() {}

func (x *AlterGroupInterestsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterGroupInterestsResp.ProtoReflect.Descriptor instead.
func (*AlterGroupInterestsResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{121}
}

func (x *AlterGroupInterestsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SearchAdminUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountName           string `protobuf:"bytes,1,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	RoleID                int64  `protobuf:"varint,2,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	GAuthStatus           int64  `protobuf:"varint,3,opt,name=GAuthStatus,proto3" json:"GAuthStatus,omitempty"`
	Status                int64  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	IPAddress             string `protobuf:"bytes,5,opt,name=IPAddress,proto3" json:"IPAddress,omitempty"`
	PageNumber            int64  `protobuf:"varint,6,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	PageLimit             int64  `protobuf:"varint,7,opt,name=PageLimit,proto3" json:"PageLimit,omitempty"`
	DateStart             int64  `protobuf:"varint,8,opt,name=DateStart,proto3" json:"DateStart,omitempty"`
	DateEnd               int64  `protobuf:"varint,9,opt,name=DateEnd,proto3" json:"DateEnd,omitempty"`
	CreateTimeOrLastLogin int64  `protobuf:"varint,10,opt,name=CreateTimeOrLastLogin,proto3" json:"CreateTimeOrLastLogin,omitempty"`
	Remarks               string `protobuf:"bytes,11,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
}

func (x *SearchAdminUsersRequest) Reset() {
	*x = SearchAdminUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAdminUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAdminUsersRequest) ProtoMessage() {}

func (x *SearchAdminUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAdminUsersRequest.ProtoReflect.Descriptor instead.
func (*SearchAdminUsersRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{122}
}

func (x *SearchAdminUsersRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *SearchAdminUsersRequest) GetRoleID() int64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *SearchAdminUsersRequest) GetGAuthStatus() int64 {
	if x != nil {
		return x.GAuthStatus
	}
	return 0
}

func (x *SearchAdminUsersRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchAdminUsersRequest) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

func (x *SearchAdminUsersRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *SearchAdminUsersRequest) GetPageLimit() int64 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *SearchAdminUsersRequest) GetDateStart() int64 {
	if x != nil {
		return x.DateStart
	}
	return 0
}

func (x *SearchAdminUsersRequest) GetDateEnd() int64 {
	if x != nil {
		return x.DateEnd
	}
	return 0
}

func (x *SearchAdminUsersRequest) GetCreateTimeOrLastLogin() int64 {
	if x != nil {
		return x.CreateTimeOrLastLogin
	}
	return 0
}

func (x *SearchAdminUsersRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type SearchApiAdminRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiName    string `protobuf:"bytes,1,opt,name=ApiName,proto3" json:"ApiName,omitempty"`
	ApiPath    string `protobuf:"bytes,2,opt,name=ApiPath,proto3" json:"ApiPath,omitempty"`
	AddedBy    string `protobuf:"bytes,3,opt,name=AddedBy,proto3" json:"AddedBy,omitempty"`
	DateStart  int64  `protobuf:"varint,4,opt,name=DateStart,proto3" json:"DateStart,omitempty"`
	DateEnd    int64  `protobuf:"varint,5,opt,name=DateEnd,proto3" json:"DateEnd,omitempty"`
	PageNumber int64  `protobuf:"varint,6,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	PageLimit  int64  `protobuf:"varint,7,opt,name=PageLimit,proto3" json:"PageLimit,omitempty"`
}

func (x *SearchApiAdminRoleRequest) Reset() {
	*x = SearchApiAdminRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchApiAdminRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchApiAdminRoleRequest) ProtoMessage() {}

func (x *SearchApiAdminRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchApiAdminRoleRequest.ProtoReflect.Descriptor instead.
func (*SearchApiAdminRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{123}
}

func (x *SearchApiAdminRoleRequest) GetApiName() string {
	if x != nil {
		return x.ApiName
	}
	return ""
}

func (x *SearchApiAdminRoleRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *SearchApiAdminRoleRequest) GetAddedBy() string {
	if x != nil {
		return x.AddedBy
	}
	return ""
}

func (x *SearchApiAdminRoleRequest) GetDateStart() int64 {
	if x != nil {
		return x.DateStart
	}
	return 0
}

func (x *SearchApiAdminRoleRequest) GetDateEnd() int64 {
	if x != nil {
		return x.DateEnd
	}
	return 0
}

func (x *SearchApiAdminRoleRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *SearchApiAdminRoleRequest) GetPageLimit() int64 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

type SearchPageAdminRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageName   string `protobuf:"bytes,1,opt,name=PageName,proto3" json:"PageName,omitempty"`
	PagePath   string `protobuf:"bytes,2,opt,name=PagePath,proto3" json:"PagePath,omitempty"`
	AddedBy    string `protobuf:"bytes,3,opt,name=AddedBy,proto3" json:"AddedBy,omitempty"`
	DateStart  int64  `protobuf:"varint,4,opt,name=DateStart,proto3" json:"DateStart,omitempty"`
	DateEnd    int64  `protobuf:"varint,5,opt,name=DateEnd,proto3" json:"DateEnd,omitempty"`
	PageNumber int64  `protobuf:"varint,6,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	PageLimit  int64  `protobuf:"varint,7,opt,name=PageLimit,proto3" json:"PageLimit,omitempty"`
	Status     int64  `protobuf:"varint,8,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *SearchPageAdminRolesRequest) Reset() {
	*x = SearchPageAdminRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPageAdminRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPageAdminRolesRequest) ProtoMessage() {}

func (x *SearchPageAdminRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPageAdminRolesRequest.ProtoReflect.Descriptor instead.
func (*SearchPageAdminRolesRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{124}
}

func (x *SearchPageAdminRolesRequest) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *SearchPageAdminRolesRequest) GetPagePath() string {
	if x != nil {
		return x.PagePath
	}
	return ""
}

func (x *SearchPageAdminRolesRequest) GetAddedBy() string {
	if x != nil {
		return x.AddedBy
	}
	return ""
}

func (x *SearchPageAdminRolesRequest) GetDateStart() int64 {
	if x != nil {
		return x.DateStart
	}
	return 0
}

func (x *SearchPageAdminRolesRequest) GetDateEnd() int64 {
	if x != nil {
		return x.DateEnd
	}
	return 0
}

func (x *SearchPageAdminRolesRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *SearchPageAdminRolesRequest) GetPageLimit() int64 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *SearchPageAdminRolesRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type OperationLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator   string `protobuf:"bytes,1,opt,name=Operator,proto3" json:"Operator,omitempty"`
	Action     string `protobuf:"bytes,2,opt,name=Action,proto3" json:"Action,omitempty"`
	Payload    string `protobuf:"bytes,3,opt,name=Payload,proto3" json:"Payload,omitempty"`
	OperatorIP string `protobuf:"bytes,4,opt,name=OperatorIP,proto3" json:"OperatorIP,omitempty"`
	Executee   string `protobuf:"bytes,5,opt,name=Executee,proto3" json:"Executee,omitempty"`
	CreateTime int64  `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *OperationLogRequest) Reset() {
	*x = OperationLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationLogRequest) ProtoMessage() {}

func (x *OperationLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationLogRequest.ProtoReflect.Descriptor instead.
func (*OperationLogRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{125}
}

func (x *OperationLogRequest) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *OperationLogRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *OperationLogRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *OperationLogRequest) GetOperatorIP() string {
	if x != nil {
		return x.OperatorIP
	}
	return ""
}

func (x *OperationLogRequest) GetExecutee() string {
	if x != nil {
		return x.Executee
	}
	return ""
}

func (x *OperationLogRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// SearchOperationLogsRequest
type SearchOperationLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator   string `protobuf:"bytes,1,opt,name=Operator,proto3" json:"Operator,omitempty"`
	Action     string `protobuf:"bytes,2,opt,name=Action,proto3" json:"Action,omitempty"`
	Executee   string `protobuf:"bytes,3,opt,name=Executee,proto3" json:"Executee,omitempty"`
	DateStart  int64  `protobuf:"varint,4,opt,name=DateStart,proto3" json:"DateStart,omitempty"`
	DateEnd    int64  `protobuf:"varint,5,opt,name=DateEnd,proto3" json:"DateEnd,omitempty"`
	PageNumber int64  `protobuf:"varint,6,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	PageLimit  int64  `protobuf:"varint,7,opt,name=PageLimit,proto3" json:"PageLimit,omitempty"`
}

func (x *SearchOperationLogsRequest) Reset() {
	*x = SearchOperationLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOperationLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperationLogsRequest) ProtoMessage() {}

func (x *SearchOperationLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperationLogsRequest.ProtoReflect.Descriptor instead.
func (*SearchOperationLogsRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{126}
}

func (x *SearchOperationLogsRequest) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *SearchOperationLogsRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SearchOperationLogsRequest) GetExecutee() string {
	if x != nil {
		return x.Executee
	}
	return ""
}

func (x *SearchOperationLogsRequest) GetDateStart() int64 {
	if x != nil {
		return x.DateStart
	}
	return 0
}

func (x *SearchOperationLogsRequest) GetDateEnd() int64 {
	if x != nil {
		return x.DateEnd
	}
	return 0
}

func (x *SearchOperationLogsRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *SearchOperationLogsRequest) GetPageLimit() int64 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

type SearchOperationLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationLogs      []*OperationLogRequest `protobuf:"bytes,1,rep,name=OperationLogs,proto3" json:"OperationLogs,omitempty"`
	PageNumber         int64                  `protobuf:"varint,2,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	PageLimit          int64                  `protobuf:"varint,3,opt,name=PageLimit,proto3" json:"PageLimit,omitempty"`
	OperationLogsCount int64                  `protobuf:"varint,4,opt,name=OperationLogsCount,proto3" json:"OperationLogsCount,omitempty"`
}

func (x *SearchOperationLogsResponse) Reset() {
	*x = SearchOperationLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOperationLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperationLogsResponse) ProtoMessage() {}

func (x *SearchOperationLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperationLogsResponse.ProtoReflect.Descriptor instead.
func (*SearchOperationLogsResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{127}
}

func (x *SearchOperationLogsResponse) GetOperationLogs() []*OperationLogRequest {
	if x != nil {
		return x.OperationLogs
	}
	return nil
}

func (x *SearchOperationLogsResponse) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *SearchOperationLogsResponse) GetPageLimit() int64 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *SearchOperationLogsResponse) GetOperationLogsCount() int64 {
	if x != nil {
		return x.OperationLogsCount
	}
	return 0
}

type GetMePageURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	PageType    int64  `protobuf:"varint,2,opt,name=PageType,proto3" json:"PageType,omitempty"`
}

func (x *GetMePageURLReq) Reset() {
	*x = GetMePageURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMePageURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMePageURLReq) ProtoMessage() {}

func (x *GetMePageURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMePageURLReq.ProtoReflect.Descriptor instead.
func (*GetMePageURLReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{128}
}

func (x *GetMePageURLReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetMePageURLReq) GetPageType() int64 {
	if x != nil {
		return x.PageType
	}
	return 0
}

type GetMePageURLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url        map[string]string `protobuf:"bytes,1,rep,name=Url,proto3" json:"Url,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Status     int32             `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateTime int64             `protobuf:"varint,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	CreateUser string            `protobuf:"bytes,4,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	UpdateTime int64             `protobuf:"varint,5,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	UpdateUser string            `protobuf:"bytes,6,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
	DeleteTime int64             `protobuf:"varint,7,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
	DeleteUser string            `protobuf:"bytes,8,opt,name=DeleteUser,proto3" json:"DeleteUser,omitempty"`
}

func (x *GetMePageURLResp) Reset() {
	*x = GetMePageURLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMePageURLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMePageURLResp) ProtoMessage() {}

func (x *GetMePageURLResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMePageURLResp.ProtoReflect.Descriptor instead.
func (*GetMePageURLResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{129}
}

func (x *GetMePageURLResp) GetUrl() map[string]string {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *GetMePageURLResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetMePageURLResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GetMePageURLResp) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *GetMePageURLResp) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *GetMePageURLResp) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *GetMePageURLResp) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *GetMePageURLResp) GetDeleteUser() string {
	if x != nil {
		return x.DeleteUser
	}
	return ""
}

type SaveMePageURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUserID    string            `protobuf:"bytes,1,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
	OperationID string            `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	PageType    int64             `protobuf:"varint,3,opt,name=PageType,proto3" json:"PageType,omitempty"`
	Url         map[string]string `protobuf:"bytes,4,rep,name=Url,proto3" json:"Url,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SaveMePageURLReq) Reset() {
	*x = SaveMePageURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMePageURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMePageURLReq) ProtoMessage() {}

func (x *SaveMePageURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMePageURLReq.ProtoReflect.Descriptor instead.
func (*SaveMePageURLReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{130}
}

func (x *SaveMePageURLReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *SaveMePageURLReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SaveMePageURLReq) GetPageType() int64 {
	if x != nil {
		return x.PageType
	}
	return 0
}

func (x *SaveMePageURLReq) GetUrl() map[string]string {
	if x != nil {
		return x.Url
	}
	return nil
}

type SaveMePageURLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SaveMePageURLResp) Reset() {
	*x = SaveMePageURLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMePageURLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMePageURLResp) ProtoMessage() {}

func (x *SaveMePageURLResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMePageURLResp.ProtoReflect.Descriptor instead.
func (*SaveMePageURLResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{131}
}

func (x *SaveMePageURLResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SwitchMePageURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUserID    string `protobuf:"bytes,1,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	PageType    int64  `protobuf:"varint,3,opt,name=PageType,proto3" json:"PageType,omitempty"`
	Status      int32  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *SwitchMePageURLReq) Reset() {
	*x = SwitchMePageURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchMePageURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchMePageURLReq) ProtoMessage() {}

func (x *SwitchMePageURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchMePageURLReq.ProtoReflect.Descriptor instead.
func (*SwitchMePageURLReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{132}
}

func (x *SwitchMePageURLReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *SwitchMePageURLReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SwitchMePageURLReq) GetPageType() int64 {
	if x != nil {
		return x.PageType
	}
	return 0
}

func (x *SwitchMePageURLReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SwitchMePageURLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SwitchMePageURLResp) Reset() {
	*x = SwitchMePageURLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchMePageURLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchMePageURLResp) ProtoMessage() {}

func (x *SwitchMePageURLResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchMePageURLResp.ProtoReflect.Descriptor instead.
func (*SwitchMePageURLResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{133}
}

func (x *SwitchMePageURLResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetMePageURLsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *GetMePageURLsReq) Reset() {
	*x = GetMePageURLsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMePageURLsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMePageURLsReq) ProtoMessage() {}

func (x *GetMePageURLsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMePageURLsReq.ProtoReflect.Descriptor instead.
func (*GetMePageURLsReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{134}
}

func (x *GetMePageURLsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type MePageObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32             `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	URLMap map[string]string `protobuf:"bytes,2,rep,name=URLMap,proto3" json:"URLMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MePageObj) Reset() {
	*x = MePageObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MePageObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MePageObj) ProtoMessage() {}

func (x *MePageObj) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MePageObj.ProtoReflect.Descriptor instead.
func (*MePageObj) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{135}
}

func (x *MePageObj) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MePageObj) GetURLMap() map[string]string {
	if x != nil {
		return x.URLMap
	}
	return nil
}

type GetMePageURLsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MePageURL map[string]*MePageObj `protobuf:"bytes,1,rep,name=MePageURL,proto3" json:"MePageURL,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMePageURLsResp) Reset() {
	*x = GetMePageURLsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMePageURLsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMePageURLsResp) ProtoMessage() {}

func (x *GetMePageURLsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMePageURLsResp.ProtoReflect.Descriptor instead.
func (*GetMePageURLsResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{136}
}

func (x *GetMePageURLsResp) GetMePageURL() map[string]*MePageObj {
	if x != nil {
		return x.MePageURL
	}
	return nil
}

type ManagementShortVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string                    `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Status      int32                     `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	FileId      string                    `protobuf:"bytes,4,opt,name=FileId,proto3" json:"FileId,omitempty"`
	Desc        string                    `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`
	EmptyDesc   int64                     `protobuf:"varint,6,opt,name=EmptyDesc,proto3" json:"EmptyDesc,omitempty"`
	IsBlock     int32                     `protobuf:"varint,7,opt,name=IsBlock,proto3" json:"IsBlock,omitempty"`
	StartTime   int64                     `protobuf:"varint,8,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime     int64                     `protobuf:"varint,9,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,10,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *ManagementShortVideoRequest) Reset() {
	*x = ManagementShortVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagementShortVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementShortVideoRequest) ProtoMessage() {}

func (x *ManagementShortVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementShortVideoRequest.ProtoReflect.Descriptor instead.
func (*ManagementShortVideoRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{137}
}

func (x *ManagementShortVideoRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ManagementShortVideoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ManagementShortVideoRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ManagementShortVideoRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ManagementShortVideoRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ManagementShortVideoRequest) GetEmptyDesc() int64 {
	if x != nil {
		return x.EmptyDesc
	}
	return 0
}

func (x *ManagementShortVideoRequest) GetIsBlock() int32 {
	if x != nil {
		return x.IsBlock
	}
	return 0
}

func (x *ManagementShortVideoRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ManagementShortVideoRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ManagementShortVideoRequest) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ManagementShortVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *CommonResp                `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination     *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	TotalCount     int64                      `protobuf:"varint,3,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	ShortVideoInfo []*ShortVideoInfoMessage   `protobuf:"bytes,4,rep,name=ShortVideoInfo,proto3" json:"ShortVideoInfo,omitempty"`
}

func (x *ManagementShortVideoResponse) Reset() {
	*x = ManagementShortVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagementShortVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementShortVideoResponse) ProtoMessage() {}

func (x *ManagementShortVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementShortVideoResponse.ProtoReflect.Descriptor instead.
func (*ManagementShortVideoResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{138}
}

func (x *ManagementShortVideoResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *ManagementShortVideoResponse) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ManagementShortVideoResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ManagementShortVideoResponse) GetShortVideoInfo() []*ShortVideoInfoMessage {
	if x != nil {
		return x.ShortVideoInfo
	}
	return nil
}

type ShortVideoInfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId         string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName       string `protobuf:"bytes,3,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Status         int32  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateTime     int64  `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	MediaUrl       string `protobuf:"bytes,6,opt,name=MediaUrl,proto3" json:"MediaUrl,omitempty"`
	CoverUrl       string `protobuf:"bytes,7,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	Desc           string `protobuf:"bytes,8,opt,name=Desc,proto3" json:"Desc,omitempty"`
	LikeNum        int64  `protobuf:"varint,9,opt,name=LikeNum,proto3" json:"LikeNum,omitempty"`
	CommentNum     int64  `protobuf:"varint,10,opt,name=CommentNum,proto3" json:"CommentNum,omitempty"`
	ReplyNum       int64  `protobuf:"varint,11,opt,name=ReplyNum,proto3" json:"ReplyNum,omitempty"`
	CommentLikeNum int64  `protobuf:"varint,12,opt,name=CommentLikeNum,proto3" json:"CommentLikeNum,omitempty"`
	Remark         string `protobuf:"bytes,13,opt,name=Remark,proto3" json:"Remark,omitempty"`
	FileId         string `protobuf:"bytes,15,opt,name=FileId,proto3" json:"FileId,omitempty"`
	InterestId     string `protobuf:"bytes,16,opt,name=InterestId,proto3" json:"InterestId,omitempty"`
}

func (x *ShortVideoInfoMessage) Reset() {
	*x = ShortVideoInfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoInfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoInfoMessage) ProtoMessage() {}

func (x *ShortVideoInfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoInfoMessage.ProtoReflect.Descriptor instead.
func (*ShortVideoInfoMessage) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{139}
}

func (x *ShortVideoInfoMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShortVideoInfoMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShortVideoInfoMessage) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ShortVideoInfoMessage) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ShortVideoInfoMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ShortVideoInfoMessage) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *ShortVideoInfoMessage) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ShortVideoInfoMessage) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ShortVideoInfoMessage) GetLikeNum() int64 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *ShortVideoInfoMessage) GetCommentNum() int64 {
	if x != nil {
		return x.CommentNum
	}
	return 0
}

func (x *ShortVideoInfoMessage) GetReplyNum() int64 {
	if x != nil {
		return x.ReplyNum
	}
	return 0
}

func (x *ShortVideoInfoMessage) GetCommentLikeNum() int64 {
	if x != nil {
		return x.CommentLikeNum
	}
	return 0
}

func (x *ShortVideoInfoMessage) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ShortVideoInfoMessage) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoInfoMessage) GetInterestId() string {
	if x != nil {
		return x.InterestId
	}
	return ""
}

type DeleteShortVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	FileId      []string `protobuf:"bytes,2,rep,name=FileId,proto3" json:"FileId,omitempty"`
}

func (x *DeleteShortVideoRequest) Reset() {
	*x = DeleteShortVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShortVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShortVideoRequest) ProtoMessage() {}

func (x *DeleteShortVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShortVideoRequest.ProtoReflect.Descriptor instead.
func (*DeleteShortVideoRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{140}
}

func (x *DeleteShortVideoRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteShortVideoRequest) GetFileId() []string {
	if x != nil {
		return x.FileId
	}
	return nil
}

type DeleteShortVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *DeleteShortVideoResponse) Reset() {
	*x = DeleteShortVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShortVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShortVideoResponse) ProtoMessage() {}

func (x *DeleteShortVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShortVideoResponse.ProtoReflect.Descriptor instead.
func (*DeleteShortVideoResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{141}
}

func (x *DeleteShortVideoResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AlterShortVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	FileId      string `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
	Status      int32  `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	Desc        string `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Remark      string `protobuf:"bytes,5,opt,name=Remark,proto3" json:"Remark,omitempty"`
}

func (x *AlterShortVideoRequest) Reset() {
	*x = AlterShortVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterShortVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterShortVideoRequest) ProtoMessage() {}

func (x *AlterShortVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterShortVideoRequest.ProtoReflect.Descriptor instead.
func (*AlterShortVideoRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{142}
}

func (x *AlterShortVideoRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterShortVideoRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *AlterShortVideoRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AlterShortVideoRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AlterShortVideoRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AlterShortVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *AlterShortVideoResponse) Reset() {
	*x = AlterShortVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterShortVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterShortVideoResponse) ProtoMessage() {}

func (x *AlterShortVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterShortVideoResponse.ProtoReflect.Descriptor instead.
func (*AlterShortVideoResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{143}
}

func (x *AlterShortVideoResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetShortVideoLikeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	FileId      string                    `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
	UserId      string                    `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Status      int32                     `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	Desc        string                    `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`
	EmptyDesc   int64                     `protobuf:"varint,6,opt,name=EmptyDesc,proto3" json:"EmptyDesc,omitempty"`
	StartTime   int64                     `protobuf:"varint,7,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime     int64                     `protobuf:"varint,8,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,9,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	LikeUserId  string                    `protobuf:"bytes,10,opt,name=LikeUserId,proto3" json:"LikeUserId,omitempty"`
}

func (x *GetShortVideoLikeListRequest) Reset() {
	*x = GetShortVideoLikeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoLikeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoLikeListRequest) ProtoMessage() {}

func (x *GetShortVideoLikeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoLikeListRequest.ProtoReflect.Descriptor instead.
func (*GetShortVideoLikeListRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{144}
}

func (x *GetShortVideoLikeListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoLikeListRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *GetShortVideoLikeListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetShortVideoLikeListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetShortVideoLikeListRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetShortVideoLikeListRequest) GetEmptyDesc() int64 {
	if x != nil {
		return x.EmptyDesc
	}
	return 0
}

func (x *GetShortVideoLikeListRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetShortVideoLikeListRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetShortVideoLikeListRequest) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoLikeListRequest) GetLikeUserId() string {
	if x != nil {
		return x.LikeUserId
	}
	return ""
}

type GetShortVideoLikeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *CommonResp                `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination     *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	TotalCount     int64                      `protobuf:"varint,3,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	ShortVideoLike []*ShortVideoLikeMessage   `protobuf:"bytes,4,rep,name=ShortVideoLike,proto3" json:"ShortVideoLike,omitempty"`
}

func (x *GetShortVideoLikeListResponse) Reset() {
	*x = GetShortVideoLikeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoLikeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoLikeListResponse) ProtoMessage() {}

func (x *GetShortVideoLikeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoLikeListResponse.ProtoReflect.Descriptor instead.
func (*GetShortVideoLikeListResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{145}
}

func (x *GetShortVideoLikeListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoLikeListResponse) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoLikeListResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetShortVideoLikeListResponse) GetShortVideoLike() []*ShortVideoLikeMessage {
	if x != nil {
		return x.ShortVideoLike
	}
	return nil
}

type ShortVideoLikeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FileId       string `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
	MediaUrl     string `protobuf:"bytes,3,opt,name=MediaUrl,proto3" json:"MediaUrl,omitempty"`
	CoverUrl     string `protobuf:"bytes,4,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	UserId       string `protobuf:"bytes,5,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName     string `protobuf:"bytes,6,opt,name=UserName,proto3" json:"UserName,omitempty"`
	CreateTime   int64  `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	PostUserId   string `protobuf:"bytes,8,opt,name=PostUserId,proto3" json:"PostUserId,omitempty"`
	PostUserName string `protobuf:"bytes,9,opt,name=PostUserName,proto3" json:"PostUserName,omitempty"`
	FileStatus   int32  `protobuf:"varint,10,opt,name=FileStatus,proto3" json:"FileStatus,omitempty"`
}

func (x *ShortVideoLikeMessage) Reset() {
	*x = ShortVideoLikeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoLikeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoLikeMessage) ProtoMessage() {}

func (x *ShortVideoLikeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoLikeMessage.ProtoReflect.Descriptor instead.
func (*ShortVideoLikeMessage) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{146}
}

func (x *ShortVideoLikeMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShortVideoLikeMessage) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoLikeMessage) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *ShortVideoLikeMessage) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ShortVideoLikeMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShortVideoLikeMessage) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ShortVideoLikeMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ShortVideoLikeMessage) GetPostUserId() string {
	if x != nil {
		return x.PostUserId
	}
	return ""
}

func (x *ShortVideoLikeMessage) GetPostUserName() string {
	if x != nil {
		return x.PostUserName
	}
	return ""
}

func (x *ShortVideoLikeMessage) GetFileStatus() int32 {
	if x != nil {
		return x.FileStatus
	}
	return 0
}

type DeleteShortVideoLikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	LikeIdList  []int64 `protobuf:"varint,2,rep,packed,name=LikeIdList,proto3" json:"LikeIdList,omitempty"`
}

func (x *DeleteShortVideoLikeRequest) Reset() {
	*x = DeleteShortVideoLikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShortVideoLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShortVideoLikeRequest) ProtoMessage() {}

func (x *DeleteShortVideoLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShortVideoLikeRequest.ProtoReflect.Descriptor instead.
func (*DeleteShortVideoLikeRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{147}
}

func (x *DeleteShortVideoLikeRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteShortVideoLikeRequest) GetLikeIdList() []int64 {
	if x != nil {
		return x.LikeIdList
	}
	return nil
}

type DeleteShortVideoLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *DeleteShortVideoLikeResponse) Reset() {
	*x = DeleteShortVideoLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShortVideoLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShortVideoLikeResponse) ProtoMessage() {}

func (x *DeleteShortVideoLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShortVideoLikeResponse.ProtoReflect.Descriptor instead.
func (*DeleteShortVideoLikeResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{148}
}

func (x *DeleteShortVideoLikeResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetShortVideoCommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID   string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	FileId        string                    `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
	UserId        string                    `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Status        int32                     `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	Desc          string                    `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`
	EmptyDesc     int64                     `protobuf:"varint,6,opt,name=EmptyDesc,proto3" json:"EmptyDesc,omitempty"`
	StartTime     int64                     `protobuf:"varint,7,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime       int64                     `protobuf:"varint,8,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Content       string                    `protobuf:"bytes,9,opt,name=Content,proto3" json:"Content,omitempty"`
	CommentUserId string                    `protobuf:"bytes,10,opt,name=CommentUserId,proto3" json:"CommentUserId,omitempty"`
	Pagination    *sdk_ws.RequestPagination `protobuf:"bytes,11,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetShortVideoCommentListRequest) Reset() {
	*x = GetShortVideoCommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoCommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoCommentListRequest) ProtoMessage() {}

func (x *GetShortVideoCommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoCommentListRequest.ProtoReflect.Descriptor instead.
func (*GetShortVideoCommentListRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{149}
}

func (x *GetShortVideoCommentListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoCommentListRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *GetShortVideoCommentListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetShortVideoCommentListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetShortVideoCommentListRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetShortVideoCommentListRequest) GetEmptyDesc() int64 {
	if x != nil {
		return x.EmptyDesc
	}
	return 0
}

func (x *GetShortVideoCommentListRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetShortVideoCommentListRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetShortVideoCommentListRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetShortVideoCommentListRequest) GetCommentUserId() string {
	if x != nil {
		return x.CommentUserId
	}
	return ""
}

func (x *GetShortVideoCommentListRequest) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetShortVideoCommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp        *CommonResp                 `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination        *sdk_ws.ResponsePagination  `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	TotalCount        int64                       `protobuf:"varint,3,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	ShortVideoComment []*ShortVideoCommentMessage `protobuf:"bytes,4,rep,name=ShortVideoComment,proto3" json:"ShortVideoComment,omitempty"`
}

func (x *GetShortVideoCommentListResponse) Reset() {
	*x = GetShortVideoCommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoCommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoCommentListResponse) ProtoMessage() {}

func (x *GetShortVideoCommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoCommentListResponse.ProtoReflect.Descriptor instead.
func (*GetShortVideoCommentListResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{150}
}

func (x *GetShortVideoCommentListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoCommentListResponse) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoCommentListResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetShortVideoCommentListResponse) GetShortVideoComment() []*ShortVideoCommentMessage {
	if x != nil {
		return x.ShortVideoComment
	}
	return nil
}

type ShortVideoCommentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FileId       string `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
	MediaUrl     string `protobuf:"bytes,3,opt,name=MediaUrl,proto3" json:"MediaUrl,omitempty"`
	CoverUrl     string `protobuf:"bytes,4,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	UserId       string `protobuf:"bytes,5,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName     string `protobuf:"bytes,6,opt,name=UserName,proto3" json:"UserName,omitempty"`
	CreateTime   int64  `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Content      string `protobuf:"bytes,8,opt,name=Content,proto3" json:"Content,omitempty"`
	LikeNum      int64  `protobuf:"varint,9,opt,name=LikeNum,proto3" json:"LikeNum,omitempty"`
	ReplyNum     int64  `protobuf:"varint,10,opt,name=ReplyNum,proto3" json:"ReplyNum,omitempty"`
	Remark       string `protobuf:"bytes,11,opt,name=Remark,proto3" json:"Remark,omitempty"`
	Status       int32  `protobuf:"varint,12,opt,name=Status,proto3" json:"Status,omitempty"`
	Desc         string `protobuf:"bytes,13,opt,name=Desc,proto3" json:"Desc,omitempty"`
	PostUserId   string `protobuf:"bytes,14,opt,name=PostUserId,proto3" json:"PostUserId,omitempty"`
	PostUserName string `protobuf:"bytes,15,opt,name=PostUserName,proto3" json:"PostUserName,omitempty"`
	FileStatus   int32  `protobuf:"varint,16,opt,name=FileStatus,proto3" json:"FileStatus,omitempty"`
}

func (x *ShortVideoCommentMessage) Reset() {
	*x = ShortVideoCommentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoCommentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoCommentMessage) ProtoMessage() {}

func (x *ShortVideoCommentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoCommentMessage.ProtoReflect.Descriptor instead.
func (*ShortVideoCommentMessage) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{151}
}

func (x *ShortVideoCommentMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShortVideoCommentMessage) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoCommentMessage) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *ShortVideoCommentMessage) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ShortVideoCommentMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShortVideoCommentMessage) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ShortVideoCommentMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ShortVideoCommentMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ShortVideoCommentMessage) GetLikeNum() int64 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *ShortVideoCommentMessage) GetReplyNum() int64 {
	if x != nil {
		return x.ReplyNum
	}
	return 0
}

func (x *ShortVideoCommentMessage) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ShortVideoCommentMessage) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ShortVideoCommentMessage) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ShortVideoCommentMessage) GetPostUserId() string {
	if x != nil {
		return x.PostUserId
	}
	return ""
}

func (x *ShortVideoCommentMessage) GetPostUserName() string {
	if x != nil {
		return x.PostUserName
	}
	return ""
}

func (x *ShortVideoCommentMessage) GetFileStatus() int32 {
	if x != nil {
		return x.FileStatus
	}
	return 0
}

type DeleteShortVideoCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID   string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CommentIdList []int64 `protobuf:"varint,2,rep,packed,name=CommentIdList,proto3" json:"CommentIdList,omitempty"`
}

func (x *DeleteShortVideoCommentRequest) Reset() {
	*x = DeleteShortVideoCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShortVideoCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShortVideoCommentRequest) ProtoMessage() {}

func (x *DeleteShortVideoCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShortVideoCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteShortVideoCommentRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{152}
}

func (x *DeleteShortVideoCommentRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteShortVideoCommentRequest) GetCommentIdList() []int64 {
	if x != nil {
		return x.CommentIdList
	}
	return nil
}

type DeleteShortVideoCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *DeleteShortVideoCommentResponse) Reset() {
	*x = DeleteShortVideoCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShortVideoCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShortVideoCommentResponse) ProtoMessage() {}

func (x *DeleteShortVideoCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShortVideoCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteShortVideoCommentResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{153}
}

func (x *DeleteShortVideoCommentResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AlterShortVideoCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CommentId   int64  `protobuf:"varint,2,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	Content     string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Remark      string `protobuf:"bytes,4,opt,name=Remark,proto3" json:"Remark,omitempty"`
}

func (x *AlterShortVideoCommentRequest) Reset() {
	*x = AlterShortVideoCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterShortVideoCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterShortVideoCommentRequest) ProtoMessage() {}

func (x *AlterShortVideoCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterShortVideoCommentRequest.ProtoReflect.Descriptor instead.
func (*AlterShortVideoCommentRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{154}
}

func (x *AlterShortVideoCommentRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterShortVideoCommentRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *AlterShortVideoCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AlterShortVideoCommentRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AlterShortVideoCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *AlterShortVideoCommentResponse) Reset() {
	*x = AlterShortVideoCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterShortVideoCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterShortVideoCommentResponse) ProtoMessage() {}

func (x *AlterShortVideoCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterShortVideoCommentResponse.ProtoReflect.Descriptor instead.
func (*AlterShortVideoCommentResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{155}
}

func (x *AlterShortVideoCommentResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetShortVideoInterestLabelListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId       string                    `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Desc         string                    `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`
	EmptyDesc    int64                     `protobuf:"varint,4,opt,name=EmptyDesc,proto3" json:"EmptyDesc,omitempty"`
	Default      int64                     `protobuf:"varint,5,opt,name=Default,proto3" json:"Default,omitempty"`
	InterestName string                    `protobuf:"bytes,6,opt,name=InterestName,proto3" json:"InterestName,omitempty"`
	Pagination   *sdk_ws.RequestPagination `protobuf:"bytes,7,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetShortVideoInterestLabelListRequest) Reset() {
	*x = GetShortVideoInterestLabelListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoInterestLabelListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoInterestLabelListRequest) ProtoMessage() {}

func (x *GetShortVideoInterestLabelListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoInterestLabelListRequest.ProtoReflect.Descriptor instead.
func (*GetShortVideoInterestLabelListRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{156}
}

func (x *GetShortVideoInterestLabelListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoInterestLabelListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetShortVideoInterestLabelListRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetShortVideoInterestLabelListRequest) GetEmptyDesc() int64 {
	if x != nil {
		return x.EmptyDesc
	}
	return 0
}

func (x *GetShortVideoInterestLabelListRequest) GetDefault() int64 {
	if x != nil {
		return x.Default
	}
	return 0
}

func (x *GetShortVideoInterestLabelListRequest) GetInterestName() string {
	if x != nil {
		return x.InterestName
	}
	return ""
}

func (x *GetShortVideoInterestLabelListRequest) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetShortVideoInterestLabelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp              *CommonResp                       `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination              *sdk_ws.ResponsePagination        `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	TotalCount              int64                             `protobuf:"varint,3,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	ShortVideoInterestLabel []*ShortVideoInterestLabelMessage `protobuf:"bytes,4,rep,name=ShortVideoInterestLabel,proto3" json:"ShortVideoInterestLabel,omitempty"`
}

func (x *GetShortVideoInterestLabelListResponse) Reset() {
	*x = GetShortVideoInterestLabelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoInterestLabelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoInterestLabelListResponse) ProtoMessage() {}

func (x *GetShortVideoInterestLabelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoInterestLabelListResponse.ProtoReflect.Descriptor instead.
func (*GetShortVideoInterestLabelListResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{157}
}

func (x *GetShortVideoInterestLabelListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoInterestLabelListResponse) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoInterestLabelListResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetShortVideoInterestLabelListResponse) GetShortVideoInterestLabel() []*ShortVideoInterestLabelMessage {
	if x != nil {
		return x.ShortVideoInterestLabel
	}
	return nil
}

type ShortVideoInterestLabelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FileId              string   `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
	MediaUrl            string   `protobuf:"bytes,3,opt,name=MediaUrl,proto3" json:"MediaUrl,omitempty"`
	CoverUrl            string   `protobuf:"bytes,4,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	UserId              string   `protobuf:"bytes,5,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName            string   `protobuf:"bytes,6,opt,name=UserName,proto3" json:"UserName,omitempty"`
	InterestId          string   `protobuf:"bytes,7,opt,name=InterestId,proto3" json:"InterestId,omitempty"`
	InterestIdList      []int64  `protobuf:"varint,8,rep,packed,name=InterestIdList,proto3" json:"InterestIdList,omitempty"`
	InterestChineseName []string `protobuf:"bytes,9,rep,name=InterestChineseName,proto3" json:"InterestChineseName,omitempty"`
	InterestEnglishName []string `protobuf:"bytes,10,rep,name=InterestEnglishName,proto3" json:"InterestEnglishName,omitempty"`
	InterestArabicName  []string `protobuf:"bytes,11,rep,name=InterestArabicName,proto3" json:"InterestArabicName,omitempty"`
}

func (x *ShortVideoInterestLabelMessage) Reset() {
	*x = ShortVideoInterestLabelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoInterestLabelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoInterestLabelMessage) ProtoMessage() {}

func (x *ShortVideoInterestLabelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoInterestLabelMessage.ProtoReflect.Descriptor instead.
func (*ShortVideoInterestLabelMessage) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{158}
}

func (x *ShortVideoInterestLabelMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShortVideoInterestLabelMessage) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoInterestLabelMessage) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *ShortVideoInterestLabelMessage) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ShortVideoInterestLabelMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShortVideoInterestLabelMessage) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ShortVideoInterestLabelMessage) GetInterestId() string {
	if x != nil {
		return x.InterestId
	}
	return ""
}

func (x *ShortVideoInterestLabelMessage) GetInterestIdList() []int64 {
	if x != nil {
		return x.InterestIdList
	}
	return nil
}

func (x *ShortVideoInterestLabelMessage) GetInterestChineseName() []string {
	if x != nil {
		return x.InterestChineseName
	}
	return nil
}

func (x *ShortVideoInterestLabelMessage) GetInterestEnglishName() []string {
	if x != nil {
		return x.InterestEnglishName
	}
	return nil
}

func (x *ShortVideoInterestLabelMessage) GetInterestArabicName() []string {
	if x != nil {
		return x.InterestArabicName
	}
	return nil
}

type AlterShortVideoInterestLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	FileId         string  `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
	InterestIdList []int64 `protobuf:"varint,3,rep,packed,name=InterestIdList,proto3" json:"InterestIdList,omitempty"`
}

func (x *AlterShortVideoInterestLabelRequest) Reset() {
	*x = AlterShortVideoInterestLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterShortVideoInterestLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterShortVideoInterestLabelRequest) ProtoMessage() {}

func (x *AlterShortVideoInterestLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterShortVideoInterestLabelRequest.ProtoReflect.Descriptor instead.
func (*AlterShortVideoInterestLabelRequest) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{159}
}

func (x *AlterShortVideoInterestLabelRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterShortVideoInterestLabelRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *AlterShortVideoInterestLabelRequest) GetInterestIdList() []int64 {
	if x != nil {
		return x.InterestIdList
	}
	return nil
}

type AlterShortVideoInterestLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *AlterShortVideoInterestLabelResponse) Reset() {
	*x = AlterShortVideoInterestLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterShortVideoInterestLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterShortVideoInterestLabelResponse) ProtoMessage() {}

func (x *AlterShortVideoInterestLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterShortVideoInterestLabelResponse.ProtoReflect.Descriptor instead.
func (*AlterShortVideoInterestLabelResponse) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{160}
}

func (x *AlterShortVideoInterestLabelResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type RepliesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId              string `protobuf:"bytes,1,opt,name=FileId,proto3" json:"FileId,omitempty"`
	PublishUserID       string `protobuf:"bytes,2,opt,name=PublishUserID,proto3" json:"PublishUserID,omitempty"`
	PublishUser         string `protobuf:"bytes,3,opt,name=PublishUser,proto3" json:"PublishUser,omitempty"`
	ShortVideoStatus    int32  `protobuf:"varint,4,opt,name=ShortVideoStatus,proto3" json:"ShortVideoStatus,omitempty"`
	Content             string `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	CoverUrl            string `protobuf:"bytes,6,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	MediaUrl            string `protobuf:"bytes,7,opt,name=MediaUrl,proto3" json:"MediaUrl,omitempty"`
	Size                int64  `protobuf:"varint,8,opt,name=Size,proto3" json:"Size,omitempty"`
	Height              int64  `protobuf:"varint,9,opt,name=Height,proto3" json:"Height,omitempty"`
	Width               int64  `protobuf:"varint,10,opt,name=Width,proto3" json:"Width,omitempty"`
	CommentId           int64  `protobuf:"varint,11,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	CommentContent      string `protobuf:"bytes,12,opt,name=CommentContent,proto3" json:"CommentContent,omitempty"`
	CommentStatus       int64  `protobuf:"varint,13,opt,name=CommentStatus,proto3" json:"CommentStatus,omitempty"`
	ReplyCommentId      int64  `protobuf:"varint,14,opt,name=ReplyCommentId,proto3" json:"ReplyCommentId,omitempty"`
	ReplyUserName       string `protobuf:"bytes,15,opt,name=ReplyUserName,proto3" json:"ReplyUserName,omitempty"`
	ReplyUserID         string `protobuf:"bytes,16,opt,name=ReplyUserID,proto3" json:"ReplyUserID,omitempty"`
	ReplyTime           int64  `protobuf:"varint,17,opt,name=ReplyTime,proto3" json:"ReplyTime,omitempty"`
	LikeCount           int64  `protobuf:"varint,18,opt,name=LikeCount,proto3" json:"LikeCount,omitempty"`
	CommentCount        int64  `protobuf:"varint,19,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`
	Remark              string `protobuf:"bytes,20,opt,name=Remark,proto3" json:"Remark,omitempty"`
	Status              int64  `protobuf:"varint,21,opt,name=Status,proto3" json:"Status,omitempty"`
	ReplyCommentContent string `protobuf:"bytes,22,opt,name=ReplyCommentContent,proto3" json:"ReplyCommentContent,omitempty"`
}

func (x *RepliesResp) Reset() {
	*x = RepliesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepliesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepliesResp) ProtoMessage() {}

func (x *RepliesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepliesResp.ProtoReflect.Descriptor instead.
func (*RepliesResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{161}
}

func (x *RepliesResp) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *RepliesResp) GetPublishUserID() string {
	if x != nil {
		return x.PublishUserID
	}
	return ""
}

func (x *RepliesResp) GetPublishUser() string {
	if x != nil {
		return x.PublishUser
	}
	return ""
}

func (x *RepliesResp) GetShortVideoStatus() int32 {
	if x != nil {
		return x.ShortVideoStatus
	}
	return 0
}

func (x *RepliesResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RepliesResp) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *RepliesResp) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *RepliesResp) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RepliesResp) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *RepliesResp) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *RepliesResp) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *RepliesResp) GetCommentContent() string {
	if x != nil {
		return x.CommentContent
	}
	return ""
}

func (x *RepliesResp) GetCommentStatus() int64 {
	if x != nil {
		return x.CommentStatus
	}
	return 0
}

func (x *RepliesResp) GetReplyCommentId() int64 {
	if x != nil {
		return x.ReplyCommentId
	}
	return 0
}

func (x *RepliesResp) GetReplyUserName() string {
	if x != nil {
		return x.ReplyUserName
	}
	return ""
}

func (x *RepliesResp) GetReplyUserID() string {
	if x != nil {
		return x.ReplyUserID
	}
	return ""
}

func (x *RepliesResp) GetReplyTime() int64 {
	if x != nil {
		return x.ReplyTime
	}
	return 0
}

func (x *RepliesResp) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *RepliesResp) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *RepliesResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RepliesResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RepliesResp) GetReplyCommentContent() string {
	if x != nil {
		return x.ReplyCommentContent
	}
	return ""
}

type GetShortVideoCommentRepliesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination   *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	ShortVideoID string                    `protobuf:"bytes,3,opt,name=ShortVideoID,proto3" json:"ShortVideoID,omitempty"`
	CommentId    int64                     `protobuf:"varint,4,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	Privacy      int32                     `protobuf:"varint,5,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	Content      string                    `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	IsEmpty      int32                     `protobuf:"varint,7,opt,name=IsEmpty,proto3" json:"IsEmpty,omitempty"`
	CommentUser  string                    `protobuf:"bytes,8,opt,name=CommentUser,proto3" json:"CommentUser,omitempty"`
	Comment      string                    `protobuf:"bytes,9,opt,name=Comment,proto3" json:"Comment,omitempty"`
	ReplyUser    string                    `protobuf:"bytes,10,opt,name=ReplyUser,proto3" json:"ReplyUser,omitempty"`
	ReplyContent string                    `protobuf:"bytes,11,opt,name=ReplyContent,proto3" json:"ReplyContent,omitempty"`
	StartTime    string                    `protobuf:"bytes,12,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime      string                    `protobuf:"bytes,13,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Publisher    string                    `protobuf:"bytes,14,opt,name=Publisher,proto3" json:"Publisher,omitempty"`
}

func (x *GetShortVideoCommentRepliesReq) Reset() {
	*x = GetShortVideoCommentRepliesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoCommentRepliesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoCommentRepliesReq) ProtoMessage() {}

func (x *GetShortVideoCommentRepliesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoCommentRepliesReq.ProtoReflect.Descriptor instead.
func (*GetShortVideoCommentRepliesReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{162}
}

func (x *GetShortVideoCommentRepliesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoCommentRepliesReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoCommentRepliesReq) GetShortVideoID() string {
	if x != nil {
		return x.ShortVideoID
	}
	return ""
}

func (x *GetShortVideoCommentRepliesReq) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *GetShortVideoCommentRepliesReq) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *GetShortVideoCommentRepliesReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetShortVideoCommentRepliesReq) GetIsEmpty() int32 {
	if x != nil {
		return x.IsEmpty
	}
	return 0
}

func (x *GetShortVideoCommentRepliesReq) GetCommentUser() string {
	if x != nil {
		return x.CommentUser
	}
	return ""
}

func (x *GetShortVideoCommentRepliesReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetShortVideoCommentRepliesReq) GetReplyUser() string {
	if x != nil {
		return x.ReplyUser
	}
	return ""
}

func (x *GetShortVideoCommentRepliesReq) GetReplyContent() string {
	if x != nil {
		return x.ReplyContent
	}
	return ""
}

func (x *GetShortVideoCommentRepliesReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetShortVideoCommentRepliesReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetShortVideoCommentRepliesReq) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

type GetShortVideoCommentRepliesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination     *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	CommentReplies []*RepliesResp             `protobuf:"bytes,3,rep,name=CommentReplies,proto3" json:"CommentReplies,omitempty"`
	RepliesCount   int64                      `protobuf:"varint,4,opt,name=RepliesCount,proto3" json:"RepliesCount,omitempty"`
}

func (x *GetShortVideoCommentRepliesResp) Reset() {
	*x = GetShortVideoCommentRepliesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoCommentRepliesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoCommentRepliesResp) ProtoMessage() {}

func (x *GetShortVideoCommentRepliesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoCommentRepliesResp.ProtoReflect.Descriptor instead.
func (*GetShortVideoCommentRepliesResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{163}
}

func (x *GetShortVideoCommentRepliesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoCommentRepliesResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoCommentRepliesResp) GetCommentReplies() []*RepliesResp {
	if x != nil {
		return x.CommentReplies
	}
	return nil
}

func (x *GetShortVideoCommentRepliesResp) GetRepliesCount() int64 {
	if x != nil {
		return x.RepliesCount
	}
	return 0
}

type AlterReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	ShortVideoId   string `protobuf:"bytes,2,opt,name=ShortVideoId,proto3" json:"ShortVideoId,omitempty"`
	Content        string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	ReplyCommentId int64  `protobuf:"varint,4,opt,name=ReplyCommentId,proto3" json:"ReplyCommentId,omitempty"`
	ReplyContent   string `protobuf:"bytes,5,opt,name=ReplyContent,proto3" json:"ReplyContent,omitempty"`
	Remark         string `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark,omitempty"`
}

func (x *AlterReplyReq) Reset() {
	*x = AlterReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterReplyReq) ProtoMessage() {}

func (x *AlterReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterReplyReq.ProtoReflect.Descriptor instead.
func (*AlterReplyReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{164}
}

func (x *AlterReplyReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterReplyReq) GetShortVideoId() string {
	if x != nil {
		return x.ShortVideoId
	}
	return ""
}

func (x *AlterReplyReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AlterReplyReq) GetReplyCommentId() int64 {
	if x != nil {
		return x.ReplyCommentId
	}
	return 0
}

func (x *AlterReplyReq) GetReplyContent() string {
	if x != nil {
		return x.ReplyContent
	}
	return ""
}

func (x *AlterReplyReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AlterReplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterReplyResp) Reset() {
	*x = AlterReplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterReplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterReplyResp) ProtoMessage() {}

func (x *AlterReplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterReplyResp.ProtoReflect.Descriptor instead.
func (*AlterReplyResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{165}
}

func (x *AlterReplyResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type RepliesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId  int64 `protobuf:"varint,1,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	CommentId int64 `protobuf:"varint,2,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
}

func (x *RepliesReq) Reset() {
	*x = RepliesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepliesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepliesReq) ProtoMessage() {}

func (x *RepliesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepliesReq.ProtoReflect.Descriptor instead.
func (*RepliesReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{166}
}

func (x *RepliesReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *RepliesReq) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type DeleteRepliesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CommentIds  []int64 `protobuf:"varint,2,rep,packed,name=CommentIds,proto3" json:"CommentIds,omitempty"`
}

func (x *DeleteRepliesReq) Reset() {
	*x = DeleteRepliesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRepliesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepliesReq) ProtoMessage() {}

func (x *DeleteRepliesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepliesReq.ProtoReflect.Descriptor instead.
func (*DeleteRepliesReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{167}
}

func (x *DeleteRepliesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteRepliesReq) GetCommentIds() []int64 {
	if x != nil {
		return x.CommentIds
	}
	return nil
}

type DeleteRepliesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *DeleteRepliesResp) Reset() {
	*x = DeleteRepliesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRepliesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepliesResp) ProtoMessage() {}

func (x *DeleteRepliesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepliesResp.ProtoReflect.Descriptor instead.
func (*DeleteRepliesResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{168}
}

func (x *DeleteRepliesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetShortVideoCommentLikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination   *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	Privacy      int64                     `protobuf:"varint,3,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	LikeUser     string                    `protobuf:"bytes,4,opt,name=LikeUser,proto3" json:"LikeUser,omitempty"`
	Content      string                    `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	IsEmpty      int32                     `protobuf:"varint,6,opt,name=IsEmpty,proto3" json:"IsEmpty,omitempty"`
	CommentUser  string                    `protobuf:"bytes,7,opt,name=CommentUser,proto3" json:"CommentUser,omitempty"`
	Comment      string                    `protobuf:"bytes,8,opt,name=Comment,proto3" json:"Comment,omitempty"`
	ReplyUser    string                    `protobuf:"bytes,9,opt,name=ReplyUser,proto3" json:"ReplyUser,omitempty"`
	ReplyContent string                    `protobuf:"bytes,10,opt,name=ReplyContent,proto3" json:"ReplyContent,omitempty"`
	CommentID    int64                     `protobuf:"varint,11,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	Publisher    string                    `protobuf:"bytes,12,opt,name=Publisher,proto3" json:"Publisher,omitempty"`
	StartTime    string                    `protobuf:"bytes,13,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime      string                    `protobuf:"bytes,14,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
}

func (x *GetShortVideoCommentLikesReq) Reset() {
	*x = GetShortVideoCommentLikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoCommentLikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoCommentLikesReq) ProtoMessage() {}

func (x *GetShortVideoCommentLikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoCommentLikesReq.ProtoReflect.Descriptor instead.
func (*GetShortVideoCommentLikesReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{169}
}

func (x *GetShortVideoCommentLikesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoCommentLikesReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoCommentLikesReq) GetPrivacy() int64 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

func (x *GetShortVideoCommentLikesReq) GetLikeUser() string {
	if x != nil {
		return x.LikeUser
	}
	return ""
}

func (x *GetShortVideoCommentLikesReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetShortVideoCommentLikesReq) GetIsEmpty() int32 {
	if x != nil {
		return x.IsEmpty
	}
	return 0
}

func (x *GetShortVideoCommentLikesReq) GetCommentUser() string {
	if x != nil {
		return x.CommentUser
	}
	return ""
}

func (x *GetShortVideoCommentLikesReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetShortVideoCommentLikesReq) GetReplyUser() string {
	if x != nil {
		return x.ReplyUser
	}
	return ""
}

func (x *GetShortVideoCommentLikesReq) GetReplyContent() string {
	if x != nil {
		return x.ReplyContent
	}
	return ""
}

func (x *GetShortVideoCommentLikesReq) GetCommentID() int64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *GetShortVideoCommentLikesReq) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *GetShortVideoCommentLikesReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetShortVideoCommentLikesReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type LikesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId           int64  `protobuf:"varint,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	LikeId              int64  `protobuf:"varint,2,opt,name=LikeId,proto3" json:"LikeId,omitempty"`
	FileId              string `protobuf:"bytes,3,opt,name=FileId,proto3" json:"FileId,omitempty"`
	CommentUserName     string `protobuf:"bytes,4,opt,name=CommentUserName,proto3" json:"CommentUserName,omitempty"`
	CommentUserID       string `protobuf:"bytes,5,opt,name=CommentUserID,proto3" json:"CommentUserID,omitempty"`
	CommentContent      string `protobuf:"bytes,6,opt,name=CommentContent,proto3" json:"CommentContent,omitempty"`
	LikeUserName        string `protobuf:"bytes,7,opt,name=LikeUserName,proto3" json:"LikeUserName,omitempty"`
	LikeUserID          string `protobuf:"bytes,8,opt,name=LikeUserID,proto3" json:"LikeUserID,omitempty"`
	LikeTime            int64  `protobuf:"varint,9,opt,name=LikeTime,proto3" json:"LikeTime,omitempty"`
	Remark              string `protobuf:"bytes,10,opt,name=Remark,proto3" json:"Remark,omitempty"`
	CoverUrl            string `protobuf:"bytes,11,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	MediaUrl            string `protobuf:"bytes,12,opt,name=MediaUrl,proto3" json:"MediaUrl,omitempty"`
	Size                int64  `protobuf:"varint,13,opt,name=Size,proto3" json:"Size,omitempty"`
	Height              int64  `protobuf:"varint,14,opt,name=Height,proto3" json:"Height,omitempty"`
	Width               int64  `protobuf:"varint,15,opt,name=Width,proto3" json:"Width,omitempty"`
	Status              int64  `protobuf:"varint,16,opt,name=Status,proto3" json:"Status,omitempty"`
	ShortVideoStatus    int32  `protobuf:"varint,17,opt,name=ShortVideoStatus,proto3" json:"ShortVideoStatus,omitempty"`
	PublishUserID       string `protobuf:"bytes,18,opt,name=PublishUserID,proto3" json:"PublishUserID,omitempty"`
	PublishUser         string `protobuf:"bytes,19,opt,name=PublishUser,proto3" json:"PublishUser,omitempty"`
	Content             string `protobuf:"bytes,20,opt,name=Content,proto3" json:"Content,omitempty"`
	CommentStatus       int64  `protobuf:"varint,21,opt,name=CommentStatus,proto3" json:"CommentStatus,omitempty"`
	ReplyCommentId      int64  `protobuf:"varint,22,opt,name=ReplyCommentId,proto3" json:"ReplyCommentId,omitempty"`
	ReplyUserName       string `protobuf:"bytes,23,opt,name=ReplyUserName,proto3" json:"ReplyUserName,omitempty"`
	ReplyUserID         string `protobuf:"bytes,24,opt,name=ReplyUserID,proto3" json:"ReplyUserID,omitempty"`
	ReplyTime           int64  `protobuf:"varint,25,opt,name=ReplyTime,proto3" json:"ReplyTime,omitempty"`
	LikeCount           int64  `protobuf:"varint,26,opt,name=LikeCount,proto3" json:"LikeCount,omitempty"`
	ReplyCommentContent string `protobuf:"bytes,27,opt,name=ReplyCommentContent,proto3" json:"ReplyCommentContent,omitempty"`
}

func (x *LikesResp) Reset() {
	*x = LikesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikesResp) ProtoMessage() {}

func (x *LikesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikesResp.ProtoReflect.Descriptor instead.
func (*LikesResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{170}
}

func (x *LikesResp) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *LikesResp) GetLikeId() int64 {
	if x != nil {
		return x.LikeId
	}
	return 0
}

func (x *LikesResp) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *LikesResp) GetCommentUserName() string {
	if x != nil {
		return x.CommentUserName
	}
	return ""
}

func (x *LikesResp) GetCommentUserID() string {
	if x != nil {
		return x.CommentUserID
	}
	return ""
}

func (x *LikesResp) GetCommentContent() string {
	if x != nil {
		return x.CommentContent
	}
	return ""
}

func (x *LikesResp) GetLikeUserName() string {
	if x != nil {
		return x.LikeUserName
	}
	return ""
}

func (x *LikesResp) GetLikeUserID() string {
	if x != nil {
		return x.LikeUserID
	}
	return ""
}

func (x *LikesResp) GetLikeTime() int64 {
	if x != nil {
		return x.LikeTime
	}
	return 0
}

func (x *LikesResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *LikesResp) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *LikesResp) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *LikesResp) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *LikesResp) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *LikesResp) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *LikesResp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LikesResp) GetShortVideoStatus() int32 {
	if x != nil {
		return x.ShortVideoStatus
	}
	return 0
}

func (x *LikesResp) GetPublishUserID() string {
	if x != nil {
		return x.PublishUserID
	}
	return ""
}

func (x *LikesResp) GetPublishUser() string {
	if x != nil {
		return x.PublishUser
	}
	return ""
}

func (x *LikesResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *LikesResp) GetCommentStatus() int64 {
	if x != nil {
		return x.CommentStatus
	}
	return 0
}

func (x *LikesResp) GetReplyCommentId() int64 {
	if x != nil {
		return x.ReplyCommentId
	}
	return 0
}

func (x *LikesResp) GetReplyUserName() string {
	if x != nil {
		return x.ReplyUserName
	}
	return ""
}

func (x *LikesResp) GetReplyUserID() string {
	if x != nil {
		return x.ReplyUserID
	}
	return ""
}

func (x *LikesResp) GetReplyTime() int64 {
	if x != nil {
		return x.ReplyTime
	}
	return 0
}

func (x *LikesResp) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *LikesResp) GetReplyCommentContent() string {
	if x != nil {
		return x.ReplyCommentContent
	}
	return ""
}

type GetShortVideoCommentLikesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination   *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	CommentLikes []*LikesResp               `protobuf:"bytes,3,rep,name=CommentLikes,proto3" json:"CommentLikes,omitempty"`
	LikesCount   int64                      `protobuf:"varint,4,opt,name=LikesCount,proto3" json:"LikesCount,omitempty"`
}

func (x *GetShortVideoCommentLikesResp) Reset() {
	*x = GetShortVideoCommentLikesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoCommentLikesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoCommentLikesResp) ProtoMessage() {}

func (x *GetShortVideoCommentLikesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoCommentLikesResp.ProtoReflect.Descriptor instead.
func (*GetShortVideoCommentLikesResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{171}
}

func (x *GetShortVideoCommentLikesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoCommentLikesResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoCommentLikesResp) GetCommentLikes() []*LikesResp {
	if x != nil {
		return x.CommentLikes
	}
	return nil
}

func (x *GetShortVideoCommentLikesResp) GetLikesCount() int64 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

type AlterLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	LikeId       int64  `protobuf:"varint,2,opt,name=LikeId,proto3" json:"LikeId,omitempty"`
	Content      string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Remark       string `protobuf:"bytes,4,opt,name=Remark,proto3" json:"Remark,omitempty"`
	ShortVideoID string `protobuf:"bytes,5,opt,name=ShortVideoID,proto3" json:"ShortVideoID,omitempty"`
}

func (x *AlterLikeReq) Reset() {
	*x = AlterLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterLikeReq) ProtoMessage() {}

func (x *AlterLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterLikeReq.ProtoReflect.Descriptor instead.
func (*AlterLikeReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{172}
}

func (x *AlterLikeReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterLikeReq) GetLikeId() int64 {
	if x != nil {
		return x.LikeId
	}
	return 0
}

func (x *AlterLikeReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AlterLikeReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AlterLikeReq) GetShortVideoID() string {
	if x != nil {
		return x.ShortVideoID
	}
	return ""
}

type AlterLikeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterLikeResp) Reset() {
	*x = AlterLikeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterLikeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterLikeResp) ProtoMessage() {}

func (x *AlterLikeResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterLikeResp.ProtoReflect.Descriptor instead.
func (*AlterLikeResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{173}
}

func (x *AlterLikeResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteLikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Likes       []int64 `protobuf:"varint,2,rep,packed,name=Likes,proto3" json:"Likes,omitempty"`
}

func (x *DeleteLikesReq) Reset() {
	*x = DeleteLikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLikesReq) ProtoMessage() {}

func (x *DeleteLikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLikesReq.ProtoReflect.Descriptor instead.
func (*DeleteLikesReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{174}
}

func (x *DeleteLikesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteLikesReq) GetLikes() []int64 {
	if x != nil {
		return x.Likes
	}
	return nil
}

type DeleteLikesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *DeleteLikesResp) Reset() {
	*x = DeleteLikesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLikesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLikesResp) ProtoMessage() {}

func (x *DeleteLikesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLikesResp.ProtoReflect.Descriptor instead.
func (*DeleteLikesResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{175}
}

func (x *DeleteLikesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type Followers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	FansId     string `protobuf:"bytes,3,opt,name=FansId,proto3" json:"FansId,omitempty"`
	CreateTime int64  `protobuf:"varint,4,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UserFace   string `protobuf:"bytes,5,opt,name=UserFace,proto3" json:"UserFace,omitempty"`
	UserName   string `protobuf:"bytes,6,opt,name=UserName,proto3" json:"UserName,omitempty"`
	FansFace   string `protobuf:"bytes,7,opt,name=FansFace,proto3" json:"FansFace,omitempty"`
	FansName   string `protobuf:"bytes,8,opt,name=FansName,proto3" json:"FansName,omitempty"`
	Remark     string `protobuf:"bytes,9,opt,name=Remark,proto3" json:"Remark,omitempty"`
}

func (x *Followers) Reset() {
	*x = Followers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Followers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Followers) ProtoMessage() {}

func (x *Followers) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Followers.ProtoReflect.Descriptor instead.
func (*Followers) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{176}
}

func (x *Followers) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Followers) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Followers) GetFansId() string {
	if x != nil {
		return x.FansId
	}
	return ""
}

func (x *Followers) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Followers) GetUserFace() string {
	if x != nil {
		return x.UserFace
	}
	return ""
}

func (x *Followers) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Followers) GetFansFace() string {
	if x != nil {
		return x.FansFace
	}
	return ""
}

func (x *Followers) GetFansName() string {
	if x != nil {
		return x.FansName
	}
	return ""
}

func (x *Followers) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type GetFollowersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination   *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	StartTime    string                    `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime      string                    `protobuf:"bytes,4,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Follower     string                    `protobuf:"bytes,5,opt,name=Follower,proto3" json:"Follower,omitempty"`
	FollowedUser string                    `protobuf:"bytes,6,opt,name=FollowedUser,proto3" json:"FollowedUser,omitempty"`
}

func (x *GetFollowersReq) Reset() {
	*x = GetFollowersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowersReq) ProtoMessage() {}

func (x *GetFollowersReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowersReq.ProtoReflect.Descriptor instead.
func (*GetFollowersReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{177}
}

func (x *GetFollowersReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetFollowersReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetFollowersReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetFollowersReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetFollowersReq) GetFollower() string {
	if x != nil {
		return x.Follower
	}
	return ""
}

func (x *GetFollowersReq) GetFollowedUser() string {
	if x != nil {
		return x.FollowedUser
	}
	return ""
}

type GetFollowersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination     *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	FollowersCount int64                      `protobuf:"varint,3,opt,name=FollowersCount,proto3" json:"FollowersCount,omitempty"`
	Followers      []*Followers               `protobuf:"bytes,4,rep,name=Followers,proto3" json:"Followers,omitempty"`
}

func (x *GetFollowersResp) Reset() {
	*x = GetFollowersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowersResp) ProtoMessage() {}

func (x *GetFollowersResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowersResp.ProtoReflect.Descriptor instead.
func (*GetFollowersResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{178}
}

func (x *GetFollowersResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetFollowersResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetFollowersResp) GetFollowersCount() int64 {
	if x != nil {
		return x.FollowersCount
	}
	return 0
}

func (x *GetFollowersResp) GetFollowers() []*Followers {
	if x != nil {
		return x.Followers
	}
	return nil
}

type AlterFollowerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Id          int64  `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
	Remark      string `protobuf:"bytes,3,opt,name=Remark,proto3" json:"Remark,omitempty"`
}

func (x *AlterFollowerReq) Reset() {
	*x = AlterFollowerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterFollowerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterFollowerReq) ProtoMessage() {}

func (x *AlterFollowerReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterFollowerReq.ProtoReflect.Descriptor instead.
func (*AlterFollowerReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{179}
}

func (x *AlterFollowerReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AlterFollowerReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlterFollowerReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AlterFollowerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AlterFollowerResp) Reset() {
	*x = AlterFollowerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterFollowerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterFollowerResp) ProtoMessage() {}

func (x *AlterFollowerResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterFollowerResp.ProtoReflect.Descriptor instead.
func (*AlterFollowerResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{180}
}

func (x *AlterFollowerResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteFollowersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Id          []int64 `protobuf:"varint,2,rep,packed,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteFollowersReq) Reset() {
	*x = DeleteFollowersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFollowersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFollowersReq) ProtoMessage() {}

func (x *DeleteFollowersReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFollowersReq.ProtoReflect.Descriptor instead.
func (*DeleteFollowersReq) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{181}
}

func (x *DeleteFollowersReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteFollowersReq) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteFollowersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *DeleteFollowersResp) Reset() {
	*x = DeleteFollowersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_cms_admin_cms_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFollowersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFollowersResp) ProtoMessage() {}

func (x *DeleteFollowersResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_cms_admin_cms_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFollowersResp.ProtoReflect.Descriptor instead.
func (*DeleteFollowersResp) Descriptor() ([]byte, []int) {
	return file_admin_cms_admin_cms_proto_rawDescGZIP(), []int{182}
}

func (x *DeleteFollowersResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

var File_admin_cms_admin_cms_proto protoreflect.FileDescriptor

var file_admin_cms_admin_cms_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x1a, 0x2c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x64, 0x6b, 0x5f, 0x77, 0x73, 0x2f, 0x77, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xdd, 0x03, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x50, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x50, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x50,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x50, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x75,
	0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x2f, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x22, 0xbd, 0x02, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x22, 0x8e, 0x01, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x47, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x47, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x50, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x50,
	0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x41, 0x75,
	0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x47, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2e, 0x0a,
	0x12, 0x47, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x47, 0x41, 0x75, 0x74, 0x68,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x47, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x76, 0x55,
	0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x47, 0x41, 0x75, 0x74, 0x68, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x76, 0x55, 0x72, 0x69, 0x22, 0xa7, 0x02, 0x0a, 0x0b,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x03, 0x55, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52,
	0x03, 0x55, 0x72, 0x6c, 0x22, 0x3c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x22, 0x4b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2e, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22,
	0x73, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x22, 0x94, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x6f, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x80, 0x01, 0x0a,
	0x12, 0x53, 0x61, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x22,
	0x4d, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x70,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8b,
	0x01, 0x0a, 0x17, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x18,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x38, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x17, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x47, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x73, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0xe2, 0x01, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xa6,
	0x02, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x07, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x52, 0x07, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x06,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x2d, 0x0a, 0x07, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x1d, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x1e, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0xfc, 0x01, 0x0a, 0x16, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x17, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xfb, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7d, 0x0a, 0x1d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x1e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70,
	0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x7c, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a,
	0x1b, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x7d, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7c, 0x0a, 0x1a, 0x53,
	0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x1b, 0x53, 0x65, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x7b, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x54, 0x0a,
	0x1a, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x7c, 0x0a, 0x1c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x57, 0x0a, 0x1d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xca, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x46, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x22, 0x81, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x68, 0x6f,
	0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49,
	0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2a, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0xd9, 0x03, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x77,
	0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x50, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x50, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x50,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x75,
	0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x50, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6b, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xdf, 0x03, 0x0a, 0x15, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x77, 0x6f, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x50, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x45, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x50, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x32, 0x46, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x41, 0x75, 0x74, 0x68, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x49, 0x50, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a, 0x12, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xd7, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x18, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x4e, 0x65, 0x77, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x4f, 0x54, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x4f, 0x54, 0x50,
	0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1b, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x52, 0x0a, 0x19, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2e, 0x0a, 0x13,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a,
	0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x70, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x41, 0x70, 0x69, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x50, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x0b,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x70, 0x69, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x41, 0x70, 0x69, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61,
	0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6a, 0x0a, 0x0c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc1, 0x02, 0x0a, 0x0d, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x49, 0x73, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x14,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x09, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x9f, 0x03, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49,
	0x73, 0x49, 0x44, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x49, 0x44, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x4d, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0xc3, 0x03, 0x0a, 0x15, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x24,
	0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x49, 0x44,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61,
	0x67, 0x65, 0x73, 0x49, 0x44, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x4f, 0x0a, 0x16, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x03, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x49,
	0x44, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x69, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x41, 0x70, 0x69, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xbe, 0x01, 0x0a, 0x18, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x69, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x41, 0x70, 0x69, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70,
	0x69, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x19, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x80, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf4,
	0x01, 0x0a, 0x10, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x69, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x41, 0x70, 0x69, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x69, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0d, 0x41, 0x70, 0x69, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0d, 0x41, 0x70,
	0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x41, 0x70, 0x69, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0xcb, 0x02, 0x0a,
	0x17, 0x41, 0x64, 0x64, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x49, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x53, 0x6f,
	0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x73, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x49, 0x73, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x18, 0x41, 0x64,
	0x64, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xe5, 0x02,
	0x0a, 0x19, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x46, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4d,
	0x65, 0x6e, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50,
	0x49, 0x73, 0x49, 0x44, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x73, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x1a, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa9, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x44, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x44,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x9b, 0x03, 0x0a, 0x11, 0x50, 0x61, 0x67, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x46, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4d, 0x65,
	0x6e, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49,
	0x73, 0x49, 0x44, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x73, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xb3, 0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0e,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x45,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x4e, 0x75, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x41, 0x70, 0x69, 0x4e, 0x75, 0x6d, 0x73, 0x12,
	0x41, 0x0a, 0x0d, 0x41, 0x70, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0d, 0x41, 0x70, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x50, 0x0a, 0x14, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x14,
	0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x49,
	0x44, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x4f, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x8d, 0x02, 0x0a, 0x17, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x49, 0x44, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x49, 0x44, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x18, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x02, 0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x28, 0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x50, 0x49, 0x73, 0x49,
	0x44, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x50, 0x49, 0x73, 0x49, 0x44, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x73, 0x49, 0x44, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xff, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a,
	0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x2c,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x67, 0x41, 0x75, 0x74, 0x68, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x67, 0x41, 0x75, 0x74, 0x68, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x67, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x50, 0x72, 0x6f, 0x76, 0x55, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x67, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x76, 0x55, 0x72,
	0x69, 0x12, 0x28, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x67, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x55, 0x73, 0x65, 0x72,
	0x67, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x67,
	0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x22,
	0x58, 0x0a, 0x13, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x41,
	0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x14, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x47, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x67, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xe9, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22,
	0xeb, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x09, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x70, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x4c, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xff, 0x02,
	0x0a, 0x10, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22,
	0x4a, 0x0a, 0x11, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8f, 0x01, 0x0a, 0x17,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a,
	0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x85, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x09, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x22, 0x49, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x87, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xf0, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a,
	0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x73,
	0x22, 0x8b, 0x01, 0x0a, 0x15, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x22, 0x4f,
	0x0a, 0x16, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x54, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x96, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x22, 0xf2, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52,
	0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x72, 0x0a, 0x16, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x17, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf1, 0x02, 0x0a, 0x17,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x47, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x44, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x12,
	0x34, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x4c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x4c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22,
	0xdf, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x69, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x44,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x44, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0xfd, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xbf, 0x01, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x50, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x12,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xda, 0x02,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x36, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x55, 0x72, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x1a, 0x36, 0x0a, 0x08, 0x55, 0x72, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdc, 0x01, 0x0a, 0x10, 0x53,
	0x61, 0x76, 0x65, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x55, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x71, 0x2e, 0x55, 0x72, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x55, 0x72,
	0x6c, 0x1a, 0x36, 0x0a, 0x08, 0x55, 0x72, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4a, 0x0a, 0x11, 0x53, 0x61, 0x76,
	0x65, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c,
	0x0a, 0x13, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52,
	0x4c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x34, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x22, 0x98, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x55, 0x52, 0x4c, 0x4d,
	0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x2e, 0x55,
	0x52, 0x4c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x55, 0x52, 0x4c, 0x4d,
	0x61, 0x70, 0x1a, 0x39, 0x0a, 0x0b, 0x55, 0x52, 0x4c, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x09, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x1a, 0x52,
	0x0a, 0x0e, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x4d, 0x65,
	0x50, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xd1, 0x02, 0x0a, 0x1b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x02, 0x0a, 0x1c, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x0e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xad, 0x03, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x53, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x50, 0x0a, 0x17, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xd8, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x87, 0x02,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a,
	0x0e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x6f, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5f, 0x0a, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x69,
	0x6b, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a,
	0x4c, 0x69, 0x6b, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x1c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69,
	0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xfb, 0x02, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x93, 0x02, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x51, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xc6, 0x03, 0x0a, 0x18, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6f,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x68,
	0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x91, 0x01, 0x0a, 0x1d, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x57, 0x0a, 0x1e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x97, 0x02, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x02, 0x0a, 0x26, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x63, 0x0a, 0x17, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x17,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x90, 0x03, 0x0a, 0x1e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x43, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x43, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x45,
	0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x72, 0x61, 0x62, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x41, 0x72, 0x61, 0x62, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x23, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x24, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0xcb, 0x05, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x30, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0xec, 0x03, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x22, 0x83, 0x02, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x0d, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x47, 0x0a, 0x0e,
	0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x46, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x54, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x22, 0x4a, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xe2, 0x03, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x49, 0x73, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xed, 0x06, 0x0a, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x69, 0x6b, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x69, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x4c, 0x69, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0xf7, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x6b, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9e,
	0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x22,
	0x46, 0x0a, 0x0d, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x48, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6b, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6b, 0x65,
	0x73, 0x22, 0x48, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf3, 0x01, 0x0a, 0x09,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x46, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x6e, 0x73, 0x46, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x61, 0x6e, 0x73, 0x46, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x61, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x61, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0xf1, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0xec, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x32, 0x0a, 0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x73, 0x22, 0x5c, 0x0a, 0x10, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0x4a, 0x0a, 0x11, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x46,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x32, 0xf2, 0x3f, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x4d,
	0x53, 0x12, 0x41, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x56, 0x32, 0x12, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x14, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61,
	0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a,
	0x0e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x61, 0x70, 0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x70,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x70,
	0x70, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x23, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x0f, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x16, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x16, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x25,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a,
	0x14, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x26, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x25, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12,
	0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6a, 0x0a, 0x15, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1b,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x15, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x68, 0x0a,
	0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x67, 0x41,
	0x75, 0x74, 0x68, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x67, 0x41, 0x75, 0x74, 0x68, 0x51, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x67, 0x41, 0x75, 0x74, 0x68, 0x51, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x10, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47,
	0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x41, 0x75, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x41, 0x75, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x0f, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x58, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x13, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x69, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x50,
	0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x24,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61,
	0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x63, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10,
	0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x54, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x25, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5f, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x59, 0x0a, 0x12, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5c, 0x0a, 0x13, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c,
	0x12, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x53, 0x61, 0x76,
	0x65, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52,
	0x4c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52,
	0x4c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x14, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x26, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x21, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x67, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41,
	0x0a, 0x0a, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x65, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6e, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a,
	0x09, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x41, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x73, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x16, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7f, 0x0a, 0x1c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x2e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x17, 0x5a, 0x15, 0x2e, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6d, 0x73, 0x3b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_cms_admin_cms_proto_rawDescOnce sync.Once
	file_admin_cms_admin_cms_proto_rawDescData = file_admin_cms_admin_cms_proto_rawDesc
)

func file_admin_cms_admin_cms_proto_rawDescGZIP() []byte {
	file_admin_cms_admin_cms_proto_rawDescOnce.Do(func() {
		file_admin_cms_admin_cms_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_cms_admin_cms_proto_rawDescData)
	})
	return file_admin_cms_admin_cms_proto_rawDescData
}

var file_admin_cms_admin_cms_proto_msgTypes = make([]protoimpl.MessageInfo, 187)
var file_admin_cms_admin_cms_proto_goTypes = []interface{}{
	(*CommonResp)(nil),                             // 0: admin_cms.CommonResp
	(*AdminUser)(nil),                              // 1: admin_cms.AdminUser
	(*InterestLanguage)(nil),                       // 2: admin_cms.InterestLanguage
	(*InterestReq)(nil),                            // 3: admin_cms.InterestReq
	(*InterestResp)(nil),                           // 4: admin_cms.InterestResp
	(*UserInterests)(nil),                          // 5: admin_cms.UserInterests
	(*GroupInterests)(nil),                         // 6: admin_cms.GroupInterests
	(*AdminLoginReq)(nil),                          // 7: admin_cms.AdminLoginReq
	(*AdminLoginResp)(nil),                         // 8: admin_cms.AdminLoginResp
	(*DiscoverUrl)(nil),                            // 9: admin_cms.DiscoverUrl
	(*GetDiscoverUrlReq)(nil),                      // 10: admin_cms.GetDiscoverUrlReq
	(*GetDiscoverUrlResp)(nil),                     // 11: admin_cms.GetDiscoverUrlResp
	(*GetInviteCodeBaseLinkReq)(nil),               // 12: admin_cms.GetInviteCodeBaseLinkReq
	(*GetInviteCodeBaseLinkResp)(nil),              // 13: admin_cms.GetInviteCodeBaseLinkResp
	(*SetInviteCodeBaseLinkReq)(nil),               // 14: admin_cms.SetInviteCodeBaseLinkReq
	(*AddInviteCodeRequest)(nil),                   // 15: admin_cms.AddInviteCodeRequest
	(*AddInviteCodeResponse)(nil),                  // 16: admin_cms.AddInviteCodeResponse
	(*SaveDiscoverUrlReq)(nil),                     // 17: admin_cms.SaveDiscoverUrlReq
	(*SaveDiscoverUrlResp)(nil),                    // 18: admin_cms.SaveDiscoverUrlResp
	(*SwitchDiscoverStatusReq)(nil),                // 19: admin_cms.SwitchDiscoverStatusReq
	(*SwitchDiscoverStatusResp)(nil),               // 20: admin_cms.SwitchDiscoverStatusResp
	(*CheckInviteCodeRequest)(nil),                 // 21: admin_cms.CheckInviteCodeRequest
	(*CheckInviteCodeResponse)(nil),                // 22: admin_cms.CheckInviteCodeResponse
	(*GetChannelCodeListRequest)(nil),              // 23: admin_cms.GetChannelCodeListRequest
	(*GetChannelCodeListConditions)(nil),           // 24: admin_cms.GetChannelCodeListConditions
	(*GetChannelCodeListResponse)(nil),             // 25: admin_cms.GetChannelCodeListResponse
	(*ChannelCode)(nil),                            // 26: admin_cms.ChannelCode
	(*Friends)(nil),                                // 27: admin_cms.Friends
	(*Groups)(nil),                                 // 28: admin_cms.Groups
	(*SwitchChannelCodeStateRequest)(nil),          // 29: admin_cms.SwitchChannelCodeStateRequest
	(*SwitchChannelCodeStateResponse)(nil),         // 30: admin_cms.SwitchChannelCodeStateResponse
	(*EditChannelCodeRequest)(nil),                 // 31: admin_cms.EditChannelCodeRequest
	(*EditChannelCodeResponse)(nil),                // 32: admin_cms.EditChannelCodeResponse
	(*AddChannelCodeRequest)(nil),                  // 33: admin_cms.AddChannelCodeRequest
	(*AddChannelCodeResponse)(nil),                 // 34: admin_cms.AddChannelCodeResponse
	(*MultiDeleteChannelCodeRequest)(nil),          // 35: admin_cms.MultiDeleteChannelCodeRequest
	(*MultiDeleteChannelCodeResponse)(nil),         // 36: admin_cms.MultiDeleteChannelCodeResponse
	(*SetChannelCodeLimitRequest)(nil),             // 37: admin_cms.SetChannelCodeLimitRequest
	(*SetChannelCodeLimitResponse)(nil),            // 38: admin_cms.SetChannelCodeLimitResponse
	(*SetChannelCodeSwitchRequest)(nil),            // 39: admin_cms.SetChannelCodeSwitchRequest
	(*SetChannelCodeSwitchResponse)(nil),           // 40: admin_cms.SetChannelCodeSwitchResponse
	(*SetInviteCodeSwitchRequest)(nil),             // 41: admin_cms.SetInviteCodeSwitchRequest
	(*SetInviteCodeSwitchResponse)(nil),            // 42: admin_cms.SetInviteCodeSwitchResponse
	(*SetInviteCodeLimitRequest)(nil),              // 43: admin_cms.SetInviteCodeLimitRequest
	(*SetInviteCodeLimitResponse)(nil),             // 44: admin_cms.SetInviteCodeLimitResponse
	(*MultiDeleteInviteCodeRequest)(nil),           // 45: admin_cms.MultiDeleteInviteCodeRequest
	(*MultiDeleteInviteCodeResponse)(nil),          // 46: admin_cms.MultiDeleteInviteCodeResponse
	(*GetInviteCodeListRequest)(nil),               // 47: admin_cms.GetInviteCodeListRequest
	(*GetInviteCodeListConditions)(nil),            // 48: admin_cms.GetInviteCodeListConditions
	(*GetInviteCodeListResponse)(nil),              // 49: admin_cms.GetInviteCodeListResponse
	(*InviteCodes)(nil),                            // 50: admin_cms.InviteCodes
	(*AddAdminUserResp)(nil),                       // 51: admin_cms.AddAdminUserResp
	(*AddAdminUserReq)(nil),                        // 52: admin_cms.AddAdminUserReq
	(*DeleteAdminUserReq)(nil),                     // 53: admin_cms.DeleteAdminUserReq
	(*DeleteAdminUserResp)(nil),                    // 54: admin_cms.DeleteAdminUserResp
	(*AlterAdminUserRequest)(nil),                  // 55: admin_cms.AlterAdminUserRequest
	(*AlterAdminUserResp)(nil),                     // 56: admin_cms.AlterAdminUserResp
	(*GetAdminUsersReq)(nil),                       // 57: admin_cms.GetAdminUsersReq
	(*GetAdminUsersResp)(nil),                      // 58: admin_cms.GetAdminUsersResp
	(*SwitchAdminUserStatusReq)(nil),               // 59: admin_cms.SwitchAdminUserStatusReq
	(*ChangeAdminUserPasswordReq)(nil),             // 60: admin_cms.ChangeAdminUserPasswordReq
	(*ChangeAdminUserPasswordResp)(nil),            // 61: admin_cms.ChangeAdminUserPasswordResp
	(*SwitchAdminUserStatusResp)(nil),              // 62: admin_cms.SwitchAdminUserStatusResp
	(*AdminPermissionsReq)(nil),                    // 63: admin_cms.AdminPermissionsReq
	(*AdminRole)(nil),                              // 64: admin_cms.AdminRole
	(*AdminAction)(nil),                            // 65: admin_cms.AdminAction
	(*AdminApiPath)(nil),                           // 66: admin_cms.AdminApiPath
	(*AdminPagePath)(nil),                          // 67: admin_cms.AdminPagePath
	(*AdminPermissionsResp)(nil),                   // 68: admin_cms.AdminPermissionsResp
	(*AddAdminRoleRequest)(nil),                    // 69: admin_cms.AddAdminRoleRequest
	(*AddAdminRoleResponse)(nil),                   // 70: admin_cms.AddAdminRoleResponse
	(*SearchAminRolesRequest)(nil),                 // 71: admin_cms.SearchAminRolesRequest
	(*AlterAdminRoleRequest)(nil),                  // 72: admin_cms.AlterAdminRoleRequest
	(*AlterAdminRoleResponse)(nil),                 // 73: admin_cms.AlterAdminRoleResponse
	(*GetAllAdminRolesReq)(nil),                    // 74: admin_cms.GetAllAdminRolesReq
	(*AdminRoleResp)(nil),                          // 75: admin_cms.AdminRoleResp
	(*GetAllAdminRolesResp)(nil),                   // 76: admin_cms.GetAllAdminRolesResp
	(*AddApiAdminRoleRequest)(nil),                 // 77: admin_cms.AddApiAdminRoleRequest
	(*AddApiAdminRoleResponse)(nil),                // 78: admin_cms.AddApiAdminRoleResponse
	(*AlterApiAdminRoleRequest)(nil),               // 79: admin_cms.AlterApiAdminRoleRequest
	(*AlterApiAdminRoleResponse)(nil),              // 80: admin_cms.AlterApiAdminRoleResponse
	(*GetAllApiAdminRolesReq)(nil),                 // 81: admin_cms.GetAllApiAdminRolesReq
	(*ApiAdminRoleResp)(nil),                       // 82: admin_cms.ApiAdminRoleResp
	(*GetAllApiAdminRolesResp)(nil),                // 83: admin_cms.GetAllApiAdminRolesResp
	(*AddPageAdminRoleRequest)(nil),                // 84: admin_cms.AddPageAdminRoleRequest
	(*AddPageAdminRoleResponse)(nil),               // 85: admin_cms.AddPageAdminRoleResponse
	(*AlterPageAdminRoleRequest)(nil),              // 86: admin_cms.AlterPageAdminRoleRequest
	(*AlterPageAdminRoleResponse)(nil),             // 87: admin_cms.AlterPageAdminRoleResponse
	(*GetAllPageAdminRolesReq)(nil),                // 88: admin_cms.GetAllPageAdminRolesReq
	(*PageAdminRoleResp)(nil),                      // 89: admin_cms.PageAdminRoleResp
	(*GetAllPageAdminRolesResp)(nil),               // 90: admin_cms.GetAllPageAdminRolesResp
	(*AddAdminActionRequest)(nil),                  // 91: admin_cms.AddAdminActionRequest
	(*AddAdminActionResponse)(nil),                 // 92: admin_cms.AddAdminActionResponse
	(*AlterAdminActionRequest)(nil),                // 93: admin_cms.AlterAdminActionRequest
	(*AlterAdminActionResponse)(nil),               // 94: admin_cms.AlterAdminActionResponse
	(*GetAllAdminActionReq)(nil),                   // 95: admin_cms.GetAllAdminActionReq
	(*AdminActionResp)(nil),                        // 96: admin_cms.AdminActionResp
	(*GetAllAdminActionResp)(nil),                  // 97: admin_cms.GetAllAdminActionResp
	(*GetgAuthQrCodeReq)(nil),                      // 98: admin_cms.GetgAuthQrCodeReq
	(*GetgAuthQrCodeResp)(nil),                     // 99: admin_cms.GetgAuthQrCodeResp
	(*AlterGAuthStatusReq)(nil),                    // 100: admin_cms.AlterGAuthStatusReq
	(*AlterGAuthStatusResp)(nil),                   // 101: admin_cms.AlterGAuthStatusResp
	(*GetInterestsReq)(nil),                        // 102: admin_cms.GetInterestsReq
	(*GetInterestsResp)(nil),                       // 103: admin_cms.GetInterestsResp
	(*DeleteInterestsReq)(nil),                     // 104: admin_cms.DeleteInterestsReq
	(*DeleteInterestsResp)(nil),                    // 105: admin_cms.DeleteInterestsResp
	(*AlterInterestReq)(nil),                       // 106: admin_cms.AlterInterestReq
	(*AlterInterestResp)(nil),                      // 107: admin_cms.AlterInterestResp
	(*ChangeInterestStatusReq)(nil),                // 108: admin_cms.ChangeInterestStatusReq
	(*ChangeInterestStatusResp)(nil),               // 109: admin_cms.ChangeInterestStatusResp
	(*AddInterestsReq)(nil),                        // 110: admin_cms.AddInterestsReq
	(*AddInterestsResp)(nil),                       // 111: admin_cms.AddInterestsResp
	(*GetUserInterestsReq)(nil),                    // 112: admin_cms.GetUserInterestsReq
	(*GetUserInterestsResp)(nil),                   // 113: admin_cms.GetUserInterestsResp
	(*AlterUserInterestsReq)(nil),                  // 114: admin_cms.AlterUserInterestsReq
	(*AlterUserInterestsResp)(nil),                 // 115: admin_cms.AlterUserInterestsResp
	(*DeleteUserInterestsReq)(nil),                 // 116: admin_cms.DeleteUserInterestsReq
	(*DeleteUserInterestsResp)(nil),                // 117: admin_cms.DeleteUserInterestsResp
	(*GetGroupInterestsReq)(nil),                   // 118: admin_cms.GetGroupInterestsReq
	(*GetGroupInterestsResp)(nil),                  // 119: admin_cms.GetGroupInterestsResp
	(*AlterGroupInterestsReq)(nil),                 // 120: admin_cms.AlterGroupInterestsReq
	(*AlterGroupInterestsResp)(nil),                // 121: admin_cms.AlterGroupInterestsResp
	(*SearchAdminUsersRequest)(nil),                // 122: admin_cms.SearchAdminUsersRequest
	(*SearchApiAdminRoleRequest)(nil),              // 123: admin_cms.SearchApiAdminRoleRequest
	(*SearchPageAdminRolesRequest)(nil),            // 124: admin_cms.SearchPageAdminRolesRequest
	(*OperationLogRequest)(nil),                    // 125: admin_cms.OperationLogRequest
	(*SearchOperationLogsRequest)(nil),             // 126: admin_cms.SearchOperationLogsRequest
	(*SearchOperationLogsResponse)(nil),            // 127: admin_cms.SearchOperationLogsResponse
	(*GetMePageURLReq)(nil),                        // 128: admin_cms.GetMePageURLReq
	(*GetMePageURLResp)(nil),                       // 129: admin_cms.GetMePageURLResp
	(*SaveMePageURLReq)(nil),                       // 130: admin_cms.SaveMePageURLReq
	(*SaveMePageURLResp)(nil),                      // 131: admin_cms.SaveMePageURLResp
	(*SwitchMePageURLReq)(nil),                     // 132: admin_cms.SwitchMePageURLReq
	(*SwitchMePageURLResp)(nil),                    // 133: admin_cms.SwitchMePageURLResp
	(*GetMePageURLsReq)(nil),                       // 134: admin_cms.GetMePageURLsReq
	(*MePageObj)(nil),                              // 135: admin_cms.MePageObj
	(*GetMePageURLsResp)(nil),                      // 136: admin_cms.GetMePageURLsResp
	(*ManagementShortVideoRequest)(nil),            // 137: admin_cms.ManagementShortVideoRequest
	(*ManagementShortVideoResponse)(nil),           // 138: admin_cms.ManagementShortVideoResponse
	(*ShortVideoInfoMessage)(nil),                  // 139: admin_cms.ShortVideoInfoMessage
	(*DeleteShortVideoRequest)(nil),                // 140: admin_cms.DeleteShortVideoRequest
	(*DeleteShortVideoResponse)(nil),               // 141: admin_cms.DeleteShortVideoResponse
	(*AlterShortVideoRequest)(nil),                 // 142: admin_cms.AlterShortVideoRequest
	(*AlterShortVideoResponse)(nil),                // 143: admin_cms.AlterShortVideoResponse
	(*GetShortVideoLikeListRequest)(nil),           // 144: admin_cms.GetShortVideoLikeListRequest
	(*GetShortVideoLikeListResponse)(nil),          // 145: admin_cms.GetShortVideoLikeListResponse
	(*ShortVideoLikeMessage)(nil),                  // 146: admin_cms.ShortVideoLikeMessage
	(*DeleteShortVideoLikeRequest)(nil),            // 147: admin_cms.DeleteShortVideoLikeRequest
	(*DeleteShortVideoLikeResponse)(nil),           // 148: admin_cms.DeleteShortVideoLikeResponse
	(*GetShortVideoCommentListRequest)(nil),        // 149: admin_cms.GetShortVideoCommentListRequest
	(*GetShortVideoCommentListResponse)(nil),       // 150: admin_cms.GetShortVideoCommentListResponse
	(*ShortVideoCommentMessage)(nil),               // 151: admin_cms.ShortVideoCommentMessage
	(*DeleteShortVideoCommentRequest)(nil),         // 152: admin_cms.DeleteShortVideoCommentRequest
	(*DeleteShortVideoCommentResponse)(nil),        // 153: admin_cms.DeleteShortVideoCommentResponse
	(*AlterShortVideoCommentRequest)(nil),          // 154: admin_cms.AlterShortVideoCommentRequest
	(*AlterShortVideoCommentResponse)(nil),         // 155: admin_cms.AlterShortVideoCommentResponse
	(*GetShortVideoInterestLabelListRequest)(nil),  // 156: admin_cms.GetShortVideoInterestLabelListRequest
	(*GetShortVideoInterestLabelListResponse)(nil), // 157: admin_cms.GetShortVideoInterestLabelListResponse
	(*ShortVideoInterestLabelMessage)(nil),         // 158: admin_cms.ShortVideoInterestLabelMessage
	(*AlterShortVideoInterestLabelRequest)(nil),    // 159: admin_cms.AlterShortVideoInterestLabelRequest
	(*AlterShortVideoInterestLabelResponse)(nil),   // 160: admin_cms.AlterShortVideoInterestLabelResponse
	(*RepliesResp)(nil),                            // 161: admin_cms.RepliesResp
	(*GetShortVideoCommentRepliesReq)(nil),         // 162: admin_cms.GetShortVideoCommentRepliesReq
	(*GetShortVideoCommentRepliesResp)(nil),        // 163: admin_cms.GetShortVideoCommentRepliesResp
	(*AlterReplyReq)(nil),                          // 164: admin_cms.AlterReplyReq
	(*AlterReplyResp)(nil),                         // 165: admin_cms.AlterReplyResp
	(*RepliesReq)(nil),                             // 166: admin_cms.RepliesReq
	(*DeleteRepliesReq)(nil),                       // 167: admin_cms.DeleteRepliesReq
	(*DeleteRepliesResp)(nil),                      // 168: admin_cms.DeleteRepliesResp
	(*GetShortVideoCommentLikesReq)(nil),           // 169: admin_cms.GetShortVideoCommentLikesReq
	(*LikesResp)(nil),                              // 170: admin_cms.LikesResp
	(*GetShortVideoCommentLikesResp)(nil),          // 171: admin_cms.GetShortVideoCommentLikesResp
	(*AlterLikeReq)(nil),                           // 172: admin_cms.AlterLikeReq
	(*AlterLikeResp)(nil),                          // 173: admin_cms.AlterLikeResp
	(*DeleteLikesReq)(nil),                         // 174: admin_cms.DeleteLikesReq
	(*DeleteLikesResp)(nil),                        // 175: admin_cms.DeleteLikesResp
	(*Followers)(nil),                              // 176: admin_cms.Followers
	(*GetFollowersReq)(nil),                        // 177: admin_cms.GetFollowersReq
	(*GetFollowersResp)(nil),                       // 178: admin_cms.GetFollowersResp
	(*AlterFollowerReq)(nil),                       // 179: admin_cms.AlterFollowerReq
	(*AlterFollowerResp)(nil),                      // 180: admin_cms.AlterFollowerResp
	(*DeleteFollowersReq)(nil),                     // 181: admin_cms.DeleteFollowersReq
	(*DeleteFollowersResp)(nil),                    // 182: admin_cms.DeleteFollowersResp
	nil,                                            // 183: admin_cms.GetMePageURLResp.UrlEntry
	nil,                                            // 184: admin_cms.SaveMePageURLReq.UrlEntry
	nil,                                            // 185: admin_cms.MePageObj.URLMapEntry
	nil,                                            // 186: admin_cms.GetMePageURLsResp.MePageURLEntry
	(*appversion.CommonResp)(nil),                  // 187: appversion.CommonResp
	(*sdk_ws.RequestPagination)(nil),               // 188: server_api_params.RequestPagination
	(*sdk_ws.ResponsePagination)(nil),              // 189: server_api_params.ResponsePagination
	(*appversion.GetAppVersionByIDReq)(nil),        // 190: appversion.GetAppVersionByIDReq
	(*appversion.GetLatestAppVersionReq)(nil),      // 191: appversion.GetLatestAppVersionReq
	(*appversion.GetAppVersionsReq)(nil),           // 192: appversion.GetAppVersionsReq
	(*appversion.AddAppVersionReq)(nil),            // 193: appversion.AddAppVersionReq
	(*appversion.EditAppVersionReq)(nil),           // 194: appversion.EditAppVersionReq
	(*appversion.DeleteAppVersionReq)(nil),         // 195: appversion.DeleteAppVersionReq
	(*appversion.GetAppVersionByIDResp)(nil),       // 196: appversion.GetAppVersionByIDResp
	(*appversion.GetLatestAppVersionResp)(nil),     // 197: appversion.GetLatestAppVersionResp
	(*appversion.GetAppVersionsResp)(nil),          // 198: appversion.GetAppVersionsResp
}
var file_admin_cms_admin_cms_proto_depIdxs = []int32{
	2,   // 0: admin_cms.InterestReq.Name:type_name -> admin_cms.InterestLanguage
	2,   // 1: admin_cms.InterestResp.Name:type_name -> admin_cms.InterestLanguage
	4,   // 2: admin_cms.UserInterests.Interests:type_name -> admin_cms.InterestResp
	4,   // 3: admin_cms.GroupInterests.Interests:type_name -> admin_cms.InterestResp
	9,   // 4: admin_cms.GetDiscoverUrlResp.Url:type_name -> admin_cms.DiscoverUrl
	187, // 5: admin_cms.AddInviteCodeResponse.CommonResp:type_name -> appversion.CommonResp
	187, // 6: admin_cms.SaveDiscoverUrlResp.CommonResp:type_name -> appversion.CommonResp
	187, // 7: admin_cms.SwitchDiscoverStatusResp.CommonResp:type_name -> appversion.CommonResp
	188, // 8: admin_cms.GetChannelCodeListRequest.Pagination:type_name -> server_api_params.RequestPagination
	24,  // 9: admin_cms.GetChannelCodeListRequest.Conditions:type_name -> admin_cms.GetChannelCodeListConditions
	26,  // 10: admin_cms.GetChannelCodeListResponse.ChannelCodes:type_name -> admin_cms.ChannelCode
	27,  // 11: admin_cms.ChannelCode.Friends:type_name -> admin_cms.Friends
	28,  // 12: admin_cms.ChannelCode.Groups:type_name -> admin_cms.Groups
	187, // 13: admin_cms.SwitchChannelCodeStateResponse.CommonResp:type_name -> appversion.CommonResp
	187, // 14: admin_cms.EditChannelCodeResponse.CommonResp:type_name -> appversion.CommonResp
	187, // 15: admin_cms.AddChannelCodeResponse.CommonResp:type_name -> appversion.CommonResp
	187, // 16: admin_cms.MultiDeleteChannelCodeResponse.CommonResp:type_name -> appversion.CommonResp
	187, // 17: admin_cms.SetChannelCodeLimitResponse.CommonResp:type_name -> appversion.CommonResp
	187, // 18: admin_cms.SetChannelCodeSwitchResponse.CommonResp:type_name -> appversion.CommonResp
	187, // 19: admin_cms.SetInviteCodeSwitchResponse.CommonResp:type_name -> appversion.CommonResp
	187, // 20: admin_cms.SetInviteCodeLimitResponse.CommonResp:type_name -> appversion.CommonResp
	187, // 21: admin_cms.MultiDeleteInviteCodeResponse.CommonResp:type_name -> appversion.CommonResp
	188, // 22: admin_cms.GetInviteCodeListRequest.Pagination:type_name -> server_api_params.RequestPagination
	48,  // 23: admin_cms.GetInviteCodeListRequest.Conditions:type_name -> admin_cms.GetInviteCodeListConditions
	50,  // 24: admin_cms.GetInviteCodeListResponse.List:type_name -> admin_cms.InviteCodes
	0,   // 25: admin_cms.AddAdminUserResp.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 26: admin_cms.DeleteAdminUserResp.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 27: admin_cms.AlterAdminUserResp.CommonResp:type_name -> admin_cms.CommonResp
	188, // 28: admin_cms.GetAdminUsersReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 29: admin_cms.GetAdminUsersResp.CommonResp:type_name -> admin_cms.CommonResp
	1,   // 30: admin_cms.GetAdminUsersResp.user:type_name -> admin_cms.AdminUser
	189, // 31: admin_cms.GetAdminUsersResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,   // 32: admin_cms.SwitchAdminUserStatusResp.CommonResp:type_name -> admin_cms.CommonResp
	66,  // 33: admin_cms.AdminRole.allowedApis:type_name -> admin_cms.AdminApiPath
	67,  // 34: admin_cms.AdminRole.allowedPages:type_name -> admin_cms.AdminPagePath
	66,  // 35: admin_cms.AdminAction.allowedApis:type_name -> admin_cms.AdminApiPath
	67,  // 36: admin_cms.AdminAction.allowedPages:type_name -> admin_cms.AdminPagePath
	67,  // 37: admin_cms.AdminPagePath.childs:type_name -> admin_cms.AdminPagePath
	64,  // 38: admin_cms.AdminPermissionsResp.adminRole:type_name -> admin_cms.AdminRole
	0,   // 39: admin_cms.AddAdminRoleResponse.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 40: admin_cms.AlterAdminRoleResponse.CommonResp:type_name -> admin_cms.CommonResp
	188, // 41: admin_cms.GetAllAdminRolesReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 42: admin_cms.GetAllAdminRolesResp.CommonResp:type_name -> admin_cms.CommonResp
	75,  // 43: admin_cms.GetAllAdminRolesResp.adminRoles:type_name -> admin_cms.AdminRoleResp
	189, // 44: admin_cms.GetAllAdminRolesResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,   // 45: admin_cms.AddApiAdminRoleResponse.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 46: admin_cms.AlterApiAdminRoleResponse.CommonResp:type_name -> admin_cms.CommonResp
	188, // 47: admin_cms.GetAllApiAdminRolesReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 48: admin_cms.GetAllApiAdminRolesResp.CommonResp:type_name -> admin_cms.CommonResp
	82,  // 49: admin_cms.GetAllApiAdminRolesResp.ApisAdminRole:type_name -> admin_cms.ApiAdminRoleResp
	189, // 50: admin_cms.GetAllApiAdminRolesResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,   // 51: admin_cms.AddPageAdminRoleResponse.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 52: admin_cms.AlterPageAdminRoleResponse.CommonResp:type_name -> admin_cms.CommonResp
	188, // 53: admin_cms.GetAllPageAdminRolesReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 54: admin_cms.GetAllPageAdminRolesResp.CommonResp:type_name -> admin_cms.CommonResp
	89,  // 55: admin_cms.GetAllPageAdminRolesResp.PagesAdminRole:type_name -> admin_cms.PageAdminRoleResp
	189, // 56: admin_cms.GetAllPageAdminRolesResp.Pagination:type_name -> server_api_params.ResponsePagination
	82,  // 57: admin_cms.GetAllPageAdminRolesResp.ApisAdminRole:type_name -> admin_cms.ApiAdminRoleResp
	89,  // 58: admin_cms.GetAllPageAdminRolesResp.FatherPagesAdminRole:type_name -> admin_cms.PageAdminRoleResp
	0,   // 59: admin_cms.AddAdminActionResponse.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 60: admin_cms.AlterAdminActionResponse.CommonResp:type_name -> admin_cms.CommonResp
	188, // 61: admin_cms.GetAllAdminActionReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 62: admin_cms.GetAllAdminActionResp.CommonResp:type_name -> admin_cms.CommonResp
	96,  // 63: admin_cms.GetAllAdminActionResp.adminActions:type_name -> admin_cms.AdminActionResp
	189, // 64: admin_cms.GetAllAdminActionResp.Pagination:type_name -> server_api_params.ResponsePagination
	188, // 65: admin_cms.GetInterestsReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 66: admin_cms.GetInterestsResp.CommonResp:type_name -> admin_cms.CommonResp
	4,   // 67: admin_cms.GetInterestsResp.Interests:type_name -> admin_cms.InterestResp
	189, // 68: admin_cms.GetInterestsResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,   // 69: admin_cms.DeleteInterestsResp.CommonResp:type_name -> admin_cms.CommonResp
	2,   // 70: admin_cms.AlterInterestReq.Name:type_name -> admin_cms.InterestLanguage
	0,   // 71: admin_cms.AlterInterestResp.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 72: admin_cms.ChangeInterestStatusResp.CommonResp:type_name -> admin_cms.CommonResp
	3,   // 73: admin_cms.AddInterestsReq.Interests:type_name -> admin_cms.InterestReq
	0,   // 74: admin_cms.AddInterestsResp.commonResp:type_name -> admin_cms.CommonResp
	188, // 75: admin_cms.GetUserInterestsReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 76: admin_cms.GetUserInterestsResp.CommonResp:type_name -> admin_cms.CommonResp
	5,   // 77: admin_cms.GetUserInterestsResp.Interests:type_name -> admin_cms.UserInterests
	189, // 78: admin_cms.GetUserInterestsResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,   // 79: admin_cms.AlterUserInterestsResp.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 80: admin_cms.DeleteUserInterestsResp.CommonResp:type_name -> admin_cms.CommonResp
	188, // 81: admin_cms.GetGroupInterestsReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 82: admin_cms.GetGroupInterestsResp.CommonResp:type_name -> admin_cms.CommonResp
	6,   // 83: admin_cms.GetGroupInterestsResp.Interests:type_name -> admin_cms.GroupInterests
	189, // 84: admin_cms.GetGroupInterestsResp.Pagination:type_name -> server_api_params.ResponsePagination
	0,   // 85: admin_cms.AlterGroupInterestsResp.CommonResp:type_name -> admin_cms.CommonResp
	125, // 86: admin_cms.SearchOperationLogsResponse.OperationLogs:type_name -> admin_cms.OperationLogRequest
	183, // 87: admin_cms.GetMePageURLResp.Url:type_name -> admin_cms.GetMePageURLResp.UrlEntry
	184, // 88: admin_cms.SaveMePageURLReq.Url:type_name -> admin_cms.SaveMePageURLReq.UrlEntry
	0,   // 89: admin_cms.SaveMePageURLResp.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 90: admin_cms.SwitchMePageURLResp.CommonResp:type_name -> admin_cms.CommonResp
	185, // 91: admin_cms.MePageObj.URLMap:type_name -> admin_cms.MePageObj.URLMapEntry
	186, // 92: admin_cms.GetMePageURLsResp.MePageURL:type_name -> admin_cms.GetMePageURLsResp.MePageURLEntry
	188, // 93: admin_cms.ManagementShortVideoRequest.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 94: admin_cms.ManagementShortVideoResponse.commonResp:type_name -> admin_cms.CommonResp
	189, // 95: admin_cms.ManagementShortVideoResponse.Pagination:type_name -> server_api_params.ResponsePagination
	139, // 96: admin_cms.ManagementShortVideoResponse.ShortVideoInfo:type_name -> admin_cms.ShortVideoInfoMessage
	0,   // 97: admin_cms.DeleteShortVideoResponse.commonResp:type_name -> admin_cms.CommonResp
	0,   // 98: admin_cms.AlterShortVideoResponse.commonResp:type_name -> admin_cms.CommonResp
	188, // 99: admin_cms.GetShortVideoLikeListRequest.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 100: admin_cms.GetShortVideoLikeListResponse.commonResp:type_name -> admin_cms.CommonResp
	189, // 101: admin_cms.GetShortVideoLikeListResponse.Pagination:type_name -> server_api_params.ResponsePagination
	146, // 102: admin_cms.GetShortVideoLikeListResponse.ShortVideoLike:type_name -> admin_cms.ShortVideoLikeMessage
	0,   // 103: admin_cms.DeleteShortVideoLikeResponse.commonResp:type_name -> admin_cms.CommonResp
	188, // 104: admin_cms.GetShortVideoCommentListRequest.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 105: admin_cms.GetShortVideoCommentListResponse.commonResp:type_name -> admin_cms.CommonResp
	189, // 106: admin_cms.GetShortVideoCommentListResponse.Pagination:type_name -> server_api_params.ResponsePagination
	151, // 107: admin_cms.GetShortVideoCommentListResponse.ShortVideoComment:type_name -> admin_cms.ShortVideoCommentMessage
	0,   // 108: admin_cms.DeleteShortVideoCommentResponse.commonResp:type_name -> admin_cms.CommonResp
	0,   // 109: admin_cms.AlterShortVideoCommentResponse.commonResp:type_name -> admin_cms.CommonResp
	188, // 110: admin_cms.GetShortVideoInterestLabelListRequest.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 111: admin_cms.GetShortVideoInterestLabelListResponse.commonResp:type_name -> admin_cms.CommonResp
	189, // 112: admin_cms.GetShortVideoInterestLabelListResponse.Pagination:type_name -> server_api_params.ResponsePagination
	158, // 113: admin_cms.GetShortVideoInterestLabelListResponse.ShortVideoInterestLabel:type_name -> admin_cms.ShortVideoInterestLabelMessage
	0,   // 114: admin_cms.AlterShortVideoInterestLabelResponse.commonResp:type_name -> admin_cms.CommonResp
	188, // 115: admin_cms.GetShortVideoCommentRepliesReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 116: admin_cms.GetShortVideoCommentRepliesResp.CommonResp:type_name -> admin_cms.CommonResp
	189, // 117: admin_cms.GetShortVideoCommentRepliesResp.Pagination:type_name -> server_api_params.ResponsePagination
	161, // 118: admin_cms.GetShortVideoCommentRepliesResp.CommentReplies:type_name -> admin_cms.RepliesResp
	0,   // 119: admin_cms.AlterReplyResp.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 120: admin_cms.DeleteRepliesResp.CommonResp:type_name -> admin_cms.CommonResp
	188, // 121: admin_cms.GetShortVideoCommentLikesReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 122: admin_cms.GetShortVideoCommentLikesResp.CommonResp:type_name -> admin_cms.CommonResp
	189, // 123: admin_cms.GetShortVideoCommentLikesResp.Pagination:type_name -> server_api_params.ResponsePagination
	170, // 124: admin_cms.GetShortVideoCommentLikesResp.CommentLikes:type_name -> admin_cms.LikesResp
	0,   // 125: admin_cms.AlterLikeResp.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 126: admin_cms.DeleteLikesResp.CommonResp:type_name -> admin_cms.CommonResp
	188, // 127: admin_cms.GetFollowersReq.Pagination:type_name -> server_api_params.RequestPagination
	0,   // 128: admin_cms.GetFollowersResp.CommonResp:type_name -> admin_cms.CommonResp
	189, // 129: admin_cms.GetFollowersResp.Pagination:type_name -> server_api_params.ResponsePagination
	176, // 130: admin_cms.GetFollowersResp.Followers:type_name -> admin_cms.Followers
	0,   // 131: admin_cms.AlterFollowerResp.CommonResp:type_name -> admin_cms.CommonResp
	0,   // 132: admin_cms.DeleteFollowersResp.CommonResp:type_name -> admin_cms.CommonResp
	135, // 133: admin_cms.GetMePageURLsResp.MePageURLEntry.value:type_name -> admin_cms.MePageObj
	7,   // 134: admin_cms.adminCMS.AdminLogin:input_type -> admin_cms.AdminLoginReq
	7,   // 135: admin_cms.adminCMS.AdminLoginV2:input_type -> admin_cms.AdminLoginReq
	10,  // 136: admin_cms.adminCMS.GetDiscoverUrl:input_type -> admin_cms.GetDiscoverUrlReq
	17,  // 137: admin_cms.adminCMS.SaveDiscoverUrl:input_type -> admin_cms.SaveDiscoverUrlReq
	19,  // 138: admin_cms.adminCMS.SwitchDiscoverStatus:input_type -> admin_cms.SwitchDiscoverStatusReq
	190, // 139: admin_cms.adminCMS.GetAppVersionByID:input_type -> appversion.GetAppVersionByIDReq
	191, // 140: admin_cms.adminCMS.GetLatestAppVersion:input_type -> appversion.GetLatestAppVersionReq
	192, // 141: admin_cms.adminCMS.GetAppVersions:input_type -> appversion.GetAppVersionsReq
	193, // 142: admin_cms.adminCMS.AddAppVersion:input_type -> appversion.AddAppVersionReq
	194, // 143: admin_cms.adminCMS.EditAppVersion:input_type -> appversion.EditAppVersionReq
	195, // 144: admin_cms.adminCMS.DeleteAppVersion:input_type -> appversion.DeleteAppVersionReq
	12,  // 145: admin_cms.adminCMS.GetInviteCodeBaseLink:input_type -> admin_cms.GetInviteCodeBaseLinkReq
	14,  // 146: admin_cms.adminCMS.SetInviteCodeBaseLink:input_type -> admin_cms.SetInviteCodeBaseLinkReq
	21,  // 147: admin_cms.adminCMS.CheckInviteCode:input_type -> admin_cms.CheckInviteCodeRequest
	23,  // 148: admin_cms.adminCMS.GetChannelCodeList:input_type -> admin_cms.GetChannelCodeListRequest
	29,  // 149: admin_cms.adminCMS.SwitchChannelCodeState:input_type -> admin_cms.SwitchChannelCodeStateRequest
	31,  // 150: admin_cms.adminCMS.EditChannelCode:input_type -> admin_cms.EditChannelCodeRequest
	33,  // 151: admin_cms.adminCMS.AddChannelCode:input_type -> admin_cms.AddChannelCodeRequest
	35,  // 152: admin_cms.adminCMS.MultiDeleteChannelCode:input_type -> admin_cms.MultiDeleteChannelCodeRequest
	37,  // 153: admin_cms.adminCMS.SetChannelCodeLimit:input_type -> admin_cms.SetChannelCodeLimitRequest
	39,  // 154: admin_cms.adminCMS.SetChannelCodeSwitch:input_type -> admin_cms.SetChannelCodeSwitchRequest
	41,  // 155: admin_cms.adminCMS.SetInviteCodeSwitch:input_type -> admin_cms.SetInviteCodeSwitchRequest
	43,  // 156: admin_cms.adminCMS.SetInviteCodeLimit:input_type -> admin_cms.SetInviteCodeLimitRequest
	45,  // 157: admin_cms.adminCMS.MultiDeleteInviteCode:input_type -> admin_cms.MultiDeleteInviteCodeRequest
	15,  // 158: admin_cms.adminCMS.AddInviteCode:input_type -> admin_cms.AddInviteCodeRequest
	47,  // 159: admin_cms.adminCMS.GetInviteCodeList:input_type -> admin_cms.GetInviteCodeListRequest
	52,  // 160: admin_cms.adminCMS.AddAdminUser:input_type -> admin_cms.AddAdminUserReq
	53,  // 161: admin_cms.adminCMS.DeleteAdminUser:input_type -> admin_cms.DeleteAdminUserReq
	55,  // 162: admin_cms.adminCMS.AlterAdminUser:input_type -> admin_cms.AlterAdminUserRequest
	57,  // 163: admin_cms.adminCMS.GetAdminUsers:input_type -> admin_cms.GetAdminUsersReq
	59,  // 164: admin_cms.adminCMS.SwitchAdminUserStatus:input_type -> admin_cms.SwitchAdminUserStatusReq
	60,  // 165: admin_cms.adminCMS.ChangeAdminUserPassword:input_type -> admin_cms.ChangeAdminUserPasswordReq
	98,  // 166: admin_cms.adminCMS.GetgAuthQrCode:input_type -> admin_cms.GetgAuthQrCodeReq
	100, // 167: admin_cms.adminCMS.AlterGAuthStatus:input_type -> admin_cms.AlterGAuthStatusReq
	63,  // 168: admin_cms.adminCMS.GetAdminPermissionReq:input_type -> admin_cms.AdminPermissionsReq
	69,  // 169: admin_cms.adminCMS.AddAdminRole:input_type -> admin_cms.AddAdminRoleRequest
	72,  // 170: admin_cms.adminCMS.AlterAdminRole:input_type -> admin_cms.AlterAdminRoleRequest
	72,  // 171: admin_cms.adminCMS.DeleteAdminRole:input_type -> admin_cms.AlterAdminRoleRequest
	74,  // 172: admin_cms.adminCMS.GetAllAdminRoles:input_type -> admin_cms.GetAllAdminRolesReq
	71,  // 173: admin_cms.adminCMS.SearchAminRoles:input_type -> admin_cms.SearchAminRolesRequest
	77,  // 174: admin_cms.adminCMS.AddApiAdminRole:input_type -> admin_cms.AddApiAdminRoleRequest
	79,  // 175: admin_cms.adminCMS.AlterApiAdminRole:input_type -> admin_cms.AlterApiAdminRoleRequest
	79,  // 176: admin_cms.adminCMS.DeleteApiAdminRole:input_type -> admin_cms.AlterApiAdminRoleRequest
	81,  // 177: admin_cms.adminCMS.GetAllApiAdminRoles:input_type -> admin_cms.GetAllApiAdminRolesReq
	123, // 178: admin_cms.adminCMS.SearchApiAdminRoles:input_type -> admin_cms.SearchApiAdminRoleRequest
	84,  // 179: admin_cms.adminCMS.AddPageAdminRole:input_type -> admin_cms.AddPageAdminRoleRequest
	86,  // 180: admin_cms.adminCMS.AlterPageAdminRole:input_type -> admin_cms.AlterPageAdminRoleRequest
	86,  // 181: admin_cms.adminCMS.DeletePageAdminRole:input_type -> admin_cms.AlterPageAdminRoleRequest
	88,  // 182: admin_cms.adminCMS.GetAllPageAdminRoles:input_type -> admin_cms.GetAllPageAdminRolesReq
	124, // 183: admin_cms.adminCMS.SearchPageAdminRoles:input_type -> admin_cms.SearchPageAdminRolesRequest
	91,  // 184: admin_cms.adminCMS.AddAdminAction:input_type -> admin_cms.AddAdminActionRequest
	93,  // 185: admin_cms.adminCMS.AlterAdminAction:input_type -> admin_cms.AlterAdminActionRequest
	93,  // 186: admin_cms.adminCMS.DeleteAdminAction:input_type -> admin_cms.AlterAdminActionRequest
	95,  // 187: admin_cms.adminCMS.GetAllAdminAction:input_type -> admin_cms.GetAllAdminActionReq
	122, // 188: admin_cms.adminCMS.SearchAdminUsers:input_type -> admin_cms.SearchAdminUsersRequest
	125, // 189: admin_cms.adminCMS.OperationLog:input_type -> admin_cms.OperationLogRequest
	126, // 190: admin_cms.adminCMS.SearchOperationLogs:input_type -> admin_cms.SearchOperationLogsRequest
	102, // 191: admin_cms.adminCMS.GetInterests:input_type -> admin_cms.GetInterestsReq
	104, // 192: admin_cms.adminCMS.DeleteInterests:input_type -> admin_cms.DeleteInterestsReq
	106, // 193: admin_cms.adminCMS.AlterInterest:input_type -> admin_cms.AlterInterestReq
	108, // 194: admin_cms.adminCMS.ChangeInterestStatus:input_type -> admin_cms.ChangeInterestStatusReq
	110, // 195: admin_cms.adminCMS.AddInterests:input_type -> admin_cms.AddInterestsReq
	112, // 196: admin_cms.adminCMS.GetUserInterests:input_type -> admin_cms.GetUserInterestsReq
	114, // 197: admin_cms.adminCMS.AlterUserInterests:input_type -> admin_cms.AlterUserInterestsReq
	116, // 198: admin_cms.adminCMS.DeleteUserInterests:input_type -> admin_cms.DeleteUserInterestsReq
	118, // 199: admin_cms.adminCMS.GetGroupInterests:input_type -> admin_cms.GetGroupInterestsReq
	120, // 200: admin_cms.adminCMS.AlterGroupInterests:input_type -> admin_cms.AlterGroupInterestsReq
	128, // 201: admin_cms.adminCMS.GetMePageURL:input_type -> admin_cms.GetMePageURLReq
	130, // 202: admin_cms.adminCMS.SaveMePageURL:input_type -> admin_cms.SaveMePageURLReq
	132, // 203: admin_cms.adminCMS.SwitchMePageURL:input_type -> admin_cms.SwitchMePageURLReq
	134, // 204: admin_cms.adminCMS.GetMePageURLs:input_type -> admin_cms.GetMePageURLsReq
	137, // 205: admin_cms.adminCMS.ManagementShortVideo:input_type -> admin_cms.ManagementShortVideoRequest
	140, // 206: admin_cms.adminCMS.DeleteShortVideo:input_type -> admin_cms.DeleteShortVideoRequest
	142, // 207: admin_cms.adminCMS.AlterShortVideo:input_type -> admin_cms.AlterShortVideoRequest
	144, // 208: admin_cms.adminCMS.GetShortVideoLikeList:input_type -> admin_cms.GetShortVideoLikeListRequest
	147, // 209: admin_cms.adminCMS.DeleteShortVideoLike:input_type -> admin_cms.DeleteShortVideoLikeRequest
	162, // 210: admin_cms.adminCMS.GetShortVideoCommentReplies:input_type -> admin_cms.GetShortVideoCommentRepliesReq
	164, // 211: admin_cms.adminCMS.AlterReply:input_type -> admin_cms.AlterReplyReq
	167, // 212: admin_cms.adminCMS.DeleteReplies:input_type -> admin_cms.DeleteRepliesReq
	169, // 213: admin_cms.adminCMS.GetShortVideoCommentLikes:input_type -> admin_cms.GetShortVideoCommentLikesReq
	172, // 214: admin_cms.adminCMS.AlterLike:input_type -> admin_cms.AlterLikeReq
	174, // 215: admin_cms.adminCMS.DeleteLikes:input_type -> admin_cms.DeleteLikesReq
	149, // 216: admin_cms.adminCMS.GetShortVideoCommentList:input_type -> admin_cms.GetShortVideoCommentListRequest
	152, // 217: admin_cms.adminCMS.DeleteShortVideoComment:input_type -> admin_cms.DeleteShortVideoCommentRequest
	154, // 218: admin_cms.adminCMS.AlterShortVideoComment:input_type -> admin_cms.AlterShortVideoCommentRequest
	156, // 219: admin_cms.adminCMS.GetShortVideoInterestLabelList:input_type -> admin_cms.GetShortVideoInterestLabelListRequest
	159, // 220: admin_cms.adminCMS.AlterShortVideoInterestLabel:input_type -> admin_cms.AlterShortVideoInterestLabelRequest
	177, // 221: admin_cms.adminCMS.GetFollowers:input_type -> admin_cms.GetFollowersReq
	179, // 222: admin_cms.adminCMS.AlterFollower:input_type -> admin_cms.AlterFollowerReq
	181, // 223: admin_cms.adminCMS.DeleteFollowers:input_type -> admin_cms.DeleteFollowersReq
	8,   // 224: admin_cms.adminCMS.AdminLogin:output_type -> admin_cms.AdminLoginResp
	8,   // 225: admin_cms.adminCMS.AdminLoginV2:output_type -> admin_cms.AdminLoginResp
	11,  // 226: admin_cms.adminCMS.GetDiscoverUrl:output_type -> admin_cms.GetDiscoverUrlResp
	18,  // 227: admin_cms.adminCMS.SaveDiscoverUrl:output_type -> admin_cms.SaveDiscoverUrlResp
	20,  // 228: admin_cms.adminCMS.SwitchDiscoverStatus:output_type -> admin_cms.SwitchDiscoverStatusResp
	196, // 229: admin_cms.adminCMS.GetAppVersionByID:output_type -> appversion.GetAppVersionByIDResp
	197, // 230: admin_cms.adminCMS.GetLatestAppVersion:output_type -> appversion.GetLatestAppVersionResp
	198, // 231: admin_cms.adminCMS.GetAppVersions:output_type -> appversion.GetAppVersionsResp
	187, // 232: admin_cms.adminCMS.AddAppVersion:output_type -> appversion.CommonResp
	187, // 233: admin_cms.adminCMS.EditAppVersion:output_type -> appversion.CommonResp
	187, // 234: admin_cms.adminCMS.DeleteAppVersion:output_type -> appversion.CommonResp
	13,  // 235: admin_cms.adminCMS.GetInviteCodeBaseLink:output_type -> admin_cms.GetInviteCodeBaseLinkResp
	13,  // 236: admin_cms.adminCMS.SetInviteCodeBaseLink:output_type -> admin_cms.GetInviteCodeBaseLinkResp
	22,  // 237: admin_cms.adminCMS.CheckInviteCode:output_type -> admin_cms.CheckInviteCodeResponse
	25,  // 238: admin_cms.adminCMS.GetChannelCodeList:output_type -> admin_cms.GetChannelCodeListResponse
	30,  // 239: admin_cms.adminCMS.SwitchChannelCodeState:output_type -> admin_cms.SwitchChannelCodeStateResponse
	32,  // 240: admin_cms.adminCMS.EditChannelCode:output_type -> admin_cms.EditChannelCodeResponse
	34,  // 241: admin_cms.adminCMS.AddChannelCode:output_type -> admin_cms.AddChannelCodeResponse
	36,  // 242: admin_cms.adminCMS.MultiDeleteChannelCode:output_type -> admin_cms.MultiDeleteChannelCodeResponse
	38,  // 243: admin_cms.adminCMS.SetChannelCodeLimit:output_type -> admin_cms.SetChannelCodeLimitResponse
	40,  // 244: admin_cms.adminCMS.SetChannelCodeSwitch:output_type -> admin_cms.SetChannelCodeSwitchResponse
	42,  // 245: admin_cms.adminCMS.SetInviteCodeSwitch:output_type -> admin_cms.SetInviteCodeSwitchResponse
	44,  // 246: admin_cms.adminCMS.SetInviteCodeLimit:output_type -> admin_cms.SetInviteCodeLimitResponse
	46,  // 247: admin_cms.adminCMS.MultiDeleteInviteCode:output_type -> admin_cms.MultiDeleteInviteCodeResponse
	16,  // 248: admin_cms.adminCMS.AddInviteCode:output_type -> admin_cms.AddInviteCodeResponse
	49,  // 249: admin_cms.adminCMS.GetInviteCodeList:output_type -> admin_cms.GetInviteCodeListResponse
	51,  // 250: admin_cms.adminCMS.AddAdminUser:output_type -> admin_cms.AddAdminUserResp
	54,  // 251: admin_cms.adminCMS.DeleteAdminUser:output_type -> admin_cms.DeleteAdminUserResp
	56,  // 252: admin_cms.adminCMS.AlterAdminUser:output_type -> admin_cms.AlterAdminUserResp
	58,  // 253: admin_cms.adminCMS.GetAdminUsers:output_type -> admin_cms.GetAdminUsersResp
	62,  // 254: admin_cms.adminCMS.SwitchAdminUserStatus:output_type -> admin_cms.SwitchAdminUserStatusResp
	61,  // 255: admin_cms.adminCMS.ChangeAdminUserPassword:output_type -> admin_cms.ChangeAdminUserPasswordResp
	99,  // 256: admin_cms.adminCMS.GetgAuthQrCode:output_type -> admin_cms.GetgAuthQrCodeResp
	101, // 257: admin_cms.adminCMS.AlterGAuthStatus:output_type -> admin_cms.AlterGAuthStatusResp
	68,  // 258: admin_cms.adminCMS.GetAdminPermissionReq:output_type -> admin_cms.AdminPermissionsResp
	70,  // 259: admin_cms.adminCMS.AddAdminRole:output_type -> admin_cms.AddAdminRoleResponse
	73,  // 260: admin_cms.adminCMS.AlterAdminRole:output_type -> admin_cms.AlterAdminRoleResponse
	73,  // 261: admin_cms.adminCMS.DeleteAdminRole:output_type -> admin_cms.AlterAdminRoleResponse
	76,  // 262: admin_cms.adminCMS.GetAllAdminRoles:output_type -> admin_cms.GetAllAdminRolesResp
	76,  // 263: admin_cms.adminCMS.SearchAminRoles:output_type -> admin_cms.GetAllAdminRolesResp
	78,  // 264: admin_cms.adminCMS.AddApiAdminRole:output_type -> admin_cms.AddApiAdminRoleResponse
	80,  // 265: admin_cms.adminCMS.AlterApiAdminRole:output_type -> admin_cms.AlterApiAdminRoleResponse
	80,  // 266: admin_cms.adminCMS.DeleteApiAdminRole:output_type -> admin_cms.AlterApiAdminRoleResponse
	83,  // 267: admin_cms.adminCMS.GetAllApiAdminRoles:output_type -> admin_cms.GetAllApiAdminRolesResp
	83,  // 268: admin_cms.adminCMS.SearchApiAdminRoles:output_type -> admin_cms.GetAllApiAdminRolesResp
	85,  // 269: admin_cms.adminCMS.AddPageAdminRole:output_type -> admin_cms.AddPageAdminRoleResponse
	87,  // 270: admin_cms.adminCMS.AlterPageAdminRole:output_type -> admin_cms.AlterPageAdminRoleResponse
	87,  // 271: admin_cms.adminCMS.DeletePageAdminRole:output_type -> admin_cms.AlterPageAdminRoleResponse
	90,  // 272: admin_cms.adminCMS.GetAllPageAdminRoles:output_type -> admin_cms.GetAllPageAdminRolesResp
	90,  // 273: admin_cms.adminCMS.SearchPageAdminRoles:output_type -> admin_cms.GetAllPageAdminRolesResp
	92,  // 274: admin_cms.adminCMS.AddAdminAction:output_type -> admin_cms.AddAdminActionResponse
	94,  // 275: admin_cms.adminCMS.AlterAdminAction:output_type -> admin_cms.AlterAdminActionResponse
	94,  // 276: admin_cms.adminCMS.DeleteAdminAction:output_type -> admin_cms.AlterAdminActionResponse
	97,  // 277: admin_cms.adminCMS.GetAllAdminAction:output_type -> admin_cms.GetAllAdminActionResp
	58,  // 278: admin_cms.adminCMS.SearchAdminUsers:output_type -> admin_cms.GetAdminUsersResp
	125, // 279: admin_cms.adminCMS.OperationLog:output_type -> admin_cms.OperationLogRequest
	127, // 280: admin_cms.adminCMS.SearchOperationLogs:output_type -> admin_cms.SearchOperationLogsResponse
	103, // 281: admin_cms.adminCMS.GetInterests:output_type -> admin_cms.GetInterestsResp
	105, // 282: admin_cms.adminCMS.DeleteInterests:output_type -> admin_cms.DeleteInterestsResp
	107, // 283: admin_cms.adminCMS.AlterInterest:output_type -> admin_cms.AlterInterestResp
	109, // 284: admin_cms.adminCMS.ChangeInterestStatus:output_type -> admin_cms.ChangeInterestStatusResp
	111, // 285: admin_cms.adminCMS.AddInterests:output_type -> admin_cms.AddInterestsResp
	113, // 286: admin_cms.adminCMS.GetUserInterests:output_type -> admin_cms.GetUserInterestsResp
	115, // 287: admin_cms.adminCMS.AlterUserInterests:output_type -> admin_cms.AlterUserInterestsResp
	117, // 288: admin_cms.adminCMS.DeleteUserInterests:output_type -> admin_cms.DeleteUserInterestsResp
	119, // 289: admin_cms.adminCMS.GetGroupInterests:output_type -> admin_cms.GetGroupInterestsResp
	121, // 290: admin_cms.adminCMS.AlterGroupInterests:output_type -> admin_cms.AlterGroupInterestsResp
	129, // 291: admin_cms.adminCMS.GetMePageURL:output_type -> admin_cms.GetMePageURLResp
	131, // 292: admin_cms.adminCMS.SaveMePageURL:output_type -> admin_cms.SaveMePageURLResp
	133, // 293: admin_cms.adminCMS.SwitchMePageURL:output_type -> admin_cms.SwitchMePageURLResp
	136, // 294: admin_cms.adminCMS.GetMePageURLs:output_type -> admin_cms.GetMePageURLsResp
	138, // 295: admin_cms.adminCMS.ManagementShortVideo:output_type -> admin_cms.ManagementShortVideoResponse
	141, // 296: admin_cms.adminCMS.DeleteShortVideo:output_type -> admin_cms.DeleteShortVideoResponse
	143, // 297: admin_cms.adminCMS.AlterShortVideo:output_type -> admin_cms.AlterShortVideoResponse
	145, // 298: admin_cms.adminCMS.GetShortVideoLikeList:output_type -> admin_cms.GetShortVideoLikeListResponse
	148, // 299: admin_cms.adminCMS.DeleteShortVideoLike:output_type -> admin_cms.DeleteShortVideoLikeResponse
	163, // 300: admin_cms.adminCMS.GetShortVideoCommentReplies:output_type -> admin_cms.GetShortVideoCommentRepliesResp
	165, // 301: admin_cms.adminCMS.AlterReply:output_type -> admin_cms.AlterReplyResp
	168, // 302: admin_cms.adminCMS.DeleteReplies:output_type -> admin_cms.DeleteRepliesResp
	171, // 303: admin_cms.adminCMS.GetShortVideoCommentLikes:output_type -> admin_cms.GetShortVideoCommentLikesResp
	173, // 304: admin_cms.adminCMS.AlterLike:output_type -> admin_cms.AlterLikeResp
	175, // 305: admin_cms.adminCMS.DeleteLikes:output_type -> admin_cms.DeleteLikesResp
	150, // 306: admin_cms.adminCMS.GetShortVideoCommentList:output_type -> admin_cms.GetShortVideoCommentListResponse
	153, // 307: admin_cms.adminCMS.DeleteShortVideoComment:output_type -> admin_cms.DeleteShortVideoCommentResponse
	155, // 308: admin_cms.adminCMS.AlterShortVideoComment:output_type -> admin_cms.AlterShortVideoCommentResponse
	157, // 309: admin_cms.adminCMS.GetShortVideoInterestLabelList:output_type -> admin_cms.GetShortVideoInterestLabelListResponse
	160, // 310: admin_cms.adminCMS.AlterShortVideoInterestLabel:output_type -> admin_cms.AlterShortVideoInterestLabelResponse
	178, // 311: admin_cms.adminCMS.GetFollowers:output_type -> admin_cms.GetFollowersResp
	180, // 312: admin_cms.adminCMS.AlterFollower:output_type -> admin_cms.AlterFollowerResp
	182, // 313: admin_cms.adminCMS.DeleteFollowers:output_type -> admin_cms.DeleteFollowersResp
	224, // [224:314] is the sub-list for method output_type
	134, // [134:224] is the sub-list for method input_type
	134, // [134:134] is the sub-list for extension type_name
	134, // [134:134] is the sub-list for extension extendee
	0,   // [0:134] is the sub-list for field type_name
}

func init() { file_admin_cms_admin_cms_proto_init() }
func file_admin_cms_admin_cms_proto_init() {
	if File_admin_cms_admin_cms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_cms_admin_cms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInterests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInterests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscoverUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscoverUrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInviteCodeBaseLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInviteCodeBaseLinkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetInviteCodeBaseLinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInviteCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInviteCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDiscoverUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDiscoverUrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchDiscoverStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchDiscoverStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInviteCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckInviteCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelCodeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelCodeListConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelCodeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Groups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchChannelCodeStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchChannelCodeStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChannelCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChannelCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChannelCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChannelCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiDeleteChannelCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiDeleteChannelCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChannelCodeLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChannelCodeLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChannelCodeSwitchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChannelCodeSwitchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetInviteCodeSwitchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetInviteCodeSwitchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetInviteCodeLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetInviteCodeLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiDeleteInviteCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiDeleteInviteCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInviteCodeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInviteCodeListConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInviteCodeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteCodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAdminUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAdminUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterAdminUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterAdminUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminUsersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchAdminUserStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAdminUserPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAdminUserPasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchAdminUserStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminPermissionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminApiPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminPagePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminPermissionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAminRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterAdminRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterAdminRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAdminRolesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAdminRolesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddApiAdminRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddApiAdminRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterApiAdminRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterApiAdminRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllApiAdminRolesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAdminRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllApiAdminRolesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPageAdminRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPageAdminRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterPageAdminRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterPageAdminRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPageAdminRolesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageAdminRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPageAdminRolesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterAdminActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterAdminActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAdminActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminActionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAdminActionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetgAuthQrCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetgAuthQrCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterGAuthStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterGAuthStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInterestsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInterestsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInterestsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInterestsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterInterestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterInterestResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeInterestStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeInterestStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInterestsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInterestsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInterestsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInterestsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterUserInterestsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterUserInterestsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserInterestsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserInterestsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInterestsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInterestsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterGroupInterestsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterGroupInterestsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAdminUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchApiAdminRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPageAdminRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOperationLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOperationLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMePageURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMePageURLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMePageURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMePageURLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchMePageURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchMePageURLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMePageURLsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MePageObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMePageURLsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagementShortVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagementShortVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoInfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShortVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShortVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterShortVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterShortVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoLikeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoLikeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoLikeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShortVideoLikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShortVideoLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoCommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoCommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoCommentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShortVideoCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShortVideoCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterShortVideoCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterShortVideoCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoInterestLabelListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoInterestLabelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoInterestLabelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterShortVideoInterestLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterShortVideoInterestLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepliesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoCommentRepliesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoCommentRepliesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterReplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepliesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRepliesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRepliesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoCommentLikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoCommentLikesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterLikeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLikesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Followers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterFollowerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterFollowerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFollowersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_cms_admin_cms_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFollowersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_cms_admin_cms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   187,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_cms_admin_cms_proto_goTypes,
		DependencyIndexes: file_admin_cms_admin_cms_proto_depIdxs,
		MessageInfos:      file_admin_cms_admin_cms_proto_msgTypes,
	}.Build()
	File_admin_cms_admin_cms_proto = out.File
	file_admin_cms_admin_cms_proto_rawDesc = nil
	file_admin_cms_admin_cms_proto_goTypes = nil
	file_admin_cms_admin_cms_proto_depIdxs = nil
}
