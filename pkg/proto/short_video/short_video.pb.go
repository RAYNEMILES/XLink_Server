// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: short_video/short_video.proto

package short_video

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type RequestPagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber int32 `protobuf:"varint,1,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	ShowNumber int32 `protobuf:"varint,2,opt,name=showNumber,proto3" json:"showNumber,omitempty"`
}

func (x *RequestPagination) Reset() {
	*x = RequestPagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPagination) ProtoMessage() {}

func (x *RequestPagination) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPagination.ProtoReflect.Descriptor instead.
func (*RequestPagination) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{1}
}

func (x *RequestPagination) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *RequestPagination) GetShowNumber() int32 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

type ResponsePagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage int32 `protobuf:"varint,5,opt,name=CurrentPage,proto3" json:"CurrentPage,omitempty"`
	ShowNumber  int32 `protobuf:"varint,6,opt,name=ShowNumber,proto3" json:"ShowNumber,omitempty"`
}

func (x *ResponsePagination) Reset() {
	*x = ResponsePagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePagination) ProtoMessage() {}

func (x *ResponsePagination) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePagination.ProtoReflect.Descriptor instead.
func (*ResponsePagination) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{2}
}

func (x *ResponsePagination) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *ResponsePagination) GetShowNumber() int32 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

type UserInfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=Nickname,proto3" json:"Nickname,omitempty"`
	FaceURL   string `protobuf:"bytes,3,opt,name=FaceURL,proto3" json:"FaceURL,omitempty"`
	IsDeleted bool   `protobuf:"varint,4,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty"`
}

func (x *UserInfoMessage) Reset() {
	*x = UserInfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoMessage) ProtoMessage() {}

func (x *UserInfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoMessage.ProtoReflect.Descriptor instead.
func (*UserInfoMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{3}
}

func (x *UserInfoMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfoMessage) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfoMessage) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *UserInfoMessage) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type OperationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLike    bool `protobuf:"varint,1,opt,name=IsLike,proto3" json:"IsLike,omitempty"`
	IsComment bool `protobuf:"varint,2,opt,name=IsComment,proto3" json:"IsComment,omitempty"`
}

func (x *OperationMessage) Reset() {
	*x = OperationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationMessage) ProtoMessage() {}

func (x *OperationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationMessage.ProtoReflect.Descriptor instead.
func (*OperationMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{4}
}

func (x *OperationMessage) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

func (x *OperationMessage) GetIsComment() bool {
	if x != nil {
		return x.IsComment
	}
	return false
}

type IsFollowMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFollow bool `protobuf:"varint,1,opt,name=IsFollow,proto3" json:"IsFollow,omitempty"`
}

func (x *IsFollowMessage) Reset() {
	*x = IsFollowMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFollowMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFollowMessage) ProtoMessage() {}

func (x *IsFollowMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFollowMessage.ProtoReflect.Descriptor instead.
func (*IsFollowMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{5}
}

func (x *IsFollowMessage) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

type ShortVideoCommentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId         int64                    `protobuf:"varint,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	FileId            string                   `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
	Content           string                   `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	ParentId          int64                    `protobuf:"varint,4,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	LevelId           int64                    `protobuf:"varint,5,opt,name=LevelId,proto3" json:"LevelId,omitempty"`
	CreateTime        int64                    `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	CommentReplyCount int64                    `protobuf:"varint,7,opt,name=CommentReplyCount,proto3" json:"CommentReplyCount,omitempty"`
	CommentLikeCount  int64                    `protobuf:"varint,8,opt,name=CommentLikeCount,proto3" json:"CommentLikeCount,omitempty"`
	Status            int32                    `protobuf:"varint,9,opt,name=Status,proto3" json:"Status,omitempty"`
	SelfOperation     *OperationMessage        `protobuf:"bytes,10,opt,name=SelfOperation,proto3" json:"SelfOperation,omitempty"`
	UpOperation       *OperationMessage        `protobuf:"bytes,11,opt,name=UpOperation,proto3" json:"UpOperation,omitempty"`
	CommentUserInfo   *UserInfoMessage         `protobuf:"bytes,12,opt,name=CommentUserInfo,proto3" json:"CommentUserInfo,omitempty"`
	ReplyToUserInfo   *UserInfoMessage         `protobuf:"bytes,13,opt,name=ReplyToUserInfo,proto3" json:"ReplyToUserInfo,omitempty"`
	ReplyComment      []*ShortVideoCommentInfo `protobuf:"bytes,14,rep,name=ReplyComment,proto3" json:"ReplyComment,omitempty"`
}

func (x *ShortVideoCommentInfo) Reset() {
	*x = ShortVideoCommentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoCommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoCommentInfo) ProtoMessage() {}

func (x *ShortVideoCommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoCommentInfo.ProtoReflect.Descriptor instead.
func (*ShortVideoCommentInfo) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{6}
}

func (x *ShortVideoCommentInfo) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ShortVideoCommentInfo) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoCommentInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ShortVideoCommentInfo) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ShortVideoCommentInfo) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *ShortVideoCommentInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ShortVideoCommentInfo) GetCommentReplyCount() int64 {
	if x != nil {
		return x.CommentReplyCount
	}
	return 0
}

func (x *ShortVideoCommentInfo) GetCommentLikeCount() int64 {
	if x != nil {
		return x.CommentLikeCount
	}
	return 0
}

func (x *ShortVideoCommentInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ShortVideoCommentInfo) GetSelfOperation() *OperationMessage {
	if x != nil {
		return x.SelfOperation
	}
	return nil
}

func (x *ShortVideoCommentInfo) GetUpOperation() *OperationMessage {
	if x != nil {
		return x.UpOperation
	}
	return nil
}

func (x *ShortVideoCommentInfo) GetCommentUserInfo() *UserInfoMessage {
	if x != nil {
		return x.CommentUserInfo
	}
	return nil
}

func (x *ShortVideoCommentInfo) GetReplyToUserInfo() *UserInfoMessage {
	if x != nil {
		return x.ReplyToUserInfo
	}
	return nil
}

func (x *ShortVideoCommentInfo) GetReplyComment() []*ShortVideoCommentInfo {
	if x != nil {
		return x.ReplyComment
	}
	return nil
}

type ShortVideoNoticeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeId   int64             `protobuf:"varint,1,opt,name=NoticeId,proto3" json:"NoticeId,omitempty"`
	FileId     string            `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
	CommentId  int64             `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	NoticeType int32             `protobuf:"varint,4,opt,name=NoticeType,proto3" json:"NoticeType,omitempty"`
	CreateTime int64             `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	State      int32             `protobuf:"varint,6,opt,name=State,proto3" json:"State,omitempty"`
	Context    string            `protobuf:"bytes,7,opt,name=Context,proto3" json:"Context,omitempty"`
	UpUserInfo *UserInfoMessage  `protobuf:"bytes,8,opt,name=UpUserInfo,proto3" json:"UpUserInfo,omitempty"`
	SelfInfo   *OperationMessage `protobuf:"bytes,9,opt,name=SelfInfo,proto3" json:"SelfInfo,omitempty"`
}

func (x *ShortVideoNoticeMessage) Reset() {
	*x = ShortVideoNoticeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoNoticeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoNoticeMessage) ProtoMessage() {}

func (x *ShortVideoNoticeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoNoticeMessage.ProtoReflect.Descriptor instead.
func (*ShortVideoNoticeMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{7}
}

func (x *ShortVideoNoticeMessage) GetNoticeId() int64 {
	if x != nil {
		return x.NoticeId
	}
	return 0
}

func (x *ShortVideoNoticeMessage) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoNoticeMessage) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ShortVideoNoticeMessage) GetNoticeType() int32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *ShortVideoNoticeMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ShortVideoNoticeMessage) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ShortVideoNoticeMessage) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *ShortVideoNoticeMessage) GetUpUserInfo() *UserInfoMessage {
	if x != nil {
		return x.UpUserInfo
	}
	return nil
}

func (x *ShortVideoNoticeMessage) GetSelfInfo() *OperationMessage {
	if x != nil {
		return x.SelfInfo
	}
	return nil
}

type CreateShortVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string  `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Name        string  `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Desc        string  `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
	InterestIds []int64 `protobuf:"varint,5,rep,packed,name=InterestIds,proto3" json:"InterestIds,omitempty"`
	MediaUrl    string  `protobuf:"bytes,6,opt,name=MediaUrl,proto3" json:"MediaUrl,omitempty"`
	CoverUrl    string  `protobuf:"bytes,7,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	Size        int64   `protobuf:"varint,8,opt,name=Size,proto3" json:"Size,omitempty"`
	Height      int64   `protobuf:"varint,9,opt,name=Height,proto3" json:"Height,omitempty"`
	Width       int64   `protobuf:"varint,10,opt,name=Width,proto3" json:"Width,omitempty"`
	Type        string  `protobuf:"bytes,11,opt,name=Type,proto3" json:"Type,omitempty"`
	FileId      string  `protobuf:"bytes,12,opt,name=FileId,proto3" json:"FileId,omitempty"`
}

func (x *CreateShortVideoRequest) Reset() {
	*x = CreateShortVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShortVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShortVideoRequest) ProtoMessage() {}

func (x *CreateShortVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShortVideoRequest.ProtoReflect.Descriptor instead.
func (*CreateShortVideoRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{8}
}

func (x *CreateShortVideoRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CreateShortVideoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateShortVideoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateShortVideoRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateShortVideoRequest) GetInterestIds() []int64 {
	if x != nil {
		return x.InterestIds
	}
	return nil
}

func (x *CreateShortVideoRequest) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *CreateShortVideoRequest) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *CreateShortVideoRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CreateShortVideoRequest) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CreateShortVideoRequest) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CreateShortVideoRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateShortVideoRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type CreateShortVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	FileId     string      `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
}

func (x *CreateShortVideoResponse) Reset() {
	*x = CreateShortVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShortVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShortVideoResponse) ProtoMessage() {}

func (x *CreateShortVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShortVideoResponse.ProtoReflect.Descriptor instead.
func (*CreateShortVideoResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{9}
}

func (x *CreateShortVideoResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *CreateShortVideoResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type SearchShortVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string   `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Keyword     []string `protobuf:"bytes,3,rep,name=Keyword,proto3" json:"Keyword,omitempty"`
}

func (x *SearchShortVideoRequest) Reset() {
	*x = SearchShortVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchShortVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchShortVideoRequest) ProtoMessage() {}

func (x *SearchShortVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchShortVideoRequest.ProtoReflect.Descriptor instead.
func (*SearchShortVideoRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{10}
}

func (x *SearchShortVideoRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SearchShortVideoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchShortVideoRequest) GetKeyword() []string {
	if x != nil {
		return x.Keyword
	}
	return nil
}

type SearchShortVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp         *CommonResp       `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	ShortVideoInfoList []*ShortVideoInfo `protobuf:"bytes,2,rep,name=shortVideoInfoList,proto3" json:"shortVideoInfoList,omitempty"`
}

func (x *SearchShortVideoResponse) Reset() {
	*x = SearchShortVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchShortVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchShortVideoResponse) ProtoMessage() {}

func (x *SearchShortVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchShortVideoResponse.ProtoReflect.Descriptor instead.
func (*SearchShortVideoResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{11}
}

func (x *SearchShortVideoResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *SearchShortVideoResponse) GetShortVideoInfoList() []*ShortVideoInfo {
	if x != nil {
		return x.ShortVideoInfoList
	}
	return nil
}

type GetShortVideoNoticesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string             `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	NoticeType  int32              `protobuf:"varint,3,opt,name=NoticeType,proto3" json:"NoticeType,omitempty"`
	State       int32              `protobuf:"varint,4,opt,name=State,proto3" json:"State,omitempty"`
	Pagination  *RequestPagination `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetShortVideoNoticesRequest) Reset() {
	*x = GetShortVideoNoticesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoNoticesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoNoticesRequest) ProtoMessage() {}

func (x *GetShortVideoNoticesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoNoticesRequest.ProtoReflect.Descriptor instead.
func (*GetShortVideoNoticesRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{12}
}

func (x *GetShortVideoNoticesRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoNoticesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetShortVideoNoticesRequest) GetNoticeType() int32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *GetShortVideoNoticesRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GetShortVideoNoticesRequest) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetShortVideoNoticesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp           *CommonResp                `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination           *ResponsePagination        `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	NoticeCount          int64                      `protobuf:"varint,3,opt,name=NoticeCount,proto3" json:"NoticeCount,omitempty"`
	ShortVideoNoticeList []*ShortVideoNoticeMessage `protobuf:"bytes,4,rep,name=shortVideoNoticeList,proto3" json:"shortVideoNoticeList,omitempty"`
}

func (x *GetShortVideoNoticesResponse) Reset() {
	*x = GetShortVideoNoticesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoNoticesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoNoticesResponse) ProtoMessage() {}

func (x *GetShortVideoNoticesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoNoticesResponse.ProtoReflect.Descriptor instead.
func (*GetShortVideoNoticesResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{13}
}

func (x *GetShortVideoNoticesResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoNoticesResponse) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoNoticesResponse) GetNoticeCount() int64 {
	if x != nil {
		return x.NoticeCount
	}
	return 0
}

func (x *GetShortVideoNoticesResponse) GetShortVideoNoticeList() []*ShortVideoNoticeMessage {
	if x != nil {
		return x.ShortVideoNoticeList
	}
	return nil
}

type GetShortVideoUserCountByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID   string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId        string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	OperateUserId string `protobuf:"bytes,3,opt,name=OperateUserId,proto3" json:"OperateUserId,omitempty"`
}

func (x *GetShortVideoUserCountByUserIdRequest) Reset() {
	*x = GetShortVideoUserCountByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoUserCountByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoUserCountByUserIdRequest) ProtoMessage() {}

func (x *GetShortVideoUserCountByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoUserCountByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetShortVideoUserCountByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{14}
}

func (x *GetShortVideoUserCountByUserIdRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoUserCountByUserIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetShortVideoUserCountByUserIdRequest) GetOperateUserId() string {
	if x != nil {
		return x.OperateUserId
	}
	return ""
}

type GetShortVideoUserCountByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp           *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	WorkNum              int64       `protobuf:"varint,2,opt,name=WorkNum,proto3" json:"WorkNum,omitempty"`
	LikeCount            int64       `protobuf:"varint,3,opt,name=LikeCount,proto3" json:"LikeCount,omitempty"`
	CommentNum           int64       `protobuf:"varint,4,opt,name=CommentNum,proto3" json:"CommentNum,omitempty"`
	CommentLikeNum       int64       `protobuf:"varint,5,opt,name=CommentLikeNum,proto3" json:"CommentLikeNum,omitempty"`
	FansNum              int64       `protobuf:"varint,6,opt,name=FansNum,proto3" json:"FansNum,omitempty"`
	FollowNum            int64       `protobuf:"varint,7,opt,name=FollowNum,proto3" json:"FollowNum,omitempty"`
	NoticeNum            int64       `protobuf:"varint,8,opt,name=NoticeNum,proto3" json:"NoticeNum,omitempty"`
	HarvestedLikesNumber int64       `protobuf:"varint,9,opt,name=HarvestedLikesNumber,proto3" json:"HarvestedLikesNumber,omitempty"`
}

func (x *GetShortVideoUserCountByUserIdResponse) Reset() {
	*x = GetShortVideoUserCountByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoUserCountByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoUserCountByUserIdResponse) ProtoMessage() {}

func (x *GetShortVideoUserCountByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoUserCountByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetShortVideoUserCountByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{15}
}

func (x *GetShortVideoUserCountByUserIdResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoUserCountByUserIdResponse) GetWorkNum() int64 {
	if x != nil {
		return x.WorkNum
	}
	return 0
}

func (x *GetShortVideoUserCountByUserIdResponse) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *GetShortVideoUserCountByUserIdResponse) GetCommentNum() int64 {
	if x != nil {
		return x.CommentNum
	}
	return 0
}

func (x *GetShortVideoUserCountByUserIdResponse) GetCommentLikeNum() int64 {
	if x != nil {
		return x.CommentLikeNum
	}
	return 0
}

func (x *GetShortVideoUserCountByUserIdResponse) GetFansNum() int64 {
	if x != nil {
		return x.FansNum
	}
	return 0
}

func (x *GetShortVideoUserCountByUserIdResponse) GetFollowNum() int64 {
	if x != nil {
		return x.FollowNum
	}
	return 0
}

func (x *GetShortVideoUserCountByUserIdResponse) GetNoticeNum() int64 {
	if x != nil {
		return x.NoticeNum
	}
	return 0
}

func (x *GetShortVideoUserCountByUserIdResponse) GetHarvestedLikesNumber() int64 {
	if x != nil {
		return x.HarvestedLikesNumber
	}
	return 0
}

type GetCommentPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId          string             `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CommentId       int64              `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	SourceCommentId int64              `protobuf:"varint,4,opt,name=SourceCommentId,proto3" json:"SourceCommentId,omitempty"`
	Pagination      *RequestPagination `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetCommentPageRequest) Reset() {
	*x = GetCommentPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentPageRequest) ProtoMessage() {}

func (x *GetCommentPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentPageRequest.ProtoReflect.Descriptor instead.
func (*GetCommentPageRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{16}
}

func (x *GetCommentPageRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetCommentPageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetCommentPageRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *GetCommentPageRequest) GetSourceCommentId() int64 {
	if x != nil {
		return x.SourceCommentId
	}
	return 0
}

func (x *GetCommentPageRequest) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetCommentPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp    *CommonResp              `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination    *ResponsePagination      `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	CommentInfo   *ShortVideoCommentInfo   `protobuf:"bytes,3,opt,name=commentInfo,proto3" json:"commentInfo,omitempty"`
	ReplyList     []*ShortVideoCommentInfo `protobuf:"bytes,4,rep,name=replyList,proto3" json:"replyList,omitempty"`
	ReplyCount    int64                    `protobuf:"varint,5,opt,name=ReplyCount,proto3" json:"ReplyCount,omitempty"`
	CreatorUserId string                   `protobuf:"bytes,6,opt,name=CreatorUserId,proto3" json:"CreatorUserId,omitempty"`
	TotalReplyNum int64                    `protobuf:"varint,7,opt,name=TotalReplyNum,proto3" json:"TotalReplyNum,omitempty"`
}

func (x *GetCommentPageResponse) Reset() {
	*x = GetCommentPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentPageResponse) ProtoMessage() {}

func (x *GetCommentPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentPageResponse.ProtoReflect.Descriptor instead.
func (*GetCommentPageResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{17}
}

func (x *GetCommentPageResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetCommentPageResponse) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetCommentPageResponse) GetCommentInfo() *ShortVideoCommentInfo {
	if x != nil {
		return x.CommentInfo
	}
	return nil
}

func (x *GetCommentPageResponse) GetReplyList() []*ShortVideoCommentInfo {
	if x != nil {
		return x.ReplyList
	}
	return nil
}

func (x *GetCommentPageResponse) GetReplyCount() int64 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

func (x *GetCommentPageResponse) GetCreatorUserId() string {
	if x != nil {
		return x.CreatorUserId
	}
	return ""
}

func (x *GetCommentPageResponse) GetTotalReplyNum() int64 {
	if x != nil {
		return x.TotalReplyNum
	}
	return 0
}

type GetCommentPageReplyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId          string             `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CommentId       int64              `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	SourceCommentId int64              `protobuf:"varint,4,opt,name=SourceCommentId,proto3" json:"SourceCommentId,omitempty"`
	Pagination      *RequestPagination `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetCommentPageReplyListRequest) Reset() {
	*x = GetCommentPageReplyListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentPageReplyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentPageReplyListRequest) ProtoMessage() {}

func (x *GetCommentPageReplyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentPageReplyListRequest.ProtoReflect.Descriptor instead.
func (*GetCommentPageReplyListRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{18}
}

func (x *GetCommentPageReplyListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetCommentPageReplyListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetCommentPageReplyListRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *GetCommentPageReplyListRequest) GetSourceCommentId() int64 {
	if x != nil {
		return x.SourceCommentId
	}
	return 0
}

func (x *GetCommentPageReplyListRequest) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetCommentPageReplyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp              `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination *ResponsePagination      `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	ReplyList  []*ShortVideoCommentInfo `protobuf:"bytes,4,rep,name=replyList,proto3" json:"replyList,omitempty"`
	ReplyCount int64                    `protobuf:"varint,5,opt,name=ReplyCount,proto3" json:"ReplyCount,omitempty"`
}

func (x *GetCommentPageReplyListResponse) Reset() {
	*x = GetCommentPageReplyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentPageReplyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentPageReplyListResponse) ProtoMessage() {}

func (x *GetCommentPageReplyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentPageReplyListResponse.ProtoReflect.Descriptor instead.
func (*GetCommentPageReplyListResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{19}
}

func (x *GetCommentPageReplyListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetCommentPageReplyListResponse) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetCommentPageReplyListResponse) GetReplyList() []*ShortVideoCommentInfo {
	if x != nil {
		return x.ReplyList
	}
	return nil
}

func (x *GetCommentPageReplyListResponse) GetReplyCount() int64 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

type ShortVideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64             `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FileId     string            `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`
	Name       string            `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Desc       string            `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
	ClassId    int32             `protobuf:"varint,5,opt,name=ClassId,proto3" json:"ClassId,omitempty"`
	ClassName  string            `protobuf:"bytes,6,opt,name=ClassName,proto3" json:"ClassName,omitempty"`
	CoverUrl   string            `protobuf:"bytes,7,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	MediaUrl   string            `protobuf:"bytes,8,opt,name=MediaUrl,proto3" json:"MediaUrl,omitempty"`
	Type       string            `protobuf:"bytes,9,opt,name=Type,proto3" json:"Type,omitempty"`
	Size       int64             `protobuf:"varint,10,opt,name=Size,proto3" json:"Size,omitempty"`
	Height     int64             `protobuf:"varint,11,opt,name=Height,proto3" json:"Height,omitempty"`
	Width      int64             `protobuf:"varint,12,opt,name=Width,proto3" json:"Width,omitempty"`
	Json       string            `protobuf:"bytes,13,opt,name=Json,proto3" json:"Json,omitempty"`
	LikeNum    int64             `protobuf:"varint,14,opt,name=LikeNum,proto3" json:"LikeNum,omitempty"`
	CommentNum int64             `protobuf:"varint,15,opt,name=CommentNum,proto3" json:"CommentNum,omitempty"`
	ReplyNum   int64             `protobuf:"varint,16,opt,name=ReplyNum,proto3" json:"ReplyNum,omitempty"`
	ForwardNum int64             `protobuf:"varint,17,opt,name=ForwardNum,proto3" json:"ForwardNum,omitempty"`
	UserId     string            `protobuf:"bytes,18,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CreateTime int64             `protobuf:"varint,19,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime int64             `protobuf:"varint,20,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Status     int32             `protobuf:"varint,21,opt,name=Status,proto3" json:"Status,omitempty"`
	UpUserInfo *UserInfoMessage  `protobuf:"bytes,22,opt,name=UpUserInfo,proto3" json:"UpUserInfo,omitempty"`
	SelfInfo   *OperationMessage `protobuf:"bytes,23,opt,name=SelfInfo,proto3" json:"SelfInfo,omitempty"`
	IsUpFollow *IsFollowMessage  `protobuf:"bytes,24,opt,name=IsUpFollow,proto3" json:"IsUpFollow,omitempty"`
}

func (x *ShortVideoInfo) Reset() {
	*x = ShortVideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoInfo) ProtoMessage() {}

func (x *ShortVideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoInfo.ProtoReflect.Descriptor instead.
func (*ShortVideoInfo) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{20}
}

func (x *ShortVideoInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShortVideoInfo) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShortVideoInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ShortVideoInfo) GetClassId() int32 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *ShortVideoInfo) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *ShortVideoInfo) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ShortVideoInfo) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *ShortVideoInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ShortVideoInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ShortVideoInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ShortVideoInfo) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ShortVideoInfo) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

func (x *ShortVideoInfo) GetLikeNum() int64 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *ShortVideoInfo) GetCommentNum() int64 {
	if x != nil {
		return x.CommentNum
	}
	return 0
}

func (x *ShortVideoInfo) GetReplyNum() int64 {
	if x != nil {
		return x.ReplyNum
	}
	return 0
}

func (x *ShortVideoInfo) GetForwardNum() int64 {
	if x != nil {
		return x.ForwardNum
	}
	return 0
}

func (x *ShortVideoInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShortVideoInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ShortVideoInfo) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *ShortVideoInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ShortVideoInfo) GetUpUserInfo() *UserInfoMessage {
	if x != nil {
		return x.UpUserInfo
	}
	return nil
}

func (x *ShortVideoInfo) GetSelfInfo() *OperationMessage {
	if x != nil {
		return x.SelfInfo
	}
	return nil
}

func (x *ShortVideoInfo) GetIsUpFollow() *IsFollowMessage {
	if x != nil {
		return x.IsUpFollow
	}
	return nil
}

type GetShortVideoByFileIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	FileId      string `protobuf:"bytes,3,opt,name=FileId,proto3" json:"FileId,omitempty"`
	IsAdmin     bool   `protobuf:"varint,4,opt,name=IsAdmin,proto3" json:"IsAdmin,omitempty"`
}

func (x *GetShortVideoByFileIdRequest) Reset() {
	*x = GetShortVideoByFileIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoByFileIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoByFileIdRequest) ProtoMessage() {}

func (x *GetShortVideoByFileIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoByFileIdRequest.ProtoReflect.Descriptor instead.
func (*GetShortVideoByFileIdRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{21}
}

func (x *GetShortVideoByFileIdRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoByFileIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetShortVideoByFileIdRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *GetShortVideoByFileIdRequest) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type GetShortVideoByFileIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *CommonResp     `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	ShortVideoInfo *ShortVideoInfo `protobuf:"bytes,2,opt,name=shortVideoInfo,proto3" json:"shortVideoInfo,omitempty"`
}

func (x *GetShortVideoByFileIdResponse) Reset() {
	*x = GetShortVideoByFileIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoByFileIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoByFileIdResponse) ProtoMessage() {}

func (x *GetShortVideoByFileIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoByFileIdResponse.ProtoReflect.Descriptor instead.
func (*GetShortVideoByFileIdResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{22}
}

func (x *GetShortVideoByFileIdResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoByFileIdResponse) GetShortVideoInfo() *ShortVideoInfo {
	if x != nil {
		return x.ShortVideoInfo
	}
	return nil
}

type GetShortVideoByFileIdListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId          string   `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	FileIdList      []string `protobuf:"bytes,3,rep,name=FileIdList,proto3" json:"FileIdList,omitempty"`
	OperationUserId string   `protobuf:"bytes,4,opt,name=OperationUserId,proto3" json:"OperationUserId,omitempty"`
}

func (x *GetShortVideoByFileIdListRequest) Reset() {
	*x = GetShortVideoByFileIdListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoByFileIdListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoByFileIdListRequest) ProtoMessage() {}

func (x *GetShortVideoByFileIdListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoByFileIdListRequest.ProtoReflect.Descriptor instead.
func (*GetShortVideoByFileIdListRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{23}
}

func (x *GetShortVideoByFileIdListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoByFileIdListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetShortVideoByFileIdListRequest) GetFileIdList() []string {
	if x != nil {
		return x.FileIdList
	}
	return nil
}

func (x *GetShortVideoByFileIdListRequest) GetOperationUserId() string {
	if x != nil {
		return x.OperationUserId
	}
	return ""
}

type GetShortVideoByFileIdListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp         *CommonResp       `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	ShortVideoInfoList []*ShortVideoInfo `protobuf:"bytes,2,rep,name=shortVideoInfoList,proto3" json:"shortVideoInfoList,omitempty"`
}

func (x *GetShortVideoByFileIdListResponse) Reset() {
	*x = GetShortVideoByFileIdListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoByFileIdListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoByFileIdListResponse) ProtoMessage() {}

func (x *GetShortVideoByFileIdListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoByFileIdListResponse.ProtoReflect.Descriptor instead.
func (*GetShortVideoByFileIdListResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{24}
}

func (x *GetShortVideoByFileIdListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoByFileIdListResponse) GetShortVideoInfoList() []*ShortVideoInfo {
	if x != nil {
		return x.ShortVideoInfoList
	}
	return nil
}

type FollowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	FollowUserId string `protobuf:"bytes,3,opt,name=FollowUserId,proto3" json:"FollowUserId,omitempty"`
	Follow       bool   `protobuf:"varint,4,opt,name=Follow,proto3" json:"Follow,omitempty"`
}

func (x *FollowRequest) Reset() {
	*x = FollowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowRequest) ProtoMessage() {}

func (x *FollowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowRequest.ProtoReflect.Descriptor instead.
func (*FollowRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{25}
}

func (x *FollowRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *FollowRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FollowRequest) GetFollowUserId() string {
	if x != nil {
		return x.FollowUserId
	}
	return ""
}

func (x *FollowRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

type FollowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *FollowResponse) Reset() {
	*x = FollowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowResponse) ProtoMessage() {}

func (x *FollowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowResponse.ProtoReflect.Descriptor instead.
func (*FollowResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{26}
}

func (x *FollowResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetFollowListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID   string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId        string             `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	OperateUserId string             `protobuf:"bytes,3,opt,name=OperateUserId,proto3" json:"OperateUserId,omitempty"`
	Pagination    *RequestPagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetFollowListRequest) Reset() {
	*x = GetFollowListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowListRequest) ProtoMessage() {}

func (x *GetFollowListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowListRequest.ProtoReflect.Descriptor instead.
func (*GetFollowListRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{27}
}

func (x *GetFollowListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetFollowListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFollowListRequest) GetOperateUserId() string {
	if x != nil {
		return x.OperateUserId
	}
	return ""
}

func (x *GetFollowListRequest) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetFollowListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination  *ResponsePagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	FollowList  []*UserInfoMessage  `protobuf:"bytes,3,rep,name=followList,proto3" json:"followList,omitempty"`
	FollowCount int64               `protobuf:"varint,4,opt,name=FollowCount,proto3" json:"FollowCount,omitempty"`
}

func (x *GetFollowListResponse) Reset() {
	*x = GetFollowListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowListResponse) ProtoMessage() {}

func (x *GetFollowListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowListResponse.ProtoReflect.Descriptor instead.
func (*GetFollowListResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{28}
}

func (x *GetFollowListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetFollowListResponse) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetFollowListResponse) GetFollowList() []*UserInfoMessage {
	if x != nil {
		return x.FollowList
	}
	return nil
}

func (x *GetFollowListResponse) GetFollowCount() int64 {
	if x != nil {
		return x.FollowCount
	}
	return 0
}

type GetFansListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID   string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId        string             `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	OperateUserId string             `protobuf:"bytes,3,opt,name=OperateUserId,proto3" json:"OperateUserId,omitempty"`
	Pagination    *RequestPagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetFansListRequest) Reset() {
	*x = GetFansListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFansListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFansListRequest) ProtoMessage() {}

func (x *GetFansListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFansListRequest.ProtoReflect.Descriptor instead.
func (*GetFansListRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{29}
}

func (x *GetFansListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetFansListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFansListRequest) GetOperateUserId() string {
	if x != nil {
		return x.OperateUserId
	}
	return ""
}

func (x *GetFansListRequest) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetFansListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination *ResponsePagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	FansList   []*UserInfoMessage  `protobuf:"bytes,3,rep,name=fansList,proto3" json:"fansList,omitempty"`
	FansCount  int64               `protobuf:"varint,4,opt,name=FansCount,proto3" json:"FansCount,omitempty"`
}

func (x *GetFansListResponse) Reset() {
	*x = GetFansListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFansListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFansListResponse) ProtoMessage() {}

func (x *GetFansListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFansListResponse.ProtoReflect.Descriptor instead.
func (*GetFansListResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{30}
}

func (x *GetFansListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetFansListResponse) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetFansListResponse) GetFansList() []*UserInfoMessage {
	if x != nil {
		return x.FansList
	}
	return nil
}

func (x *GetFansListResponse) GetFansCount() int64 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

type IsFollowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	FollowUserId string `protobuf:"bytes,3,opt,name=FollowUserId,proto3" json:"FollowUserId,omitempty"`
}

func (x *IsFollowRequest) Reset() {
	*x = IsFollowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFollowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFollowRequest) ProtoMessage() {}

func (x *IsFollowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFollowRequest.ProtoReflect.Descriptor instead.
func (*IsFollowRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{31}
}

func (x *IsFollowRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *IsFollowRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IsFollowRequest) GetFollowUserId() string {
	if x != nil {
		return x.FollowUserId
	}
	return ""
}

type IsFollowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	IsFollow   bool        `protobuf:"varint,2,opt,name=IsFollow,proto3" json:"IsFollow,omitempty"`
}

func (x *IsFollowResponse) Reset() {
	*x = IsFollowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFollowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFollowResponse) ProtoMessage() {}

func (x *IsFollowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFollowResponse.ProtoReflect.Descriptor instead.
func (*IsFollowResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{32}
}

func (x *IsFollowResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *IsFollowResponse) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

type ShortVideoLikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	FileId      string `protobuf:"bytes,3,opt,name=FileId,proto3" json:"FileId,omitempty"`
	Like        bool   `protobuf:"varint,4,opt,name=Like,proto3" json:"Like,omitempty"`
}

func (x *ShortVideoLikeRequest) Reset() {
	*x = ShortVideoLikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoLikeRequest) ProtoMessage() {}

func (x *ShortVideoLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoLikeRequest.ProtoReflect.Descriptor instead.
func (*ShortVideoLikeRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{33}
}

func (x *ShortVideoLikeRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ShortVideoLikeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShortVideoLikeRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoLikeRequest) GetLike() bool {
	if x != nil {
		return x.Like
	}
	return false
}

type ShortVideoLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *ShortVideoLikeResponse) Reset() {
	*x = ShortVideoLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoLikeResponse) ProtoMessage() {}

func (x *ShortVideoLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoLikeResponse.ProtoReflect.Descriptor instead.
func (*ShortVideoLikeResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{34}
}

func (x *ShortVideoLikeResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetLikeShortVideoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OperatorUserId string             `protobuf:"bytes,2,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
	UserId         string             `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Pagination     *RequestPagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetLikeShortVideoListRequest) Reset() {
	*x = GetLikeShortVideoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikeShortVideoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikeShortVideoListRequest) ProtoMessage() {}

func (x *GetLikeShortVideoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikeShortVideoListRequest.ProtoReflect.Descriptor instead.
func (*GetLikeShortVideoListRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{35}
}

func (x *GetLikeShortVideoListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetLikeShortVideoListRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

func (x *GetLikeShortVideoListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLikeShortVideoListRequest) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetLikeShortVideoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp         *CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination         *ResponsePagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	ShortVideoInfoList []*ShortVideoInfo   `protobuf:"bytes,3,rep,name=shortVideoInfoList,proto3" json:"shortVideoInfoList,omitempty"`
	ShortVideoCount    int64               `protobuf:"varint,4,opt,name=ShortVideoCount,proto3" json:"ShortVideoCount,omitempty"`
}

func (x *GetLikeShortVideoListResponse) Reset() {
	*x = GetLikeShortVideoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikeShortVideoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikeShortVideoListResponse) ProtoMessage() {}

func (x *GetLikeShortVideoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikeShortVideoListResponse.ProtoReflect.Descriptor instead.
func (*GetLikeShortVideoListResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{36}
}

func (x *GetLikeShortVideoListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetLikeShortVideoListResponse) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetLikeShortVideoListResponse) GetShortVideoInfoList() []*ShortVideoInfo {
	if x != nil {
		return x.ShortVideoInfoList
	}
	return nil
}

func (x *GetLikeShortVideoListResponse) GetShortVideoCount() int64 {
	if x != nil {
		return x.ShortVideoCount
	}
	return 0
}

type GetShortVideoListByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OperatorUserId string             `protobuf:"bytes,2,opt,name=OperatorUserId,proto3" json:"OperatorUserId,omitempty"`
	UserId         string             `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Pagination     *RequestPagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetShortVideoListByUserIdRequest) Reset() {
	*x = GetShortVideoListByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoListByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoListByUserIdRequest) ProtoMessage() {}

func (x *GetShortVideoListByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoListByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetShortVideoListByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{37}
}

func (x *GetShortVideoListByUserIdRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoListByUserIdRequest) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

func (x *GetShortVideoListByUserIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetShortVideoListByUserIdRequest) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetShortVideoListByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp         *CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination         *ResponsePagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	IsUpFollow         *IsFollowMessage    `protobuf:"bytes,3,opt,name=IsUpFollow,proto3" json:"IsUpFollow,omitempty"`
	ShortVideoInfoList []*ShortVideoInfo   `protobuf:"bytes,4,rep,name=shortVideoInfoList,proto3" json:"shortVideoInfoList,omitempty"`
	ShortVideoCount    int64               `protobuf:"varint,5,opt,name=ShortVideoCount,proto3" json:"ShortVideoCount,omitempty"`
}

func (x *GetShortVideoListByUserIdResponse) Reset() {
	*x = GetShortVideoListByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoListByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoListByUserIdResponse) ProtoMessage() {}

func (x *GetShortVideoListByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoListByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetShortVideoListByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{38}
}

func (x *GetShortVideoListByUserIdResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoListByUserIdResponse) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoListByUserIdResponse) GetIsUpFollow() *IsFollowMessage {
	if x != nil {
		return x.IsUpFollow
	}
	return nil
}

func (x *GetShortVideoListByUserIdResponse) GetShortVideoInfoList() []*ShortVideoInfo {
	if x != nil {
		return x.ShortVideoInfoList
	}
	return nil
}

func (x *GetShortVideoListByUserIdResponse) GetShortVideoCount() int64 {
	if x != nil {
		return x.ShortVideoCount
	}
	return 0
}

type GetRecommendShortVideoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Size        int32  `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *GetRecommendShortVideoListRequest) Reset() {
	*x = GetRecommendShortVideoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendShortVideoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendShortVideoListRequest) ProtoMessage() {}

func (x *GetRecommendShortVideoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendShortVideoListRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendShortVideoListRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{39}
}

func (x *GetRecommendShortVideoListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetRecommendShortVideoListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetRecommendShortVideoListRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetRecommendShortVideoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp         *CommonResp       `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	FileIdList         []string          `protobuf:"bytes,2,rep,name=FileIdList,proto3" json:"FileIdList,omitempty"`
	ShortVideoInfoList []*ShortVideoInfo `protobuf:"bytes,3,rep,name=shortVideoInfoList,proto3" json:"shortVideoInfoList,omitempty"`
}

func (x *GetRecommendShortVideoListResponse) Reset() {
	*x = GetRecommendShortVideoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendShortVideoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendShortVideoListResponse) ProtoMessage() {}

func (x *GetRecommendShortVideoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendShortVideoListResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendShortVideoListResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{40}
}

func (x *GetRecommendShortVideoListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetRecommendShortVideoListResponse) GetFileIdList() []string {
	if x != nil {
		return x.FileIdList
	}
	return nil
}

func (x *GetRecommendShortVideoListResponse) GetShortVideoInfoList() []*ShortVideoInfo {
	if x != nil {
		return x.ShortVideoInfoList
	}
	return nil
}

type GetFollowShortVideoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string             `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Pagination  *RequestPagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetFollowShortVideoListRequest) Reset() {
	*x = GetFollowShortVideoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowShortVideoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowShortVideoListRequest) ProtoMessage() {}

func (x *GetFollowShortVideoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowShortVideoListRequest.ProtoReflect.Descriptor instead.
func (*GetFollowShortVideoListRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{41}
}

func (x *GetFollowShortVideoListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetFollowShortVideoListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFollowShortVideoListRequest) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetFollowShortVideoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp         *CommonResp         `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination         *ResponsePagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	FileIdList         []string            `protobuf:"bytes,3,rep,name=FileIdList,proto3" json:"FileIdList,omitempty"`
	ShortVideoCount    int64               `protobuf:"varint,4,opt,name=ShortVideoCount,proto3" json:"ShortVideoCount,omitempty"`
	ShortVideoInfoList []*ShortVideoInfo   `protobuf:"bytes,5,rep,name=shortVideoInfoList,proto3" json:"shortVideoInfoList,omitempty"`
}

func (x *GetFollowShortVideoListResponse) Reset() {
	*x = GetFollowShortVideoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowShortVideoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowShortVideoListResponse) ProtoMessage() {}

func (x *GetFollowShortVideoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowShortVideoListResponse.ProtoReflect.Descriptor instead.
func (*GetFollowShortVideoListResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{42}
}

func (x *GetFollowShortVideoListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetFollowShortVideoListResponse) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetFollowShortVideoListResponse) GetFileIdList() []string {
	if x != nil {
		return x.FileIdList
	}
	return nil
}

func (x *GetFollowShortVideoListResponse) GetShortVideoCount() int64 {
	if x != nil {
		return x.ShortVideoCount
	}
	return 0
}

func (x *GetFollowShortVideoListResponse) GetShortVideoInfoList() []*ShortVideoInfo {
	if x != nil {
		return x.ShortVideoInfoList
	}
	return nil
}

type ShortVideoCommentLikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CommentId   int64  `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	FileId      string `protobuf:"bytes,4,opt,name=FileId,proto3" json:"FileId,omitempty"`
	Like        bool   `protobuf:"varint,5,opt,name=Like,proto3" json:"Like,omitempty"`
}

func (x *ShortVideoCommentLikeRequest) Reset() {
	*x = ShortVideoCommentLikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoCommentLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoCommentLikeRequest) ProtoMessage() {}

func (x *ShortVideoCommentLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoCommentLikeRequest.ProtoReflect.Descriptor instead.
func (*ShortVideoCommentLikeRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{43}
}

func (x *ShortVideoCommentLikeRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ShortVideoCommentLikeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShortVideoCommentLikeRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ShortVideoCommentLikeRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoCommentLikeRequest) GetLike() bool {
	if x != nil {
		return x.Like
	}
	return false
}

type ShortVideoCommentLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *ShortVideoCommentLikeResponse) Reset() {
	*x = ShortVideoCommentLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoCommentLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoCommentLikeResponse) ProtoMessage() {}

func (x *ShortVideoCommentLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoCommentLikeResponse.ProtoReflect.Descriptor instead.
func (*ShortVideoCommentLikeResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{44}
}

func (x *ShortVideoCommentLikeResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type ShortVideoCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	FileId      string `protobuf:"bytes,3,opt,name=FileId,proto3" json:"FileId,omitempty"`
	ParentId    int64  `protobuf:"varint,4,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	Content     string `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *ShortVideoCommentRequest) Reset() {
	*x = ShortVideoCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoCommentRequest) ProtoMessage() {}

func (x *ShortVideoCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoCommentRequest.ProtoReflect.Descriptor instead.
func (*ShortVideoCommentRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{45}
}

func (x *ShortVideoCommentRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ShortVideoCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShortVideoCommentRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoCommentRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ShortVideoCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ShortVideoCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	CommentId  int64       `protobuf:"varint,2,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
}

func (x *ShortVideoCommentResponse) Reset() {
	*x = ShortVideoCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoCommentResponse) ProtoMessage() {}

func (x *ShortVideoCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoCommentResponse.ProtoReflect.Descriptor instead.
func (*ShortVideoCommentResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{46}
}

func (x *ShortVideoCommentResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *ShortVideoCommentResponse) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type DeleteShortVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CommentId   int64  `protobuf:"varint,2,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	UserId      string `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	FileId      string `protobuf:"bytes,4,opt,name=FileId,proto3" json:"FileId,omitempty"`
	IsAdmin     bool   `protobuf:"varint,5,opt,name=IsAdmin,proto3" json:"IsAdmin,omitempty"`
}

func (x *DeleteShortVideoRequest) Reset() {
	*x = DeleteShortVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShortVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShortVideoRequest) ProtoMessage() {}

func (x *DeleteShortVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShortVideoRequest.ProtoReflect.Descriptor instead.
func (*DeleteShortVideoRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteShortVideoRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteShortVideoRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *DeleteShortVideoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteShortVideoRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *DeleteShortVideoRequest) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type DeleteShortVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *DeleteShortVideoResponse) Reset() {
	*x = DeleteShortVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShortVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShortVideoResponse) ProtoMessage() {}

func (x *DeleteShortVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShortVideoResponse.ProtoReflect.Descriptor instead.
func (*DeleteShortVideoResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteShortVideoResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetShortVideoCommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OperationUserID string             `protobuf:"bytes,2,opt,name=OperationUserID,proto3" json:"OperationUserID,omitempty"`
	FileId          string             `protobuf:"bytes,3,opt,name=FileId,proto3" json:"FileId,omitempty"`
	CommentId       int64              `protobuf:"varint,4,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	Pagination      *RequestPagination `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
	UserId          string             `protobuf:"bytes,6,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ParentId        int64              `protobuf:"varint,7,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	OrderBy         int32              `protobuf:"varint,8,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	SourceCommentId int64              `protobuf:"varint,9,opt,name=SourceCommentId,proto3" json:"SourceCommentId,omitempty"`
}

func (x *GetShortVideoCommentListRequest) Reset() {
	*x = GetShortVideoCommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoCommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoCommentListRequest) ProtoMessage() {}

func (x *GetShortVideoCommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoCommentListRequest.ProtoReflect.Descriptor instead.
func (*GetShortVideoCommentListRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{49}
}

func (x *GetShortVideoCommentListRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetShortVideoCommentListRequest) GetOperationUserID() string {
	if x != nil {
		return x.OperationUserID
	}
	return ""
}

func (x *GetShortVideoCommentListRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *GetShortVideoCommentListRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *GetShortVideoCommentListRequest) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoCommentListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetShortVideoCommentListRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GetShortVideoCommentListRequest) GetOrderBy() int32 {
	if x != nil {
		return x.OrderBy
	}
	return 0
}

func (x *GetShortVideoCommentListRequest) GetSourceCommentId() int64 {
	if x != nil {
		return x.SourceCommentId
	}
	return 0
}

type GetShortVideoCommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp         *CommonResp              `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Pagination         *ResponsePagination      `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	CommentList        []*ShortVideoCommentInfo `protobuf:"bytes,3,rep,name=commentList,proto3" json:"commentList,omitempty"`
	CommentCount       int64                    `protobuf:"varint,4,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`
	Level0CommentCount int64                    `protobuf:"varint,5,opt,name=Level0CommentCount,proto3" json:"Level0CommentCount,omitempty"`
}

func (x *GetShortVideoCommentListResponse) Reset() {
	*x = GetShortVideoCommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortVideoCommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortVideoCommentListResponse) ProtoMessage() {}

func (x *GetShortVideoCommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortVideoCommentListResponse.ProtoReflect.Descriptor instead.
func (*GetShortVideoCommentListResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{50}
}

func (x *GetShortVideoCommentListResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetShortVideoCommentListResponse) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetShortVideoCommentListResponse) GetCommentList() []*ShortVideoCommentInfo {
	if x != nil {
		return x.CommentList
	}
	return nil
}

func (x *GetShortVideoCommentListResponse) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *GetShortVideoCommentListResponse) GetLevel0CommentCount() int64 {
	if x != nil {
		return x.Level0CommentCount
	}
	return 0
}

type GetUpdateShortVideoSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string  `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string  `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Desc        string  `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`
	InterestId  []int32 `protobuf:"varint,4,rep,packed,name=InterestId,proto3" json:"InterestId,omitempty"`
}

func (x *GetUpdateShortVideoSignRequest) Reset() {
	*x = GetUpdateShortVideoSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpdateShortVideoSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpdateShortVideoSignRequest) ProtoMessage() {}

func (x *GetUpdateShortVideoSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpdateShortVideoSignRequest.ProtoReflect.Descriptor instead.
func (*GetUpdateShortVideoSignRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{51}
}

func (x *GetUpdateShortVideoSignRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetUpdateShortVideoSignRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUpdateShortVideoSignRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetUpdateShortVideoSignRequest) GetInterestId() []int32 {
	if x != nil {
		return x.InterestId
	}
	return nil
}

type GetUpdateShortVideoSignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
	Sign       string      `protobuf:"bytes,2,opt,name=Sign,proto3" json:"Sign,omitempty"`
}

func (x *GetUpdateShortVideoSignResponse) Reset() {
	*x = GetUpdateShortVideoSignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpdateShortVideoSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpdateShortVideoSignResponse) ProtoMessage() {}

func (x *GetUpdateShortVideoSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpdateShortVideoSignResponse.ProtoReflect.Descriptor instead.
func (*GetUpdateShortVideoSignResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{52}
}

func (x *GetUpdateShortVideoSignResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetUpdateShortVideoSignResponse) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type FileDeletedCallBackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string                  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	EventType       string                  `protobuf:"bytes,2,opt,name=EventType,proto3" json:"EventType,omitempty"`
	FileDeleteEvent *FileDeleteEventMessage `protobuf:"bytes,3,opt,name=FileDeleteEvent,proto3" json:"FileDeleteEvent,omitempty"`
}

func (x *FileDeletedCallBackRequest) Reset() {
	*x = FileDeletedCallBackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDeletedCallBackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDeletedCallBackRequest) ProtoMessage() {}

func (x *FileDeletedCallBackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDeletedCallBackRequest.ProtoReflect.Descriptor instead.
func (*FileDeletedCallBackRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{53}
}

func (x *FileDeletedCallBackRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *FileDeletedCallBackRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *FileDeletedCallBackRequest) GetFileDeleteEvent() *FileDeleteEventMessage {
	if x != nil {
		return x.FileDeleteEvent
	}
	return nil
}

type FileDeletedCallBackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *FileDeletedCallBackResponse) Reset() {
	*x = FileDeletedCallBackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDeletedCallBackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDeletedCallBackResponse) ProtoMessage() {}

func (x *FileDeletedCallBackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDeletedCallBackResponse.ProtoReflect.Descriptor instead.
func (*FileDeletedCallBackResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{54}
}

func (x *FileDeletedCallBackResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type ProcedureStateChangeCallBackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID               string                            `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	EventType                 string                            `protobuf:"bytes,2,opt,name=EventType,proto3" json:"EventType,omitempty"`
	ProcedureStateChangeEvent *ProcedureStateChangeEventMessage `protobuf:"bytes,3,opt,name=ProcedureStateChangeEvent,proto3" json:"ProcedureStateChangeEvent,omitempty"`
}

func (x *ProcedureStateChangeCallBackRequest) Reset() {
	*x = ProcedureStateChangeCallBackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcedureStateChangeCallBackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureStateChangeCallBackRequest) ProtoMessage() {}

func (x *ProcedureStateChangeCallBackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureStateChangeCallBackRequest.ProtoReflect.Descriptor instead.
func (*ProcedureStateChangeCallBackRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{55}
}

func (x *ProcedureStateChangeCallBackRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ProcedureStateChangeCallBackRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *ProcedureStateChangeCallBackRequest) GetProcedureStateChangeEvent() *ProcedureStateChangeEventMessage {
	if x != nil {
		return x.ProcedureStateChangeEvent
	}
	return nil
}

type ProcedureStateChangeEventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId                string                   `protobuf:"bytes,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
	Status                string                   `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	ErrCode               uint32                   `protobuf:"varint,3,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	Message               string                   `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	FileId                string                   `protobuf:"bytes,5,opt,name=FileId,proto3" json:"FileId,omitempty"`
	FileName              string                   `protobuf:"bytes,6,opt,name=FileName,proto3" json:"FileName,omitempty"`
	FileUrl               string                   `protobuf:"bytes,7,opt,name=FileUrl,proto3" json:"FileUrl,omitempty"`
	MediaProcessResultSet []*Mediaprocessresultset `protobuf:"bytes,9,rep,name=MediaProcessResultSet,proto3" json:"MediaProcessResultSet,omitempty"`
}

func (x *ProcedureStateChangeEventMessage) Reset() {
	*x = ProcedureStateChangeEventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcedureStateChangeEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureStateChangeEventMessage) ProtoMessage() {}

func (x *ProcedureStateChangeEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureStateChangeEventMessage.ProtoReflect.Descriptor instead.
func (*ProcedureStateChangeEventMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{56}
}

func (x *ProcedureStateChangeEventMessage) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ProcedureStateChangeEventMessage) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcedureStateChangeEventMessage) GetErrCode() uint32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *ProcedureStateChangeEventMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcedureStateChangeEventMessage) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ProcedureStateChangeEventMessage) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ProcedureStateChangeEventMessage) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *ProcedureStateChangeEventMessage) GetMediaProcessResultSet() []*Mediaprocessresultset {
	if x != nil {
		return x.MediaProcessResultSet
	}
	return nil
}

type Mediaprocessresultset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string         `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	TranscodeTask *Transcodetask `protobuf:"bytes,2,opt,name=TranscodeTask,proto3" json:"TranscodeTask,omitempty"`
}

func (x *Mediaprocessresultset) Reset() {
	*x = Mediaprocessresultset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mediaprocessresultset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mediaprocessresultset) ProtoMessage() {}

func (x *Mediaprocessresultset) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mediaprocessresultset.ProtoReflect.Descriptor instead.
func (*Mediaprocessresultset) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{57}
}

func (x *Mediaprocessresultset) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Mediaprocessresultset) GetTranscodeTask() *Transcodetask {
	if x != nil {
		return x.TranscodeTask
	}
	return nil
}

type Transcodetask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string  `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	ErrCode uint32  `protobuf:"varint,2,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	Message string  `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	Input   *Input  `protobuf:"bytes,4,opt,name=Input,proto3" json:"Input,omitempty"`
	Output  *Output `protobuf:"bytes,5,opt,name=Output,proto3" json:"Output,omitempty"`
}

func (x *Transcodetask) Reset() {
	*x = Transcodetask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transcodetask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transcodetask) ProtoMessage() {}

func (x *Transcodetask) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transcodetask.ProtoReflect.Descriptor instead.
func (*Transcodetask) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{58}
}

func (x *Transcodetask) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Transcodetask) GetErrCode() uint32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *Transcodetask) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Transcodetask) GetInput() *Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *Transcodetask) GetOutput() *Output {
	if x != nil {
		return x.Output
	}
	return nil
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definition uint32 `protobuf:"varint,1,opt,name=Definition,proto3" json:"Definition,omitempty"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{59}
}

func (x *Input) GetDefinition() uint32 {
	if x != nil {
		return x.Definition
	}
	return 0
}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL            string             `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Size           uint32             `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	Container      string             `protobuf:"bytes,3,opt,name=Container,proto3" json:"Container,omitempty"`
	Height         uint32             `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Width          uint32             `protobuf:"varint,5,opt,name=Width,proto3" json:"Width,omitempty"`
	Bitrate        uint32             `protobuf:"varint,6,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Md5            string             `protobuf:"bytes,7,opt,name=Md5,proto3" json:"Md5,omitempty"`
	Duration       float64            `protobuf:"fixed64,8,opt,name=Duration,proto3" json:"Duration,omitempty"`
	VideoStreamSet []*Videostreamset1 `protobuf:"bytes,9,rep,name=VideoStreamSet,proto3" json:"VideoStreamSet,omitempty"`
	AudioStreamSet []*Audiostreamset1 `protobuf:"bytes,10,rep,name=AudioStreamSet,proto3" json:"AudioStreamSet,omitempty"`
	Definition     uint32             `protobuf:"varint,11,opt,name=Definition,proto3" json:"Definition,omitempty"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{60}
}

func (x *Output) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Output) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Output) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *Output) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Output) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Output) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Output) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *Output) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Output) GetVideoStreamSet() []*Videostreamset1 {
	if x != nil {
		return x.VideoStreamSet
	}
	return nil
}

func (x *Output) GetAudioStreamSet() []*Audiostreamset1 {
	if x != nil {
		return x.AudioStreamSet
	}
	return nil
}

func (x *Output) GetDefinition() uint32 {
	if x != nil {
		return x.Definition
	}
	return 0
}

type Videostreamset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitrate uint32 `protobuf:"varint,1,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Codec   string `protobuf:"bytes,2,opt,name=Codec,proto3" json:"Codec,omitempty"`
	Fps     uint32 `protobuf:"varint,3,opt,name=Fps,proto3" json:"Fps,omitempty"`
	Height  uint32 `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Width   uint32 `protobuf:"varint,5,opt,name=Width,proto3" json:"Width,omitempty"`
}

func (x *Videostreamset) Reset() {
	*x = Videostreamset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Videostreamset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Videostreamset) ProtoMessage() {}

func (x *Videostreamset) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Videostreamset.ProtoReflect.Descriptor instead.
func (*Videostreamset) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{61}
}

func (x *Videostreamset) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Videostreamset) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *Videostreamset) GetFps() uint32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *Videostreamset) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Videostreamset) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type Videostreamset1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitrate uint32 `protobuf:"varint,1,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Codec   string `protobuf:"bytes,2,opt,name=Codec,proto3" json:"Codec,omitempty"`
	Fps     uint32 `protobuf:"varint,3,opt,name=Fps,proto3" json:"Fps,omitempty"`
	Height  uint32 `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Width   uint32 `protobuf:"varint,5,opt,name=Width,proto3" json:"Width,omitempty"`
}

func (x *Videostreamset1) Reset() {
	*x = Videostreamset1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Videostreamset1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Videostreamset1) ProtoMessage() {}

func (x *Videostreamset1) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Videostreamset1.ProtoReflect.Descriptor instead.
func (*Videostreamset1) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{62}
}

func (x *Videostreamset1) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Videostreamset1) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *Videostreamset1) GetFps() uint32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *Videostreamset1) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Videostreamset1) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type Audiostreamset1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitrate      uint32 `protobuf:"varint,1,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Codec        string `protobuf:"bytes,2,opt,name=Codec,proto3" json:"Codec,omitempty"`
	SamplingRate uint32 `protobuf:"varint,3,opt,name=SamplingRate,proto3" json:"SamplingRate,omitempty"`
}

func (x *Audiostreamset1) Reset() {
	*x = Audiostreamset1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audiostreamset1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audiostreamset1) ProtoMessage() {}

func (x *Audiostreamset1) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audiostreamset1.ProtoReflect.Descriptor instead.
func (*Audiostreamset1) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{63}
}

func (x *Audiostreamset1) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Audiostreamset1) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *Audiostreamset1) GetSamplingRate() uint32 {
	if x != nil {
		return x.SamplingRate
	}
	return 0
}

type Audiostreamset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitrate      uint32 `protobuf:"varint,1,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Codec        string `protobuf:"bytes,2,opt,name=Codec,proto3" json:"Codec,omitempty"`
	SamplingRate uint32 `protobuf:"varint,3,opt,name=SamplingRate,proto3" json:"SamplingRate,omitempty"`
}

func (x *Audiostreamset) Reset() {
	*x = Audiostreamset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audiostreamset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audiostreamset) ProtoMessage() {}

func (x *Audiostreamset) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audiostreamset.ProtoReflect.Descriptor instead.
func (*Audiostreamset) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{64}
}

func (x *Audiostreamset) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Audiostreamset) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *Audiostreamset) GetSamplingRate() uint32 {
	if x != nil {
		return x.SamplingRate
	}
	return 0
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioDuration  float64           `protobuf:"fixed64,1,opt,name=AudioDuration,proto3" json:"AudioDuration,omitempty"`
	AudioStreamSet []*Audiostreamset `protobuf:"bytes,2,rep,name=AudioStreamSet,proto3" json:"AudioStreamSet,omitempty"`
	Bitrate        uint32            `protobuf:"varint,3,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Container      string            `protobuf:"bytes,4,opt,name=Container,proto3" json:"Container,omitempty"`
	Duration       uint32            `protobuf:"varint,5,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Height         uint32            `protobuf:"varint,6,opt,name=Height,proto3" json:"Height,omitempty"`
	Rotate         uint32            `protobuf:"varint,7,opt,name=Rotate,proto3" json:"Rotate,omitempty"`
	Size           uint32            `protobuf:"varint,8,opt,name=Size,proto3" json:"Size,omitempty"`
	VideoDuration  uint32            `protobuf:"varint,9,opt,name=VideoDuration,proto3" json:"VideoDuration,omitempty"`
	VideoStreamSet []*Videostreamset `protobuf:"bytes,10,rep,name=VideoStreamSet,proto3" json:"VideoStreamSet,omitempty"`
	Width          uint32            `protobuf:"varint,11,opt,name=Width,proto3" json:"Width,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{65}
}

func (x *Metadata) GetAudioDuration() float64 {
	if x != nil {
		return x.AudioDuration
	}
	return 0
}

func (x *Metadata) GetAudioStreamSet() []*Audiostreamset {
	if x != nil {
		return x.AudioStreamSet
	}
	return nil
}

func (x *Metadata) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Metadata) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *Metadata) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Metadata) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Metadata) GetRotate() uint32 {
	if x != nil {
		return x.Rotate
	}
	return 0
}

func (x *Metadata) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Metadata) GetVideoDuration() uint32 {
	if x != nil {
		return x.VideoDuration
	}
	return 0
}

func (x *Metadata) GetVideoStreamSet() []*Videostreamset {
	if x != nil {
		return x.VideoStreamSet
	}
	return nil
}

func (x *Metadata) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type ProcedureStateChangeCallBackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *ProcedureStateChangeCallBackResponse) Reset() {
	*x = ProcedureStateChangeCallBackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcedureStateChangeCallBackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureStateChangeCallBackResponse) ProtoMessage() {}

func (x *ProcedureStateChangeCallBackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureStateChangeCallBackResponse.ProtoReflect.Descriptor instead.
func (*ProcedureStateChangeCallBackResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{66}
}

func (x *ProcedureStateChangeCallBackResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeletePartsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Definition uint32 `protobuf:"varint,2,opt,name=Definition,proto3" json:"Definition,omitempty"`
}

func (x *DeletePartsMessage) Reset() {
	*x = DeletePartsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePartsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePartsMessage) ProtoMessage() {}

func (x *DeletePartsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePartsMessage.ProtoReflect.Descriptor instead.
func (*DeletePartsMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{67}
}

func (x *DeletePartsMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeletePartsMessage) GetDefinition() uint32 {
	if x != nil {
		return x.Definition
	}
	return 0
}

type FileDeleteResultInfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId      string                `protobuf:"bytes,1,opt,name=FileId,proto3" json:"FileId,omitempty"`
	DeleteParts []*DeletePartsMessage `protobuf:"bytes,2,rep,name=DeleteParts,proto3" json:"DeleteParts,omitempty"`
}

func (x *FileDeleteResultInfoMessage) Reset() {
	*x = FileDeleteResultInfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDeleteResultInfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDeleteResultInfoMessage) ProtoMessage() {}

func (x *FileDeleteResultInfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDeleteResultInfoMessage.ProtoReflect.Descriptor instead.
func (*FileDeleteResultInfoMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{68}
}

func (x *FileDeleteResultInfoMessage) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileDeleteResultInfoMessage) GetDeleteParts() []*DeletePartsMessage {
	if x != nil {
		return x.DeleteParts
	}
	return nil
}

type FileDeleteEventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIdSet            []string                       `protobuf:"bytes,1,rep,name=FileIdSet,proto3" json:"FileIdSet,omitempty"`
	FileDeleteResultInfo []*FileDeleteResultInfoMessage `protobuf:"bytes,2,rep,name=FileDeleteResultInfo,proto3" json:"FileDeleteResultInfo,omitempty"`
}

func (x *FileDeleteEventMessage) Reset() {
	*x = FileDeleteEventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDeleteEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDeleteEventMessage) ProtoMessage() {}

func (x *FileDeleteEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDeleteEventMessage.ProtoReflect.Descriptor instead.
func (*FileDeleteEventMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{69}
}

func (x *FileDeleteEventMessage) GetFileIdSet() []string {
	if x != nil {
		return x.FileIdSet
	}
	return nil
}

func (x *FileDeleteEventMessage) GetFileDeleteResultInfo() []*FileDeleteResultInfoMessage {
	if x != nil {
		return x.FileDeleteResultInfo
	}
	return nil
}

type FileUploadCallBackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string                  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	EventType       string                  `protobuf:"bytes,2,opt,name=EventType,proto3" json:"EventType,omitempty"`
	FileUploadEvent *FileUploadEventMessage `protobuf:"bytes,3,opt,name=FileUploadEvent,proto3" json:"FileUploadEvent,omitempty"`
}

func (x *FileUploadCallBackRequest) Reset() {
	*x = FileUploadCallBackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadCallBackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadCallBackRequest) ProtoMessage() {}

func (x *FileUploadCallBackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadCallBackRequest.ProtoReflect.Descriptor instead.
func (*FileUploadCallBackRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{70}
}

func (x *FileUploadCallBackRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *FileUploadCallBackRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *FileUploadCallBackRequest) GetFileUploadEvent() *FileUploadEventMessage {
	if x != nil {
		return x.FileUploadEvent
	}
	return nil
}

type FileUploadCallBackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *FileUploadCallBackResponse) Reset() {
	*x = FileUploadCallBackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadCallBackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadCallBackResponse) ProtoMessage() {}

func (x *FileUploadCallBackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadCallBackResponse.ProtoReflect.Descriptor instead.
func (*FileUploadCallBackResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{71}
}

func (x *FileUploadCallBackResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SourceInfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceType    string `protobuf:"bytes,1,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	SourceContext string `protobuf:"bytes,2,opt,name=SourceContext,proto3" json:"SourceContext,omitempty"`
}

func (x *SourceInfoMessage) Reset() {
	*x = SourceInfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceInfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceInfoMessage) ProtoMessage() {}

func (x *SourceInfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceInfoMessage.ProtoReflect.Descriptor instead.
func (*SourceInfoMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{72}
}

func (x *SourceInfoMessage) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *SourceInfoMessage) GetSourceContext() string {
	if x != nil {
		return x.SourceContext
	}
	return ""
}

type BlockShortVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	FileId      string `protobuf:"bytes,3,opt,name=FileId,proto3" json:"FileId,omitempty"`
}

func (x *BlockShortVideoRequest) Reset() {
	*x = BlockShortVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockShortVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockShortVideoRequest) ProtoMessage() {}

func (x *BlockShortVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockShortVideoRequest.ProtoReflect.Descriptor instead.
func (*BlockShortVideoRequest) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{73}
}

func (x *BlockShortVideoRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *BlockShortVideoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BlockShortVideoRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type BlockShortVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *BlockShortVideoResponse) Reset() {
	*x = BlockShortVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockShortVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockShortVideoResponse) ProtoMessage() {}

func (x *BlockShortVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockShortVideoResponse.ProtoReflect.Descriptor instead.
func (*BlockShortVideoResponse) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{74}
}

func (x *BlockShortVideoResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type MediaBasicInfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string             `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Description   string             `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	CreateTime    string             `protobuf:"bytes,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime    string             `protobuf:"bytes,4,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	ExpireTime    string             `protobuf:"bytes,5,opt,name=ExpireTime,proto3" json:"ExpireTime,omitempty"`
	ClassId       uint32             `protobuf:"varint,6,opt,name=ClassId,proto3" json:"ClassId,omitempty"`
	ClassName     string             `protobuf:"bytes,7,opt,name=ClassName,proto3" json:"ClassName,omitempty"`
	ClassPath     string             `protobuf:"bytes,8,opt,name=ClassPath,proto3" json:"ClassPath,omitempty"`
	CoverUrl      string             `protobuf:"bytes,9,opt,name=CoverUrl,proto3" json:"CoverUrl,omitempty"`
	Type          string             `protobuf:"bytes,10,opt,name=Type,proto3" json:"Type,omitempty"`
	MediaUrl      string             `protobuf:"bytes,11,opt,name=MediaUrl,proto3" json:"MediaUrl,omitempty"`
	TagSet        []*anypb.Any       `protobuf:"bytes,12,rep,name=TagSet,proto3" json:"TagSet,omitempty"`
	StorageRegion string             `protobuf:"bytes,13,opt,name=StorageRegion,proto3" json:"StorageRegion,omitempty"`
	SourceInfo    *SourceInfoMessage `protobuf:"bytes,14,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
	Vid           string             `protobuf:"bytes,15,opt,name=Vid,proto3" json:"Vid,omitempty"`
}

func (x *MediaBasicInfoMessage) Reset() {
	*x = MediaBasicInfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaBasicInfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaBasicInfoMessage) ProtoMessage() {}

func (x *MediaBasicInfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaBasicInfoMessage.ProtoReflect.Descriptor instead.
func (*MediaBasicInfoMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{75}
}

func (x *MediaBasicInfoMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetClassId() uint32 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *MediaBasicInfoMessage) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetClassPath() string {
	if x != nil {
		return x.ClassPath
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetTagSet() []*anypb.Any {
	if x != nil {
		return x.TagSet
	}
	return nil
}

func (x *MediaBasicInfoMessage) GetStorageRegion() string {
	if x != nil {
		return x.StorageRegion
	}
	return ""
}

func (x *MediaBasicInfoMessage) GetSourceInfo() *SourceInfoMessage {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

func (x *MediaBasicInfoMessage) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

type AudioStreamSetMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitrate      uint32 `protobuf:"varint,1,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Codec        string `protobuf:"bytes,2,opt,name=Codec,proto3" json:"Codec,omitempty"`
	SamplingRate uint32 `protobuf:"varint,3,opt,name=SamplingRate,proto3" json:"SamplingRate,omitempty"`
}

func (x *AudioStreamSetMessage) Reset() {
	*x = AudioStreamSetMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioStreamSetMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioStreamSetMessage) ProtoMessage() {}

func (x *AudioStreamSetMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioStreamSetMessage.ProtoReflect.Descriptor instead.
func (*AudioStreamSetMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{76}
}

func (x *AudioStreamSetMessage) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *AudioStreamSetMessage) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *AudioStreamSetMessage) GetSamplingRate() uint32 {
	if x != nil {
		return x.SamplingRate
	}
	return 0
}

type VideoStreamSetMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitrate  uint32 `protobuf:"varint,1,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Codec    string `protobuf:"bytes,2,opt,name=Codec,proto3" json:"Codec,omitempty"`
	CodecTag string `protobuf:"bytes,3,opt,name=CodecTag,proto3" json:"CodecTag,omitempty"`
	Fps      uint32 `protobuf:"varint,4,opt,name=Fps,proto3" json:"Fps,omitempty"`
	Height   uint32 `protobuf:"varint,5,opt,name=Height,proto3" json:"Height,omitempty"`
	Width    uint32 `protobuf:"varint,6,opt,name=Width,proto3" json:"Width,omitempty"`
}

func (x *VideoStreamSetMessage) Reset() {
	*x = VideoStreamSetMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoStreamSetMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoStreamSetMessage) ProtoMessage() {}

func (x *VideoStreamSetMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoStreamSetMessage.ProtoReflect.Descriptor instead.
func (*VideoStreamSetMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{77}
}

func (x *VideoStreamSetMessage) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *VideoStreamSetMessage) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *VideoStreamSetMessage) GetCodecTag() string {
	if x != nil {
		return x.CodecTag
	}
	return ""
}

func (x *VideoStreamSetMessage) GetFps() uint32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *VideoStreamSetMessage) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VideoStreamSetMessage) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type MetaDataMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioDuration  float64                  `protobuf:"fixed64,1,opt,name=AudioDuration,proto3" json:"AudioDuration,omitempty"`
	AudioStreamSet []*AudioStreamSetMessage `protobuf:"bytes,2,rep,name=AudioStreamSet,proto3" json:"AudioStreamSet,omitempty"`
	Bitrate        uint32                   `protobuf:"varint,3,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Container      string                   `protobuf:"bytes,4,opt,name=Container,proto3" json:"Container,omitempty"`
	Duration       float64                  `protobuf:"fixed64,5,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Height         uint32                   `protobuf:"varint,6,opt,name=Height,proto3" json:"Height,omitempty"`
	Rotate         uint32                   `protobuf:"varint,7,opt,name=Rotate,proto3" json:"Rotate,omitempty"`
	Size           uint32                   `protobuf:"varint,8,opt,name=Size,proto3" json:"Size,omitempty"`
	VideoDuration  float64                  `protobuf:"fixed64,9,opt,name=VideoDuration,proto3" json:"VideoDuration,omitempty"`
	VideoStreamSet []*VideoStreamSetMessage `protobuf:"bytes,10,rep,name=VideoStreamSet,proto3" json:"VideoStreamSet,omitempty"`
	Width          uint32                   `protobuf:"varint,11,opt,name=Width,proto3" json:"Width,omitempty"`
}

func (x *MetaDataMessage) Reset() {
	*x = MetaDataMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaDataMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataMessage) ProtoMessage() {}

func (x *MetaDataMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataMessage.ProtoReflect.Descriptor instead.
func (*MetaDataMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{78}
}

func (x *MetaDataMessage) GetAudioDuration() float64 {
	if x != nil {
		return x.AudioDuration
	}
	return 0
}

func (x *MetaDataMessage) GetAudioStreamSet() []*AudioStreamSetMessage {
	if x != nil {
		return x.AudioStreamSet
	}
	return nil
}

func (x *MetaDataMessage) GetBitrate() uint32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *MetaDataMessage) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *MetaDataMessage) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MetaDataMessage) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MetaDataMessage) GetRotate() uint32 {
	if x != nil {
		return x.Rotate
	}
	return 0
}

func (x *MetaDataMessage) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MetaDataMessage) GetVideoDuration() float64 {
	if x != nil {
		return x.VideoDuration
	}
	return 0
}

func (x *MetaDataMessage) GetVideoStreamSet() []*VideoStreamSetMessage {
	if x != nil {
		return x.VideoStreamSet
	}
	return nil
}

func (x *MetaDataMessage) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type FileUploadEventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId                 string                 `protobuf:"bytes,1,opt,name=FileId,proto3" json:"FileId,omitempty"`
	MediaBasicInfo         *MediaBasicInfoMessage `protobuf:"bytes,2,opt,name=MediaBasicInfo,proto3" json:"MediaBasicInfo,omitempty"`
	MetaData               *MetaDataMessage       `protobuf:"bytes,3,opt,name=MetaData,proto3" json:"MetaData,omitempty"`
	ProcedureTaskId        string                 `protobuf:"bytes,4,opt,name=ProcedureTaskId,proto3" json:"ProcedureTaskId,omitempty"`
	ReviewAudioVideoTaskId string                 `protobuf:"bytes,5,opt,name=ReviewAudioVideoTaskId,proto3" json:"ReviewAudioVideoTaskId,omitempty"`
}

func (x *FileUploadEventMessage) Reset() {
	*x = FileUploadEventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_short_video_short_video_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadEventMessage) ProtoMessage() {}

func (x *FileUploadEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_short_video_short_video_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadEventMessage.ProtoReflect.Descriptor instead.
func (*FileUploadEventMessage) Descriptor() ([]byte, []int) {
	return file_short_video_short_video_proto_rawDescGZIP(), []int{79}
}

func (x *FileUploadEventMessage) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileUploadEventMessage) GetMediaBasicInfo() *MediaBasicInfoMessage {
	if x != nil {
		return x.MediaBasicInfo
	}
	return nil
}

func (x *FileUploadEventMessage) GetMetaData() *MetaDataMessage {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *FileUploadEventMessage) GetProcedureTaskId() string {
	if x != nil {
		return x.ProcedureTaskId
	}
	return ""
}

func (x *FileUploadEventMessage) GetReviewAudioVideoTaskId() string {
	if x != nil {
		return x.ReviewAudioVideoTaskId
	}
	return ""
}

var File_short_video_short_video_proto protoreflect.FileDescriptor

var file_short_video_short_video_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x53, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x12,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x7d, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x46,
	0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x61,
	0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x22, 0x48, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4c, 0x69, 0x6b,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2d, 0x0a,
	0x0f, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x8d, 0x05, 0x0a,
	0x15, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43,
	0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x66, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x53, 0x65, 0x6c, 0x66, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0b, 0x55, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x55, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xd4, 0x02, 0x0a,
	0x17, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x55, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x55, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x66,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x66, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xc3, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x14, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x14, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x87, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xeb, 0x02, 0x0a, 0x26, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4c, 0x69, 0x6b, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x46, 0x61, 0x6e, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x46, 0x61, 0x6e, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x32, 0x0a, 0x14, 0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x14, 0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x6b, 0x65,
	0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xd9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x86, 0x03, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40,
	0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x75, 0x6d, 0x22, 0xe2, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xfd, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x40, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xd7, 0x05, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x4a, 0x73,
	0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x4c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4e, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4e,
	0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x39, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a,
	0x0a, 0x49, 0x73, 0x55, 0x70, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x0a, 0x49, 0x73, 0x55, 0x70, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x8a, 0x01, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x9d, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa6, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xa9, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4b, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x85, 0x01,
	0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x49, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0xb6, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf1, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb4, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x61, 0x6e, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x66, 0x61, 0x6e, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x66, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6f,
	0x0a, 0x0f, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x67, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x7d, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x22, 0x51, 0x0a, 0x16, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc0, 0x01, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x26, 0x0a,
	0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x02,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xc4, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd2, 0x02, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0a, 0x49, 0x73, 0x55, 0x70, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x49, 0x73, 0x55, 0x70, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x71, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0xca, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4b, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9a, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb2, 0x02, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa2,
	0x01, 0x0a, 0x1c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4c,
	0x69, 0x6b, 0x65, 0x22, 0x58, 0x0a, 0x1d, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa2, 0x01,
	0x0a, 0x18, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x72, 0x0a, 0x19, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x53, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xdb, 0x02, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xb6, 0x02, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44,
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x30, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x30, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x1a, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x1b, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xd2, 0x01, 0x0a, 0x23, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6b, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x19, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x22, 0xae, 0x02, 0x0a, 0x20, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x58, 0x0a, 0x15, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x65, 0x74, 0x52, 0x15,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x53, 0x65, 0x74, 0x22, 0x6d, 0x0a, 0x15, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x22, 0xb2, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x06,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x27, 0x0a, 0x05, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xee, 0x02, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x64, 0x35,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x64, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x65, 0x74, 0x31, 0x52, 0x0e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x12, 0x44, 0x0a,
	0x0e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x65, 0x74, 0x31, 0x52, 0x0e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x70, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x46, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x65, 0x74, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x42, 0x69, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x46, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22, 0x65, 0x0a, 0x0f, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x65, 0x74, 0x31, 0x12, 0x18, 0x0a,
	0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x22, 0x0a,
	0x0c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74,
	0x65, 0x22, 0x64, 0x0a, 0x0e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f,
	0x64, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x22, 0x8e, 0x03, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0e, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x65, 0x74, 0x52,
	0x0e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a,
	0x0e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x65, 0x74, 0x52, 0x0e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22, 0x5f, 0x0a, 0x24, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x48, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x1b, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x22, 0x94, 0x01,
	0x0a, 0x16, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x53, 0x65, 0x74, 0x12, 0x5c, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x14,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x19, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x55, 0x0a, 0x1a, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x59, 0x0a, 0x11, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x6a, 0x0a, 0x16, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x52, 0x0a, 0x17, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0xf5, 0x03, 0x0a, 0x15, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x53, 0x65, 0x74, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x54, 0x61, 0x67,
	0x53, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x15, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43,
	0x6f, 0x64, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x15, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x64,
	0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x54, 0x61, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x54, 0x61, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x46, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x46, 0x70, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22, 0xa3,
	0x03, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x22, 0x98, 0x02, 0x0a, 0x16, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x0e, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x32,
	0xdb, 0x15, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x65,
	0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x6c, 0x6c,
	0x42, 0x61, 0x63, 0x6b, 0x12, 0x26, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x6c,
	0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x27, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43,
	0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x83, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x12, 0x30, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x24, 0x2e, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x67,
	0x6e, 0x12, 0x2b, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x29, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x24,
	0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x22, 0x2e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b,
	0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x29, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6e, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x29, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c,
	0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2b, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1a, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x46, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x6e,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x12, 0x23, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1b, 0x5a,
	0x19, 0x2e, 0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x3b, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_short_video_short_video_proto_rawDescOnce sync.Once
	file_short_video_short_video_proto_rawDescData = file_short_video_short_video_proto_rawDesc
)

func file_short_video_short_video_proto_rawDescGZIP() []byte {
	file_short_video_short_video_proto_rawDescOnce.Do(func() {
		file_short_video_short_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_short_video_short_video_proto_rawDescData)
	})
	return file_short_video_short_video_proto_rawDescData
}

var file_short_video_short_video_proto_msgTypes = make([]protoimpl.MessageInfo, 80)
var file_short_video_short_video_proto_goTypes = []interface{}{
	(*CommonResp)(nil),                             // 0: short_video.CommonResp
	(*RequestPagination)(nil),                      // 1: short_video.RequestPagination
	(*ResponsePagination)(nil),                     // 2: short_video.ResponsePagination
	(*UserInfoMessage)(nil),                        // 3: short_video.UserInfoMessage
	(*OperationMessage)(nil),                       // 4: short_video.OperationMessage
	(*IsFollowMessage)(nil),                        // 5: short_video.IsFollowMessage
	(*ShortVideoCommentInfo)(nil),                  // 6: short_video.ShortVideoCommentInfo
	(*ShortVideoNoticeMessage)(nil),                // 7: short_video.ShortVideoNoticeMessage
	(*CreateShortVideoRequest)(nil),                // 8: short_video.CreateShortVideoRequest
	(*CreateShortVideoResponse)(nil),               // 9: short_video.CreateShortVideoResponse
	(*SearchShortVideoRequest)(nil),                // 10: short_video.SearchShortVideoRequest
	(*SearchShortVideoResponse)(nil),               // 11: short_video.SearchShortVideoResponse
	(*GetShortVideoNoticesRequest)(nil),            // 12: short_video.GetShortVideoNoticesRequest
	(*GetShortVideoNoticesResponse)(nil),           // 13: short_video.GetShortVideoNoticesResponse
	(*GetShortVideoUserCountByUserIdRequest)(nil),  // 14: short_video.GetShortVideoUserCountByUserIdRequest
	(*GetShortVideoUserCountByUserIdResponse)(nil), // 15: short_video.GetShortVideoUserCountByUserIdResponse
	(*GetCommentPageRequest)(nil),                  // 16: short_video.GetCommentPageRequest
	(*GetCommentPageResponse)(nil),                 // 17: short_video.GetCommentPageResponse
	(*GetCommentPageReplyListRequest)(nil),         // 18: short_video.GetCommentPageReplyListRequest
	(*GetCommentPageReplyListResponse)(nil),        // 19: short_video.GetCommentPageReplyListResponse
	(*ShortVideoInfo)(nil),                         // 20: short_video.ShortVideoInfo
	(*GetShortVideoByFileIdRequest)(nil),           // 21: short_video.GetShortVideoByFileIdRequest
	(*GetShortVideoByFileIdResponse)(nil),          // 22: short_video.GetShortVideoByFileIdResponse
	(*GetShortVideoByFileIdListRequest)(nil),       // 23: short_video.GetShortVideoByFileIdListRequest
	(*GetShortVideoByFileIdListResponse)(nil),      // 24: short_video.GetShortVideoByFileIdListResponse
	(*FollowRequest)(nil),                          // 25: short_video.FollowRequest
	(*FollowResponse)(nil),                         // 26: short_video.FollowResponse
	(*GetFollowListRequest)(nil),                   // 27: short_video.GetFollowListRequest
	(*GetFollowListResponse)(nil),                  // 28: short_video.GetFollowListResponse
	(*GetFansListRequest)(nil),                     // 29: short_video.GetFansListRequest
	(*GetFansListResponse)(nil),                    // 30: short_video.GetFansListResponse
	(*IsFollowRequest)(nil),                        // 31: short_video.IsFollowRequest
	(*IsFollowResponse)(nil),                       // 32: short_video.IsFollowResponse
	(*ShortVideoLikeRequest)(nil),                  // 33: short_video.ShortVideoLikeRequest
	(*ShortVideoLikeResponse)(nil),                 // 34: short_video.ShortVideoLikeResponse
	(*GetLikeShortVideoListRequest)(nil),           // 35: short_video.GetLikeShortVideoListRequest
	(*GetLikeShortVideoListResponse)(nil),          // 36: short_video.GetLikeShortVideoListResponse
	(*GetShortVideoListByUserIdRequest)(nil),       // 37: short_video.GetShortVideoListByUserIdRequest
	(*GetShortVideoListByUserIdResponse)(nil),      // 38: short_video.GetShortVideoListByUserIdResponse
	(*GetRecommendShortVideoListRequest)(nil),      // 39: short_video.GetRecommendShortVideoListRequest
	(*GetRecommendShortVideoListResponse)(nil),     // 40: short_video.GetRecommendShortVideoListResponse
	(*GetFollowShortVideoListRequest)(nil),         // 41: short_video.GetFollowShortVideoListRequest
	(*GetFollowShortVideoListResponse)(nil),        // 42: short_video.GetFollowShortVideoListResponse
	(*ShortVideoCommentLikeRequest)(nil),           // 43: short_video.ShortVideoCommentLikeRequest
	(*ShortVideoCommentLikeResponse)(nil),          // 44: short_video.ShortVideoCommentLikeResponse
	(*ShortVideoCommentRequest)(nil),               // 45: short_video.ShortVideoCommentRequest
	(*ShortVideoCommentResponse)(nil),              // 46: short_video.ShortVideoCommentResponse
	(*DeleteShortVideoRequest)(nil),                // 47: short_video.DeleteShortVideoRequest
	(*DeleteShortVideoResponse)(nil),               // 48: short_video.DeleteShortVideoResponse
	(*GetShortVideoCommentListRequest)(nil),        // 49: short_video.GetShortVideoCommentListRequest
	(*GetShortVideoCommentListResponse)(nil),       // 50: short_video.GetShortVideoCommentListResponse
	(*GetUpdateShortVideoSignRequest)(nil),         // 51: short_video.GetUpdateShortVideoSignRequest
	(*GetUpdateShortVideoSignResponse)(nil),        // 52: short_video.GetUpdateShortVideoSignResponse
	(*FileDeletedCallBackRequest)(nil),             // 53: short_video.FileDeletedCallBackRequest
	(*FileDeletedCallBackResponse)(nil),            // 54: short_video.FileDeletedCallBackResponse
	(*ProcedureStateChangeCallBackRequest)(nil),    // 55: short_video.ProcedureStateChangeCallBackRequest
	(*ProcedureStateChangeEventMessage)(nil),       // 56: short_video.ProcedureStateChangeEventMessage
	(*Mediaprocessresultset)(nil),                  // 57: short_video.Mediaprocessresultset
	(*Transcodetask)(nil),                          // 58: short_video.Transcodetask
	(*Input)(nil),                                  // 59: short_video.Input
	(*Output)(nil),                                 // 60: short_video.Output
	(*Videostreamset)(nil),                         // 61: short_video.Videostreamset
	(*Videostreamset1)(nil),                        // 62: short_video.Videostreamset1
	(*Audiostreamset1)(nil),                        // 63: short_video.Audiostreamset1
	(*Audiostreamset)(nil),                         // 64: short_video.Audiostreamset
	(*Metadata)(nil),                               // 65: short_video.Metadata
	(*ProcedureStateChangeCallBackResponse)(nil),   // 66: short_video.ProcedureStateChangeCallBackResponse
	(*DeletePartsMessage)(nil),                     // 67: short_video.DeletePartsMessage
	(*FileDeleteResultInfoMessage)(nil),            // 68: short_video.FileDeleteResultInfoMessage
	(*FileDeleteEventMessage)(nil),                 // 69: short_video.FileDeleteEventMessage
	(*FileUploadCallBackRequest)(nil),              // 70: short_video.FileUploadCallBackRequest
	(*FileUploadCallBackResponse)(nil),             // 71: short_video.FileUploadCallBackResponse
	(*SourceInfoMessage)(nil),                      // 72: short_video.SourceInfoMessage
	(*BlockShortVideoRequest)(nil),                 // 73: short_video.BlockShortVideoRequest
	(*BlockShortVideoResponse)(nil),                // 74: short_video.BlockShortVideoResponse
	(*MediaBasicInfoMessage)(nil),                  // 75: short_video.MediaBasicInfoMessage
	(*AudioStreamSetMessage)(nil),                  // 76: short_video.AudioStreamSetMessage
	(*VideoStreamSetMessage)(nil),                  // 77: short_video.VideoStreamSetMessage
	(*MetaDataMessage)(nil),                        // 78: short_video.MetaDataMessage
	(*FileUploadEventMessage)(nil),                 // 79: short_video.FileUploadEventMessage
	(*anypb.Any)(nil),                              // 80: google.protobuf.Any
}
var file_short_video_short_video_proto_depIdxs = []int32{
	4,   // 0: short_video.ShortVideoCommentInfo.SelfOperation:type_name -> short_video.OperationMessage
	4,   // 1: short_video.ShortVideoCommentInfo.UpOperation:type_name -> short_video.OperationMessage
	3,   // 2: short_video.ShortVideoCommentInfo.CommentUserInfo:type_name -> short_video.UserInfoMessage
	3,   // 3: short_video.ShortVideoCommentInfo.ReplyToUserInfo:type_name -> short_video.UserInfoMessage
	6,   // 4: short_video.ShortVideoCommentInfo.ReplyComment:type_name -> short_video.ShortVideoCommentInfo
	3,   // 5: short_video.ShortVideoNoticeMessage.UpUserInfo:type_name -> short_video.UserInfoMessage
	4,   // 6: short_video.ShortVideoNoticeMessage.SelfInfo:type_name -> short_video.OperationMessage
	0,   // 7: short_video.CreateShortVideoResponse.commonResp:type_name -> short_video.CommonResp
	0,   // 8: short_video.SearchShortVideoResponse.commonResp:type_name -> short_video.CommonResp
	20,  // 9: short_video.SearchShortVideoResponse.shortVideoInfoList:type_name -> short_video.ShortVideoInfo
	1,   // 10: short_video.GetShortVideoNoticesRequest.pagination:type_name -> short_video.RequestPagination
	0,   // 11: short_video.GetShortVideoNoticesResponse.commonResp:type_name -> short_video.CommonResp
	2,   // 12: short_video.GetShortVideoNoticesResponse.pagination:type_name -> short_video.ResponsePagination
	7,   // 13: short_video.GetShortVideoNoticesResponse.shortVideoNoticeList:type_name -> short_video.ShortVideoNoticeMessage
	0,   // 14: short_video.GetShortVideoUserCountByUserIdResponse.commonResp:type_name -> short_video.CommonResp
	1,   // 15: short_video.GetCommentPageRequest.pagination:type_name -> short_video.RequestPagination
	0,   // 16: short_video.GetCommentPageResponse.commonResp:type_name -> short_video.CommonResp
	2,   // 17: short_video.GetCommentPageResponse.pagination:type_name -> short_video.ResponsePagination
	6,   // 18: short_video.GetCommentPageResponse.commentInfo:type_name -> short_video.ShortVideoCommentInfo
	6,   // 19: short_video.GetCommentPageResponse.replyList:type_name -> short_video.ShortVideoCommentInfo
	1,   // 20: short_video.GetCommentPageReplyListRequest.pagination:type_name -> short_video.RequestPagination
	0,   // 21: short_video.GetCommentPageReplyListResponse.commonResp:type_name -> short_video.CommonResp
	2,   // 22: short_video.GetCommentPageReplyListResponse.pagination:type_name -> short_video.ResponsePagination
	6,   // 23: short_video.GetCommentPageReplyListResponse.replyList:type_name -> short_video.ShortVideoCommentInfo
	3,   // 24: short_video.ShortVideoInfo.UpUserInfo:type_name -> short_video.UserInfoMessage
	4,   // 25: short_video.ShortVideoInfo.SelfInfo:type_name -> short_video.OperationMessage
	5,   // 26: short_video.ShortVideoInfo.IsUpFollow:type_name -> short_video.IsFollowMessage
	0,   // 27: short_video.GetShortVideoByFileIdResponse.commonResp:type_name -> short_video.CommonResp
	20,  // 28: short_video.GetShortVideoByFileIdResponse.shortVideoInfo:type_name -> short_video.ShortVideoInfo
	0,   // 29: short_video.GetShortVideoByFileIdListResponse.commonResp:type_name -> short_video.CommonResp
	20,  // 30: short_video.GetShortVideoByFileIdListResponse.shortVideoInfoList:type_name -> short_video.ShortVideoInfo
	0,   // 31: short_video.FollowResponse.commonResp:type_name -> short_video.CommonResp
	1,   // 32: short_video.GetFollowListRequest.pagination:type_name -> short_video.RequestPagination
	0,   // 33: short_video.GetFollowListResponse.commonResp:type_name -> short_video.CommonResp
	2,   // 34: short_video.GetFollowListResponse.pagination:type_name -> short_video.ResponsePagination
	3,   // 35: short_video.GetFollowListResponse.followList:type_name -> short_video.UserInfoMessage
	1,   // 36: short_video.GetFansListRequest.pagination:type_name -> short_video.RequestPagination
	0,   // 37: short_video.GetFansListResponse.commonResp:type_name -> short_video.CommonResp
	2,   // 38: short_video.GetFansListResponse.pagination:type_name -> short_video.ResponsePagination
	3,   // 39: short_video.GetFansListResponse.fansList:type_name -> short_video.UserInfoMessage
	0,   // 40: short_video.IsFollowResponse.commonResp:type_name -> short_video.CommonResp
	0,   // 41: short_video.ShortVideoLikeResponse.commonResp:type_name -> short_video.CommonResp
	1,   // 42: short_video.GetLikeShortVideoListRequest.pagination:type_name -> short_video.RequestPagination
	0,   // 43: short_video.GetLikeShortVideoListResponse.commonResp:type_name -> short_video.CommonResp
	2,   // 44: short_video.GetLikeShortVideoListResponse.pagination:type_name -> short_video.ResponsePagination
	20,  // 45: short_video.GetLikeShortVideoListResponse.shortVideoInfoList:type_name -> short_video.ShortVideoInfo
	1,   // 46: short_video.GetShortVideoListByUserIdRequest.pagination:type_name -> short_video.RequestPagination
	0,   // 47: short_video.GetShortVideoListByUserIdResponse.commonResp:type_name -> short_video.CommonResp
	2,   // 48: short_video.GetShortVideoListByUserIdResponse.pagination:type_name -> short_video.ResponsePagination
	5,   // 49: short_video.GetShortVideoListByUserIdResponse.IsUpFollow:type_name -> short_video.IsFollowMessage
	20,  // 50: short_video.GetShortVideoListByUserIdResponse.shortVideoInfoList:type_name -> short_video.ShortVideoInfo
	0,   // 51: short_video.GetRecommendShortVideoListResponse.commonResp:type_name -> short_video.CommonResp
	20,  // 52: short_video.GetRecommendShortVideoListResponse.shortVideoInfoList:type_name -> short_video.ShortVideoInfo
	1,   // 53: short_video.GetFollowShortVideoListRequest.pagination:type_name -> short_video.RequestPagination
	0,   // 54: short_video.GetFollowShortVideoListResponse.commonResp:type_name -> short_video.CommonResp
	2,   // 55: short_video.GetFollowShortVideoListResponse.pagination:type_name -> short_video.ResponsePagination
	20,  // 56: short_video.GetFollowShortVideoListResponse.shortVideoInfoList:type_name -> short_video.ShortVideoInfo
	0,   // 57: short_video.ShortVideoCommentLikeResponse.commonResp:type_name -> short_video.CommonResp
	0,   // 58: short_video.ShortVideoCommentResponse.commonResp:type_name -> short_video.CommonResp
	0,   // 59: short_video.DeleteShortVideoResponse.commonResp:type_name -> short_video.CommonResp
	1,   // 60: short_video.GetShortVideoCommentListRequest.pagination:type_name -> short_video.RequestPagination
	0,   // 61: short_video.GetShortVideoCommentListResponse.commonResp:type_name -> short_video.CommonResp
	2,   // 62: short_video.GetShortVideoCommentListResponse.pagination:type_name -> short_video.ResponsePagination
	6,   // 63: short_video.GetShortVideoCommentListResponse.commentList:type_name -> short_video.ShortVideoCommentInfo
	0,   // 64: short_video.GetUpdateShortVideoSignResponse.commonResp:type_name -> short_video.CommonResp
	69,  // 65: short_video.FileDeletedCallBackRequest.FileDeleteEvent:type_name -> short_video.FileDeleteEventMessage
	0,   // 66: short_video.FileDeletedCallBackResponse.commonResp:type_name -> short_video.CommonResp
	56,  // 67: short_video.ProcedureStateChangeCallBackRequest.ProcedureStateChangeEvent:type_name -> short_video.ProcedureStateChangeEventMessage
	57,  // 68: short_video.ProcedureStateChangeEventMessage.MediaProcessResultSet:type_name -> short_video.Mediaprocessresultset
	58,  // 69: short_video.Mediaprocessresultset.TranscodeTask:type_name -> short_video.Transcodetask
	59,  // 70: short_video.Transcodetask.Input:type_name -> short_video.Input
	60,  // 71: short_video.Transcodetask.Output:type_name -> short_video.Output
	62,  // 72: short_video.Output.VideoStreamSet:type_name -> short_video.Videostreamset1
	63,  // 73: short_video.Output.AudioStreamSet:type_name -> short_video.Audiostreamset1
	64,  // 74: short_video.Metadata.AudioStreamSet:type_name -> short_video.Audiostreamset
	61,  // 75: short_video.Metadata.VideoStreamSet:type_name -> short_video.Videostreamset
	0,   // 76: short_video.ProcedureStateChangeCallBackResponse.commonResp:type_name -> short_video.CommonResp
	67,  // 77: short_video.FileDeleteResultInfoMessage.DeleteParts:type_name -> short_video.DeletePartsMessage
	68,  // 78: short_video.FileDeleteEventMessage.FileDeleteResultInfo:type_name -> short_video.FileDeleteResultInfoMessage
	79,  // 79: short_video.FileUploadCallBackRequest.FileUploadEvent:type_name -> short_video.FileUploadEventMessage
	0,   // 80: short_video.FileUploadCallBackResponse.commonResp:type_name -> short_video.CommonResp
	0,   // 81: short_video.BlockShortVideoResponse.commonResp:type_name -> short_video.CommonResp
	80,  // 82: short_video.MediaBasicInfoMessage.TagSet:type_name -> google.protobuf.Any
	72,  // 83: short_video.MediaBasicInfoMessage.SourceInfo:type_name -> short_video.SourceInfoMessage
	76,  // 84: short_video.MetaDataMessage.AudioStreamSet:type_name -> short_video.AudioStreamSetMessage
	77,  // 85: short_video.MetaDataMessage.VideoStreamSet:type_name -> short_video.VideoStreamSetMessage
	75,  // 86: short_video.FileUploadEventMessage.MediaBasicInfo:type_name -> short_video.MediaBasicInfoMessage
	78,  // 87: short_video.FileUploadEventMessage.MetaData:type_name -> short_video.MetaDataMessage
	70,  // 88: short_video.shortVideo.FileUploadCallBack:input_type -> short_video.FileUploadCallBackRequest
	53,  // 89: short_video.shortVideo.FileDeletedCallBack:input_type -> short_video.FileDeletedCallBackRequest
	55,  // 90: short_video.shortVideo.ProcedureStateChangeCallBack:input_type -> short_video.ProcedureStateChangeCallBackRequest
	8,   // 91: short_video.shortVideo.CreateShortVideo:input_type -> short_video.CreateShortVideoRequest
	51,  // 92: short_video.shortVideo.GetUpdateShortVideoSign:input_type -> short_video.GetUpdateShortVideoSignRequest
	21,  // 93: short_video.shortVideo.GetShortVideoByFieldId:input_type -> short_video.GetShortVideoByFileIdRequest
	23,  // 94: short_video.shortVideo.GetShortVideoByFieldIdList:input_type -> short_video.GetShortVideoByFileIdListRequest
	10,  // 95: short_video.shortVideo.SearchShortVideo:input_type -> short_video.SearchShortVideoRequest
	33,  // 96: short_video.shortVideo.ShortVideoLike:input_type -> short_video.ShortVideoLikeRequest
	35,  // 97: short_video.shortVideo.GetLikeShortVideoList:input_type -> short_video.GetLikeShortVideoListRequest
	45,  // 98: short_video.shortVideo.ShortVideoComment:input_type -> short_video.ShortVideoCommentRequest
	47,  // 99: short_video.shortVideo.DeleteShortVideoComment:input_type -> short_video.DeleteShortVideoRequest
	43,  // 100: short_video.shortVideo.ShortVideoCommentLike:input_type -> short_video.ShortVideoCommentLikeRequest
	49,  // 101: short_video.shortVideo.GetShortVideoCommentList:input_type -> short_video.GetShortVideoCommentListRequest
	16,  // 102: short_video.shortVideo.GetCommentPage:input_type -> short_video.GetCommentPageRequest
	18,  // 103: short_video.shortVideo.GetCommentPageReplyList:input_type -> short_video.GetCommentPageReplyListRequest
	39,  // 104: short_video.shortVideo.GetRecommendShortVideoList:input_type -> short_video.GetRecommendShortVideoListRequest
	41,  // 105: short_video.shortVideo.GetFollowShortVideoList:input_type -> short_video.GetFollowShortVideoListRequest
	25,  // 106: short_video.shortVideo.Follow:input_type -> short_video.FollowRequest
	27,  // 107: short_video.shortVideo.GetFollowList:input_type -> short_video.GetFollowListRequest
	29,  // 108: short_video.shortVideo.GetFansList:input_type -> short_video.GetFansListRequest
	31,  // 109: short_video.shortVideo.IsFollow:input_type -> short_video.IsFollowRequest
	37,  // 110: short_video.shortVideo.GetShortVideoListByUserId:input_type -> short_video.GetShortVideoListByUserIdRequest
	14,  // 111: short_video.shortVideo.GetShortVideoUserCountByUserId:input_type -> short_video.GetShortVideoUserCountByUserIdRequest
	12,  // 112: short_video.shortVideo.GetShortVideoNoticeList:input_type -> short_video.GetShortVideoNoticesRequest
	73,  // 113: short_video.shortVideo.BlockShortVideo:input_type -> short_video.BlockShortVideoRequest
	71,  // 114: short_video.shortVideo.FileUploadCallBack:output_type -> short_video.FileUploadCallBackResponse
	54,  // 115: short_video.shortVideo.FileDeletedCallBack:output_type -> short_video.FileDeletedCallBackResponse
	66,  // 116: short_video.shortVideo.ProcedureStateChangeCallBack:output_type -> short_video.ProcedureStateChangeCallBackResponse
	9,   // 117: short_video.shortVideo.CreateShortVideo:output_type -> short_video.CreateShortVideoResponse
	52,  // 118: short_video.shortVideo.GetUpdateShortVideoSign:output_type -> short_video.GetUpdateShortVideoSignResponse
	22,  // 119: short_video.shortVideo.GetShortVideoByFieldId:output_type -> short_video.GetShortVideoByFileIdResponse
	24,  // 120: short_video.shortVideo.GetShortVideoByFieldIdList:output_type -> short_video.GetShortVideoByFileIdListResponse
	11,  // 121: short_video.shortVideo.SearchShortVideo:output_type -> short_video.SearchShortVideoResponse
	34,  // 122: short_video.shortVideo.ShortVideoLike:output_type -> short_video.ShortVideoLikeResponse
	36,  // 123: short_video.shortVideo.GetLikeShortVideoList:output_type -> short_video.GetLikeShortVideoListResponse
	46,  // 124: short_video.shortVideo.ShortVideoComment:output_type -> short_video.ShortVideoCommentResponse
	48,  // 125: short_video.shortVideo.DeleteShortVideoComment:output_type -> short_video.DeleteShortVideoResponse
	44,  // 126: short_video.shortVideo.ShortVideoCommentLike:output_type -> short_video.ShortVideoCommentLikeResponse
	50,  // 127: short_video.shortVideo.GetShortVideoCommentList:output_type -> short_video.GetShortVideoCommentListResponse
	17,  // 128: short_video.shortVideo.GetCommentPage:output_type -> short_video.GetCommentPageResponse
	19,  // 129: short_video.shortVideo.GetCommentPageReplyList:output_type -> short_video.GetCommentPageReplyListResponse
	40,  // 130: short_video.shortVideo.GetRecommendShortVideoList:output_type -> short_video.GetRecommendShortVideoListResponse
	42,  // 131: short_video.shortVideo.GetFollowShortVideoList:output_type -> short_video.GetFollowShortVideoListResponse
	26,  // 132: short_video.shortVideo.Follow:output_type -> short_video.FollowResponse
	28,  // 133: short_video.shortVideo.GetFollowList:output_type -> short_video.GetFollowListResponse
	30,  // 134: short_video.shortVideo.GetFansList:output_type -> short_video.GetFansListResponse
	32,  // 135: short_video.shortVideo.IsFollow:output_type -> short_video.IsFollowResponse
	38,  // 136: short_video.shortVideo.GetShortVideoListByUserId:output_type -> short_video.GetShortVideoListByUserIdResponse
	15,  // 137: short_video.shortVideo.GetShortVideoUserCountByUserId:output_type -> short_video.GetShortVideoUserCountByUserIdResponse
	13,  // 138: short_video.shortVideo.GetShortVideoNoticeList:output_type -> short_video.GetShortVideoNoticesResponse
	74,  // 139: short_video.shortVideo.BlockShortVideo:output_type -> short_video.BlockShortVideoResponse
	114, // [114:140] is the sub-list for method output_type
	88,  // [88:114] is the sub-list for method input_type
	88,  // [88:88] is the sub-list for extension type_name
	88,  // [88:88] is the sub-list for extension extendee
	0,   // [0:88] is the sub-list for field type_name
}

func init() { file_short_video_short_video_proto_init() }
func file_short_video_short_video_proto_init() {
	if File_short_video_short_video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_short_video_short_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFollowMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoCommentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoNoticeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShortVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShortVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchShortVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchShortVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoNoticesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoNoticesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoUserCountByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoUserCountByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentPageReplyListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentPageReplyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoByFileIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoByFileIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoByFileIdListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoByFileIdListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFansListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFansListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFollowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFollowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoLikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikeShortVideoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikeShortVideoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoListByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoListByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendShortVideoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendShortVideoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowShortVideoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowShortVideoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoCommentLikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoCommentLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShortVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShortVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoCommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortVideoCommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpdateShortVideoSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpdateShortVideoSignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDeletedCallBackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDeletedCallBackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcedureStateChangeCallBackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcedureStateChangeEventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mediaprocessresultset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transcodetask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Videostreamset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Videostreamset1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audiostreamset1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audiostreamset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcedureStateChangeCallBackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePartsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDeleteResultInfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDeleteEventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadCallBackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadCallBackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceInfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockShortVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockShortVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaBasicInfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioStreamSetMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoStreamSetMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaDataMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_short_video_short_video_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadEventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_short_video_short_video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   80,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_short_video_short_video_proto_goTypes,
		DependencyIndexes: file_short_video_short_video_proto_depIdxs,
		MessageInfos:      file_short_video_short_video_proto_msgTypes,
	}.Build()
	File_short_video_short_video_proto = out.File
	file_short_video_short_video_proto_rawDesc = nil
	file_short_video_short_video_proto_goTypes = nil
	file_short_video_short_video_proto_depIdxs = nil
}
