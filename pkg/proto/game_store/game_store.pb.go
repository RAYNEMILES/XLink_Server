// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: game_store/game_store.proto

package game_store

import (
	sdk_ws "Open_IM/pkg/proto/sdk_ws"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type CategoryMultiLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category map[string]string `protobuf:"bytes,1,rep,name=Category,proto3" json:"Category,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CategoryMultiLanguage) Reset() {
	*x = CategoryMultiLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryMultiLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryMultiLanguage) ProtoMessage() {}

func (x *CategoryMultiLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryMultiLanguage.ProtoReflect.Descriptor instead.
func (*CategoryMultiLanguage) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{1}
}

func (x *CategoryMultiLanguage) GetCategory() map[string]string {
	if x != nil {
		return x.Category
	}
	return nil
}

type BannerGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameCode string            `protobuf:"bytes,1,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
	GameName map[string]string `protobuf:"bytes,2,rep,name=GameName,proto3" json:"GameName,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CoverImg string            `protobuf:"bytes,3,opt,name=CoverImg,proto3" json:"CoverImg,omitempty"`
}

func (x *BannerGameInfo) Reset() {
	*x = BannerGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerGameInfo) ProtoMessage() {}

func (x *BannerGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerGameInfo.ProtoReflect.Descriptor instead.
func (*BannerGameInfo) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{2}
}

func (x *BannerGameInfo) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *BannerGameInfo) GetGameName() map[string]string {
	if x != nil {
		return x.GameName
	}
	return nil
}

func (x *BannerGameInfo) GetCoverImg() string {
	if x != nil {
		return x.CoverImg
	}
	return ""
}

type GameBackgroundInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameCode        string            `protobuf:"bytes,1,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
	GameName        map[string]string `protobuf:"bytes,2,rep,name=GameName,proto3" json:"GameName,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Description     map[string]string `protobuf:"bytes,3,rep,name=Description,proto3" json:"Description,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HorizontalCover []string          `protobuf:"bytes,4,rep,name=HorizontalCover,proto3" json:"HorizontalCover,omitempty"`
	CoverImg        string            `protobuf:"bytes,5,opt,name=CoverImg,proto3" json:"CoverImg,omitempty"`
	Categories      []string          `protobuf:"bytes,6,rep,name=Categories,proto3" json:"Categories,omitempty"`
	Classification  []string          `protobuf:"bytes,7,rep,name=Classification,proto3" json:"Classification,omitempty"`
	SupportPlatform string            `protobuf:"bytes,8,opt,name=SupportPlatform,proto3" json:"SupportPlatform,omitempty"`
	SortPriority    int32             `protobuf:"varint,9,opt,name=SortPriority,proto3" json:"SortPriority,omitempty"`
	Hot             int32             `protobuf:"varint,10,opt,name=Hot,proto3" json:"Hot,omitempty"`
	State           int32             `protobuf:"varint,11,opt,name=State,proto3" json:"State,omitempty"`
	Publisher       string            `protobuf:"bytes,12,opt,name=Publisher,proto3" json:"Publisher,omitempty"`
}

func (x *GameBackgroundInfo) Reset() {
	*x = GameBackgroundInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameBackgroundInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameBackgroundInfo) ProtoMessage() {}

func (x *GameBackgroundInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameBackgroundInfo.ProtoReflect.Descriptor instead.
func (*GameBackgroundInfo) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{3}
}

func (x *GameBackgroundInfo) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *GameBackgroundInfo) GetGameName() map[string]string {
	if x != nil {
		return x.GameName
	}
	return nil
}

func (x *GameBackgroundInfo) GetDescription() map[string]string {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *GameBackgroundInfo) GetHorizontalCover() []string {
	if x != nil {
		return x.HorizontalCover
	}
	return nil
}

func (x *GameBackgroundInfo) GetCoverImg() string {
	if x != nil {
		return x.CoverImg
	}
	return ""
}

func (x *GameBackgroundInfo) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *GameBackgroundInfo) GetClassification() []string {
	if x != nil {
		return x.Classification
	}
	return nil
}

func (x *GameBackgroundInfo) GetSupportPlatform() string {
	if x != nil {
		return x.SupportPlatform
	}
	return ""
}

func (x *GameBackgroundInfo) GetSortPriority() int32 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *GameBackgroundInfo) GetHot() int32 {
	if x != nil {
		return x.Hot
	}
	return 0
}

func (x *GameBackgroundInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GameBackgroundInfo) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

type GameBackgroundListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameCode        string                   `protobuf:"bytes,1,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
	GameName        map[string]string        `protobuf:"bytes,2,rep,name=GameName,proto3" json:"GameName,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Description     map[string]string        `protobuf:"bytes,3,rep,name=Description,proto3" json:"Description,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HorizontalCover []string                 `protobuf:"bytes,4,rep,name=HorizontalCover,proto3" json:"HorizontalCover,omitempty"`
	CoverImg        string                   `protobuf:"bytes,5,opt,name=CoverImg,proto3" json:"CoverImg,omitempty"`
	Categories      []*CategoryMultiLanguage `protobuf:"bytes,6,rep,name=Categories,proto3" json:"Categories,omitempty"`
	Classification  []string                 `protobuf:"bytes,7,rep,name=Classification,proto3" json:"Classification,omitempty"`
	SupportPlatform string                   `protobuf:"bytes,8,opt,name=SupportPlatform,proto3" json:"SupportPlatform,omitempty"`
	Publisher       string                   `protobuf:"bytes,9,opt,name=Publisher,proto3" json:"Publisher,omitempty"`
	SortPriority    int32                    `protobuf:"varint,10,opt,name=SortPriority,proto3" json:"SortPriority,omitempty"`
	Hot             int32                    `protobuf:"varint,11,opt,name=Hot,proto3" json:"Hot,omitempty"`
	State           int32                    `protobuf:"varint,12,opt,name=State,proto3" json:"State,omitempty"`
	CreateTime      int64                    `protobuf:"varint,13,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *GameBackgroundListInfo) Reset() {
	*x = GameBackgroundListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameBackgroundListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameBackgroundListInfo) ProtoMessage() {}

func (x *GameBackgroundListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameBackgroundListInfo.ProtoReflect.Descriptor instead.
func (*GameBackgroundListInfo) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{4}
}

func (x *GameBackgroundListInfo) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *GameBackgroundListInfo) GetGameName() map[string]string {
	if x != nil {
		return x.GameName
	}
	return nil
}

func (x *GameBackgroundListInfo) GetDescription() map[string]string {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *GameBackgroundListInfo) GetHorizontalCover() []string {
	if x != nil {
		return x.HorizontalCover
	}
	return nil
}

func (x *GameBackgroundListInfo) GetCoverImg() string {
	if x != nil {
		return x.CoverImg
	}
	return ""
}

func (x *GameBackgroundListInfo) GetCategories() []*CategoryMultiLanguage {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *GameBackgroundListInfo) GetClassification() []string {
	if x != nil {
		return x.Classification
	}
	return nil
}

func (x *GameBackgroundListInfo) GetSupportPlatform() string {
	if x != nil {
		return x.SupportPlatform
	}
	return ""
}

func (x *GameBackgroundListInfo) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *GameBackgroundListInfo) GetSortPriority() int32 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *GameBackgroundListInfo) GetHot() int32 {
	if x != nil {
		return x.Hot
	}
	return 0
}

func (x *GameBackgroundListInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GameBackgroundListInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GameListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameCode   string                   `protobuf:"bytes,1,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
	GameName   map[string]string        `protobuf:"bytes,2,rep,name=GameName,proto3" json:"GameName,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CoverImg   string                   `protobuf:"bytes,3,opt,name=CoverImg,proto3" json:"CoverImg,omitempty"`
	Categories []*CategoryMultiLanguage `protobuf:"bytes,4,rep,name=Categories,proto3" json:"Categories,omitempty"`
	Hot        int32                    `protobuf:"varint,7,opt,name=Hot,proto3" json:"Hot,omitempty"`
	DeleteTime int64                    `protobuf:"varint,8,opt,name=DeleteTime,proto3" json:"DeleteTime,omitempty"`
	CreateTime int64                    `protobuf:"varint,9,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *GameListInfo) Reset() {
	*x = GameListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameListInfo) ProtoMessage() {}

func (x *GameListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameListInfo.ProtoReflect.Descriptor instead.
func (*GameListInfo) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{5}
}

func (x *GameListInfo) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *GameListInfo) GetGameName() map[string]string {
	if x != nil {
		return x.GameName
	}
	return nil
}

func (x *GameListInfo) GetCoverImg() string {
	if x != nil {
		return x.CoverImg
	}
	return ""
}

func (x *GameListInfo) GetCategories() []*CategoryMultiLanguage {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *GameListInfo) GetHot() int32 {
	if x != nil {
		return x.Hot
	}
	return 0
}

func (x *GameListInfo) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *GameListInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GameNameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameCode string            `protobuf:"bytes,1,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
	CoverImg string            `protobuf:"bytes,2,opt,name=CoverImg,proto3" json:"CoverImg,omitempty"`
	GameName map[string]string `protobuf:"bytes,3,rep,name=GameName,proto3" json:"GameName,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GameNameInfo) Reset() {
	*x = GameNameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameNameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameNameInfo) ProtoMessage() {}

func (x *GameNameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameNameInfo.ProtoReflect.Descriptor instead.
func (*GameNameInfo) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{6}
}

func (x *GameNameInfo) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *GameNameInfo) GetCoverImg() string {
	if x != nil {
		return x.CoverImg
	}
	return ""
}

func (x *GameNameInfo) GetGameName() map[string]string {
	if x != nil {
		return x.GameName
	}
	return nil
}

type Categories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64             `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Detail map[string]string `protobuf:"bytes,2,rep,name=Detail,proto3" json:"Detail,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Categories) Reset() {
	*x = Categories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Categories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Categories) ProtoMessage() {}

func (x *Categories) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Categories.ProtoReflect.Descriptor instead.
func (*Categories) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{7}
}

func (x *Categories) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Categories) GetDetail() map[string]string {
	if x != nil {
		return x.Detail
	}
	return nil
}

type CategoryDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories   map[string]string `protobuf:"bytes,1,rep,name=Categories,proto3" json:"Categories,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CategoryID   int64             `protobuf:"varint,2,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	UsedAmount   int64             `protobuf:"varint,3,opt,name=UsedAmount,proto3" json:"UsedAmount,omitempty"`
	Creator      string            `protobuf:"bytes,4,opt,name=Creator,proto3" json:"Creator,omitempty"`
	CreateTime   int64             `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Editor       string            `protobuf:"bytes,6,opt,name=Editor,proto3" json:"Editor,omitempty"`
	EditTime     int64             `protobuf:"varint,7,opt,name=EditTime,proto3" json:"EditTime,omitempty"`
	SortPriority int32             `protobuf:"varint,8,opt,name=SortPriority,proto3" json:"SortPriority,omitempty"`
	State        int32             `protobuf:"varint,9,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *CategoryDetailInfo) Reset() {
	*x = CategoryDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryDetailInfo) ProtoMessage() {}

func (x *CategoryDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryDetailInfo.ProtoReflect.Descriptor instead.
func (*CategoryDetailInfo) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{8}
}

func (x *CategoryDetailInfo) GetCategories() map[string]string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *CategoryDetailInfo) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *CategoryDetailInfo) GetUsedAmount() int64 {
	if x != nil {
		return x.UsedAmount
	}
	return 0
}

func (x *CategoryDetailInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *CategoryDetailInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CategoryDetailInfo) GetEditor() string {
	if x != nil {
		return x.Editor
	}
	return ""
}

func (x *CategoryDetailInfo) GetEditTime() int64 {
	if x != nil {
		return x.EditTime
	}
	return 0
}

func (x *CategoryDetailInfo) GetSortPriority() int32 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *CategoryDetailInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type BannerGamesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *BannerGamesReq) Reset() {
	*x = BannerGamesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerGamesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerGamesReq) ProtoMessage() {}

func (x *BannerGamesReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerGamesReq.ProtoReflect.Descriptor instead.
func (*BannerGamesReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{9}
}

func (x *BannerGamesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type BannerGamesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *CommonResp       `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	BannerGameList []*BannerGameInfo `protobuf:"bytes,2,rep,name=BannerGameList,proto3" json:"BannerGameList,omitempty"`
}

func (x *BannerGamesResp) Reset() {
	*x = BannerGamesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerGamesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerGamesResp) ProtoMessage() {}

func (x *BannerGamesResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerGamesResp.ProtoReflect.Descriptor instead.
func (*BannerGamesResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{10}
}

func (x *BannerGamesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *BannerGamesResp) GetBannerGameList() []*BannerGameInfo {
	if x != nil {
		return x.BannerGameList
	}
	return nil
}

type TodayRecommendationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Categories  []int64                   `protobuf:"varint,2,rep,packed,name=Categories,proto3" json:"Categories,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *TodayRecommendationsReq) Reset() {
	*x = TodayRecommendationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TodayRecommendationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TodayRecommendationsReq) ProtoMessage() {}

func (x *TodayRecommendationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TodayRecommendationsReq.ProtoReflect.Descriptor instead.
func (*TodayRecommendationsReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{11}
}

func (x *TodayRecommendationsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *TodayRecommendationsReq) GetCategories() []int64 {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *TodayRecommendationsReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type TodayRecommendationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp             *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination             *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	RecommendationGameList []*GameListInfo            `protobuf:"bytes,3,rep,name=RecommendationGameList,proto3" json:"RecommendationGameList,omitempty"`
	GameNums               int32                      `protobuf:"varint,4,opt,name=GameNums,proto3" json:"GameNums,omitempty"`
}

func (x *TodayRecommendationsResp) Reset() {
	*x = TodayRecommendationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TodayRecommendationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TodayRecommendationsResp) ProtoMessage() {}

func (x *TodayRecommendationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TodayRecommendationsResp.ProtoReflect.Descriptor instead.
func (*TodayRecommendationsResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{12}
}

func (x *TodayRecommendationsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *TodayRecommendationsResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *TodayRecommendationsResp) GetRecommendationGameList() []*GameListInfo {
	if x != nil {
		return x.RecommendationGameList
	}
	return nil
}

func (x *TodayRecommendationsResp) GetGameNums() int32 {
	if x != nil {
		return x.GameNums
	}
	return 0
}

type PopularGamesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Categories  []int64                   `protobuf:"varint,2,rep,packed,name=Categories,proto3" json:"Categories,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *PopularGamesReq) Reset() {
	*x = PopularGamesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PopularGamesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopularGamesReq) ProtoMessage() {}

func (x *PopularGamesReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopularGamesReq.ProtoReflect.Descriptor instead.
func (*PopularGamesReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{13}
}

func (x *PopularGamesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *PopularGamesReq) GetCategories() []int64 {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *PopularGamesReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PopularGamesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp      *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination      *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	PopularGameList []*GameListInfo            `protobuf:"bytes,3,rep,name=PopularGameList,proto3" json:"PopularGameList,omitempty"`
	GameNums        int32                      `protobuf:"varint,4,opt,name=GameNums,proto3" json:"GameNums,omitempty"`
}

func (x *PopularGamesResp) Reset() {
	*x = PopularGamesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PopularGamesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopularGamesResp) ProtoMessage() {}

func (x *PopularGamesResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopularGamesResp.ProtoReflect.Descriptor instead.
func (*PopularGamesResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{14}
}

func (x *PopularGamesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *PopularGamesResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *PopularGamesResp) GetPopularGameList() []*GameListInfo {
	if x != nil {
		return x.PopularGameList
	}
	return nil
}

func (x *PopularGamesResp) GetGameNums() int32 {
	if x != nil {
		return x.GameNums
	}
	return 0
}

type AllGamesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Categories  []int64                   `protobuf:"varint,2,rep,packed,name=Categories,proto3" json:"Categories,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,3,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *AllGamesReq) Reset() {
	*x = AllGamesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllGamesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllGamesReq) ProtoMessage() {}

func (x *AllGamesReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllGamesReq.ProtoReflect.Descriptor instead.
func (*AllGamesReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{15}
}

func (x *AllGamesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AllGamesReq) GetCategories() []int64 {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *AllGamesReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AllGamesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp  *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination  *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	AllGameList []*GameListInfo            `protobuf:"bytes,3,rep,name=AllGameList,proto3" json:"AllGameList,omitempty"`
	GameNums    int32                      `protobuf:"varint,4,opt,name=GameNums,proto3" json:"GameNums,omitempty"`
}

func (x *AllGamesResp) Reset() {
	*x = AllGamesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllGamesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllGamesResp) ProtoMessage() {}

func (x *AllGamesResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllGamesResp.ProtoReflect.Descriptor instead.
func (*AllGamesResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{16}
}

func (x *AllGamesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *AllGamesResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *AllGamesResp) GetAllGameList() []*GameListInfo {
	if x != nil {
		return x.AllGameList
	}
	return nil
}

func (x *AllGamesResp) GetGameNums() int32 {
	if x != nil {
		return x.GameNums
	}
	return 0
}

type SearchNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	NameType    string `protobuf:"bytes,3,opt,name=NameType,proto3" json:"NameType,omitempty"`
	GetCount    int32  `protobuf:"varint,4,opt,name=GetCount,proto3" json:"GetCount,omitempty"`
}

func (x *SearchNameReq) Reset() {
	*x = SearchNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNameReq) ProtoMessage() {}

func (x *SearchNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNameReq.ProtoReflect.Descriptor instead.
func (*SearchNameReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{17}
}

func (x *SearchNameReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SearchNameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchNameReq) GetNameType() string {
	if x != nil {
		return x.NameType
	}
	return ""
}

func (x *SearchNameReq) GetGetCount() int32 {
	if x != nil {
		return x.GetCount
	}
	return 0
}

type SearchNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp     `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	GameList   []*GameNameInfo `protobuf:"bytes,2,rep,name=GameList,proto3" json:"GameList,omitempty"`
	GameNums   int32           `protobuf:"varint,4,opt,name=GameNums,proto3" json:"GameNums,omitempty"`
}

func (x *SearchNameResp) Reset() {
	*x = SearchNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNameResp) ProtoMessage() {}

func (x *SearchNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNameResp.ProtoReflect.Descriptor instead.
func (*SearchNameResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{18}
}

func (x *SearchNameResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *SearchNameResp) GetGameList() []*GameNameInfo {
	if x != nil {
		return x.GameList
	}
	return nil
}

func (x *SearchNameResp) GetGameNums() int32 {
	if x != nil {
		return x.GameNums
	}
	return 0
}

type SearchGameListByNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	Name        string                    `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	NameType    string                    `protobuf:"bytes,4,opt,name=NameType,proto3" json:"NameType,omitempty"`
	Categories  []int64                   `protobuf:"varint,5,rep,packed,name=Categories,proto3" json:"Categories,omitempty"`
}

func (x *SearchGameListByNameReq) Reset() {
	*x = SearchGameListByNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGameListByNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGameListByNameReq) ProtoMessage() {}

func (x *SearchGameListByNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGameListByNameReq.ProtoReflect.Descriptor instead.
func (*SearchGameListByNameReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{19}
}

func (x *SearchGameListByNameReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SearchGameListByNameReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchGameListByNameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchGameListByNameReq) GetNameType() string {
	if x != nil {
		return x.NameType
	}
	return ""
}

func (x *SearchGameListByNameReq) GetCategories() []int64 {
	if x != nil {
		return x.Categories
	}
	return nil
}

type SearchGameListByNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	GameList   []*GameListInfo            `protobuf:"bytes,3,rep,name=GameList,proto3" json:"GameList,omitempty"`
	GameNums   int32                      `protobuf:"varint,4,opt,name=GameNums,proto3" json:"GameNums,omitempty"`
}

func (x *SearchGameListByNameResp) Reset() {
	*x = SearchGameListByNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGameListByNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGameListByNameResp) ProtoMessage() {}

func (x *SearchGameListByNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGameListByNameResp.ProtoReflect.Descriptor instead.
func (*SearchGameListByNameResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{20}
}

func (x *SearchGameListByNameResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *SearchGameListByNameResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchGameListByNameResp) GetGameList() []*GameListInfo {
	if x != nil {
		return x.GameList
	}
	return nil
}

func (x *SearchGameListByNameResp) GetGameNums() int32 {
	if x != nil {
		return x.GameNums
	}
	return 0
}

type GetCategoriesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *GetCategoriesReq) Reset() {
	*x = GetCategoriesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoriesReq) ProtoMessage() {}

func (x *GetCategoriesReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoriesReq.ProtoReflect.Descriptor instead.
func (*GetCategoriesReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{21}
}

func (x *GetCategoriesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetCategoriesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp   `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Categories []*Categories `protobuf:"bytes,2,rep,name=Categories,proto3" json:"Categories,omitempty"`
}

func (x *GetCategoriesResp) Reset() {
	*x = GetCategoriesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoriesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoriesResp) ProtoMessage() {}

func (x *GetCategoriesResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoriesResp.ProtoReflect.Descriptor instead.
func (*GetCategoriesResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{22}
}

func (x *GetCategoriesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetCategoriesResp) GetCategories() []*Categories {
	if x != nil {
		return x.Categories
	}
	return nil
}

type PlayGameRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	GameCode    string `protobuf:"bytes,2,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
	UserID      string `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *PlayGameRecordReq) Reset() {
	*x = PlayGameRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayGameRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayGameRecordReq) ProtoMessage() {}

func (x *PlayGameRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayGameRecordReq.ProtoReflect.Descriptor instead.
func (*PlayGameRecordReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{23}
}

func (x *PlayGameRecordReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *PlayGameRecordReq) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *PlayGameRecordReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type PlayGameRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *PlayGameRecordResp) Reset() {
	*x = PlayGameRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayGameRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayGameRecordResp) ProtoMessage() {}

func (x *PlayGameRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayGameRecordResp.ProtoReflect.Descriptor instead.
func (*PlayGameRecordResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{24}
}

func (x *PlayGameRecordResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	UserID      string                    `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetHistoryReq) Reset() {
	*x = GetHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryReq) ProtoMessage() {}

func (x *GetHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryReq.ProtoReflect.Descriptor instead.
func (*GetHistoryReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{25}
}

func (x *GetHistoryReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetHistoryReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetHistoryReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	GameList   []*GameListInfo            `protobuf:"bytes,3,rep,name=GameList,proto3" json:"GameList,omitempty"`
	GameNums   int32                      `protobuf:"varint,4,opt,name=GameNums,proto3" json:"GameNums,omitempty"`
}

func (x *GetHistoryResp) Reset() {
	*x = GetHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryResp) ProtoMessage() {}

func (x *GetHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryResp.ProtoReflect.Descriptor instead.
func (*GetHistoryResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{26}
}

func (x *GetHistoryResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetHistoryResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetHistoryResp) GetGameList() []*GameListInfo {
	if x != nil {
		return x.GameList
	}
	return nil
}

func (x *GetHistoryResp) GetGameNums() int32 {
	if x != nil {
		return x.GameNums
	}
	return 0
}

type GetFavoritesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	UserID      string                    `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetFavoritesReq) Reset() {
	*x = GetFavoritesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavoritesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoritesReq) ProtoMessage() {}

func (x *GetFavoritesReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoritesReq.ProtoReflect.Descriptor instead.
func (*GetFavoritesReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{27}
}

func (x *GetFavoritesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetFavoritesReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetFavoritesReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetFavoritesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	GameList   []*GameListInfo            `protobuf:"bytes,3,rep,name=GameList,proto3" json:"GameList,omitempty"`
	GameNums   int32                      `protobuf:"varint,4,opt,name=GameNums,proto3" json:"GameNums,omitempty"`
}

func (x *GetFavoritesResp) Reset() {
	*x = GetFavoritesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavoritesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoritesResp) ProtoMessage() {}

func (x *GetFavoritesResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoritesResp.ProtoReflect.Descriptor instead.
func (*GetFavoritesResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{28}
}

func (x *GetFavoritesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetFavoritesResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetFavoritesResp) GetGameList() []*GameListInfo {
	if x != nil {
		return x.GameList
	}
	return nil
}

func (x *GetFavoritesResp) GetGameNums() int32 {
	if x != nil {
		return x.GameNums
	}
	return 0
}

type RemoveGameFavoriteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserID      string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	GameCode    string `protobuf:"bytes,3,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
}

func (x *RemoveGameFavoriteReq) Reset() {
	*x = RemoveGameFavoriteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGameFavoriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGameFavoriteReq) ProtoMessage() {}

func (x *RemoveGameFavoriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGameFavoriteReq.ProtoReflect.Descriptor instead.
func (*RemoveGameFavoriteReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{29}
}

func (x *RemoveGameFavoriteReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *RemoveGameFavoriteReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RemoveGameFavoriteReq) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

type RemoveGameFavoriteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *RemoveGameFavoriteResp) Reset() {
	*x = RemoveGameFavoriteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGameFavoriteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGameFavoriteResp) ProtoMessage() {}

func (x *RemoveGameFavoriteResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGameFavoriteResp.ProtoReflect.Descriptor instead.
func (*RemoveGameFavoriteResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{30}
}

func (x *RemoveGameFavoriteResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AddGameFavoriteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserID      string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	GameCode    string `protobuf:"bytes,3,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
}

func (x *AddGameFavoriteReq) Reset() {
	*x = AddGameFavoriteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGameFavoriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameFavoriteReq) ProtoMessage() {}

func (x *AddGameFavoriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameFavoriteReq.ProtoReflect.Descriptor instead.
func (*AddGameFavoriteReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{31}
}

func (x *AddGameFavoriteReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddGameFavoriteReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *AddGameFavoriteReq) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

type AddGameFavoriteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddGameFavoriteResp) Reset() {
	*x = AddGameFavoriteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGameFavoriteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameFavoriteResp) ProtoMessage() {}

func (x *AddGameFavoriteResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameFavoriteResp.ProtoReflect.Descriptor instead.
func (*AddGameFavoriteResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{32}
}

func (x *AddGameFavoriteResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GameDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	GameCode    string `protobuf:"bytes,2,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
	UserID      string `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GameDetailsReq) Reset() {
	*x = GameDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetailsReq) ProtoMessage() {}

func (x *GameDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetailsReq.ProtoReflect.Descriptor instead.
func (*GameDetailsReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{33}
}

func (x *GameDetailsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GameDetailsReq) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *GameDetailsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GameDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp      *CommonResp              `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	GameCode        string                   `protobuf:"bytes,2,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
	GameName        map[string]string        `protobuf:"bytes,3,rep,name=GameName,proto3" json:"GameName,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CoverImg        string                   `protobuf:"bytes,4,opt,name=CoverImg,proto3" json:"CoverImg,omitempty"`
	HorizontalCover []string                 `protobuf:"bytes,5,rep,name=HorizontalCover,proto3" json:"HorizontalCover,omitempty"`
	SupportPlatform string                   `protobuf:"bytes,6,opt,name=SupportPlatform,proto3" json:"SupportPlatform,omitempty"`
	Categories      []*CategoryMultiLanguage `protobuf:"bytes,7,rep,name=Categories,proto3" json:"Categories,omitempty"`
	Description     map[string]string        `protobuf:"bytes,8,rep,name=Description,proto3" json:"Description,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Hot             int32                    `protobuf:"varint,9,opt,name=Hot,proto3" json:"Hot,omitempty"`
	HasFavorite     bool                     `protobuf:"varint,10,opt,name=HasFavorite,proto3" json:"HasFavorite,omitempty"`
	Publisher       string                   `protobuf:"bytes,11,opt,name=Publisher,proto3" json:"Publisher,omitempty"`
}

func (x *GameDetailsResp) Reset() {
	*x = GameDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDetailsResp) ProtoMessage() {}

func (x *GameDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDetailsResp.ProtoReflect.Descriptor instead.
func (*GameDetailsResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{34}
}

func (x *GameDetailsResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GameDetailsResp) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *GameDetailsResp) GetGameName() map[string]string {
	if x != nil {
		return x.GameName
	}
	return nil
}

func (x *GameDetailsResp) GetCoverImg() string {
	if x != nil {
		return x.CoverImg
	}
	return ""
}

func (x *GameDetailsResp) GetHorizontalCover() []string {
	if x != nil {
		return x.HorizontalCover
	}
	return nil
}

func (x *GameDetailsResp) GetSupportPlatform() string {
	if x != nil {
		return x.SupportPlatform
	}
	return ""
}

func (x *GameDetailsResp) GetCategories() []*CategoryMultiLanguage {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *GameDetailsResp) GetDescription() map[string]string {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *GameDetailsResp) GetHot() int32 {
	if x != nil {
		return x.Hot
	}
	return 0
}

func (x *GameDetailsResp) GetHasFavorite() bool {
	if x != nil {
		return x.HasFavorite
	}
	return false
}

func (x *GameDetailsResp) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

type GetGameListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination     *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	GameCode       string                    `protobuf:"bytes,3,opt,name=GameCode,proto3" json:"GameCode,omitempty"`
	GameName       string                    `protobuf:"bytes,4,opt,name=GameName,proto3" json:"GameName,omitempty"`
	Categories     int64                     `protobuf:"varint,5,opt,name=Categories,proto3" json:"Categories,omitempty"`
	Classification int64                     `protobuf:"varint,6,opt,name=Classification,proto3" json:"Classification,omitempty"`
	Platform       int32                     `protobuf:"varint,7,opt,name=Platform,proto3" json:"Platform,omitempty"`
	Publisher      string                    `protobuf:"bytes,8,opt,name=Publisher,proto3" json:"Publisher,omitempty"`
	Hot            int32                     `protobuf:"varint,9,opt,name=Hot,proto3" json:"Hot,omitempty"`
	State          int32                     `protobuf:"varint,10,opt,name=State,proto3" json:"State,omitempty"`
	StartTime      string                    `protobuf:"bytes,11,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime        string                    `protobuf:"bytes,12,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	NameType       string                    `protobuf:"bytes,13,opt,name=NameType,proto3" json:"NameType,omitempty"`
}

func (x *GetGameListReq) Reset() {
	*x = GetGameListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameListReq) ProtoMessage() {}

func (x *GetGameListReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameListReq.ProtoReflect.Descriptor instead.
func (*GetGameListReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{35}
}

func (x *GetGameListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetGameListReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGameListReq) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *GetGameListReq) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *GetGameListReq) GetCategories() int64 {
	if x != nil {
		return x.Categories
	}
	return 0
}

func (x *GetGameListReq) GetClassification() int64 {
	if x != nil {
		return x.Classification
	}
	return 0
}

func (x *GetGameListReq) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *GetGameListReq) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *GetGameListReq) GetHot() int32 {
	if x != nil {
		return x.Hot
	}
	return 0
}

func (x *GetGameListReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GetGameListReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetGameListReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetGameListReq) GetNameType() string {
	if x != nil {
		return x.NameType
	}
	return ""
}

type GetGameListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	GameList   []*GameBackgroundListInfo  `protobuf:"bytes,3,rep,name=GameList,proto3" json:"GameList,omitempty"`
	GameNum    int64                      `protobuf:"varint,4,opt,name=GameNum,proto3" json:"GameNum,omitempty"`
}

func (x *GetGameListResp) Reset() {
	*x = GetGameListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameListResp) ProtoMessage() {}

func (x *GetGameListResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameListResp.ProtoReflect.Descriptor instead.
func (*GetGameListResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{36}
}

func (x *GetGameListResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetGameListResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGameListResp) GetGameList() []*GameBackgroundListInfo {
	if x != nil {
		return x.GameList
	}
	return nil
}

func (x *GetGameListResp) GetGameNum() int64 {
	if x != nil {
		return x.GameNum
	}
	return 0
}

type EditGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string              `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Game        *GameBackgroundInfo `protobuf:"bytes,2,opt,name=Game,proto3" json:"Game,omitempty"`
	OpUserID    string              `protobuf:"bytes,3,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
}

func (x *EditGameReq) Reset() {
	*x = EditGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditGameReq) ProtoMessage() {}

func (x *EditGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditGameReq.ProtoReflect.Descriptor instead.
func (*EditGameReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{37}
}

func (x *EditGameReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *EditGameReq) GetGame() *GameBackgroundInfo {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *EditGameReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type EditGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *EditGameResp) Reset() {
	*x = EditGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditGameResp) ProtoMessage() {}

func (x *EditGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditGameResp.ProtoReflect.Descriptor instead.
func (*EditGameResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{38}
}

func (x *EditGameResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AddGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string              `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Game        *GameBackgroundInfo `protobuf:"bytes,2,opt,name=Game,proto3" json:"Game,omitempty"`
	OpUserID    string              `protobuf:"bytes,3,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
}

func (x *AddGameReq) Reset() {
	*x = AddGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameReq) ProtoMessage() {}

func (x *AddGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameReq.ProtoReflect.Descriptor instead.
func (*AddGameReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{39}
}

func (x *AddGameReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddGameReq) GetGame() *GameBackgroundInfo {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *AddGameReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type AddGameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddGameResp) Reset() {
	*x = AddGameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameResp) ProtoMessage() {}

func (x *AddGameResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameResp.ProtoReflect.Descriptor instead.
func (*AddGameResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{40}
}

func (x *AddGameResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteGamesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	GamesCode   []string `protobuf:"bytes,2,rep,name=GamesCode,proto3" json:"GamesCode,omitempty"`
	OpUserID    string   `protobuf:"bytes,3,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
}

func (x *DeleteGamesReq) Reset() {
	*x = DeleteGamesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGamesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGamesReq) ProtoMessage() {}

func (x *DeleteGamesReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGamesReq.ProtoReflect.Descriptor instead.
func (*DeleteGamesReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteGamesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteGamesReq) GetGamesCode() []string {
	if x != nil {
		return x.GamesCode
	}
	return nil
}

func (x *DeleteGamesReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

type DeleteGamesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *DeleteGamesResp) Reset() {
	*x = DeleteGamesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGamesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGamesResp) ProtoMessage() {}

func (x *DeleteGamesResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGamesResp.ProtoReflect.Descriptor instead.
func (*DeleteGamesResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteGamesResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string                    `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination      *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	CategoryName    string                    `protobuf:"bytes,3,opt,name=CategoryName,proto3" json:"CategoryName,omitempty"`
	Creator         string                    `protobuf:"bytes,4,opt,name=Creator,proto3" json:"Creator,omitempty"`
	CreateStartTime string                    `protobuf:"bytes,5,opt,name=CreateStartTime,proto3" json:"CreateStartTime,omitempty"`
	CreateEndTime   string                    `protobuf:"bytes,6,opt,name=CreateEndTime,proto3" json:"CreateEndTime,omitempty"`
	EditedStartTime string                    `protobuf:"bytes,7,opt,name=EditedStartTime,proto3" json:"EditedStartTime,omitempty"`
	EditedEndTime   string                    `protobuf:"bytes,8,opt,name=EditedEndTime,proto3" json:"EditedEndTime,omitempty"`
	Editor          string                    `protobuf:"bytes,9,opt,name=Editor,proto3" json:"Editor,omitempty"`
	State           int32                     `protobuf:"varint,10,opt,name=State,proto3" json:"State,omitempty"`
	NameType        string                    `protobuf:"bytes,11,opt,name=NameType,proto3" json:"NameType,omitempty"`
}

func (x *GetCategoryReq) Reset() {
	*x = GetCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryReq) ProtoMessage() {}

func (x *GetCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryReq.ProtoReflect.Descriptor instead.
func (*GetCategoryReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{43}
}

func (x *GetCategoryReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetCategoryReq) GetPagination() *sdk_ws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetCategoryReq) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *GetCategoryReq) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *GetCategoryReq) GetCreateStartTime() string {
	if x != nil {
		return x.CreateStartTime
	}
	return ""
}

func (x *GetCategoryReq) GetCreateEndTime() string {
	if x != nil {
		return x.CreateEndTime
	}
	return ""
}

func (x *GetCategoryReq) GetEditedStartTime() string {
	if x != nil {
		return x.EditedStartTime
	}
	return ""
}

func (x *GetCategoryReq) GetEditedEndTime() string {
	if x != nil {
		return x.EditedEndTime
	}
	return ""
}

func (x *GetCategoryReq) GetEditor() string {
	if x != nil {
		return x.Editor
	}
	return ""
}

func (x *GetCategoryReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GetCategoryReq) GetNameType() string {
	if x != nil {
		return x.NameType
	}
	return ""
}

type GetCategoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp    *CommonResp                `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Pagination    *sdk_ws.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	CategoryList  []*CategoryDetailInfo      `protobuf:"bytes,3,rep,name=CategoryList,proto3" json:"CategoryList,omitempty"`
	CategoriesNum int64                      `protobuf:"varint,4,opt,name=CategoriesNum,proto3" json:"CategoriesNum,omitempty"`
}

func (x *GetCategoryResp) Reset() {
	*x = GetCategoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryResp) ProtoMessage() {}

func (x *GetCategoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryResp.ProtoReflect.Descriptor instead.
func (*GetCategoryResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{44}
}

func (x *GetCategoryResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetCategoryResp) GetPagination() *sdk_ws.ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetCategoryResp) GetCategoryList() []*CategoryDetailInfo {
	if x != nil {
		return x.CategoryList
	}
	return nil
}

func (x *GetCategoryResp) GetCategoriesNum() int64 {
	if x != nil {
		return x.CategoriesNum
	}
	return 0
}

type AddCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string            `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserID     string            `protobuf:"bytes,2,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
	CategoryName map[string]string `protobuf:"bytes,3,rep,name=CategoryName,proto3" json:"CategoryName,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SortPriority int32             `protobuf:"varint,4,opt,name=SortPriority,proto3" json:"SortPriority,omitempty"`
	State        int32             `protobuf:"varint,5,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *AddCategoryReq) Reset() {
	*x = AddCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCategoryReq) ProtoMessage() {}

func (x *AddCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCategoryReq.ProtoReflect.Descriptor instead.
func (*AddCategoryReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{45}
}

func (x *AddCategoryReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddCategoryReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *AddCategoryReq) GetCategoryName() map[string]string {
	if x != nil {
		return x.CategoryName
	}
	return nil
}

func (x *AddCategoryReq) GetSortPriority() int32 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *AddCategoryReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type AddCategoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddCategoryResp) Reset() {
	*x = AddCategoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCategoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCategoryResp) ProtoMessage() {}

func (x *AddCategoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCategoryResp.ProtoReflect.Descriptor instead.
func (*AddCategoryResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{46}
}

func (x *AddCategoryResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type EditCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string            `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserID     string            `protobuf:"bytes,2,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
	CategoryID   int64             `protobuf:"varint,3,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	CategoryName map[string]string `protobuf:"bytes,4,rep,name=CategoryName,proto3" json:"CategoryName,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SortPriority int32             `protobuf:"varint,5,opt,name=SortPriority,proto3" json:"SortPriority,omitempty"`
	State        int32             `protobuf:"varint,6,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *EditCategoryReq) Reset() {
	*x = EditCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCategoryReq) ProtoMessage() {}

func (x *EditCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCategoryReq.ProtoReflect.Descriptor instead.
func (*EditCategoryReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{47}
}

func (x *EditCategoryReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *EditCategoryReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *EditCategoryReq) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *EditCategoryReq) GetCategoryName() map[string]string {
	if x != nil {
		return x.CategoryName
	}
	return nil
}

func (x *EditCategoryReq) GetSortPriority() int32 {
	if x != nil {
		return x.SortPriority
	}
	return 0
}

func (x *EditCategoryReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type EditCategoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *EditCategoryResp) Reset() {
	*x = EditCategoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditCategoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCategoryResp) ProtoMessage() {}

func (x *EditCategoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCategoryResp.ProtoReflect.Descriptor instead.
func (*EditCategoryResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{48}
}

func (x *EditCategoryResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SetCategoryStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserID    string `protobuf:"bytes,2,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
	CategoryID  int64  `protobuf:"varint,3,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	State       int32  `protobuf:"varint,4,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *SetCategoryStatusReq) Reset() {
	*x = SetCategoryStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCategoryStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCategoryStatusReq) ProtoMessage() {}

func (x *SetCategoryStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCategoryStatusReq.ProtoReflect.Descriptor instead.
func (*SetCategoryStatusReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{49}
}

func (x *SetCategoryStatusReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SetCategoryStatusReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *SetCategoryStatusReq) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *SetCategoryStatusReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type SetCategoryStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SetCategoryStatusResp) Reset() {
	*x = SetCategoryStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCategoryStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCategoryStatusResp) ProtoMessage() {}

func (x *SetCategoryStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCategoryStatusResp.ProtoReflect.Descriptor instead.
func (*SetCategoryStatusResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{50}
}

func (x *SetCategoryStatusResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type DeleteCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OpUserID    string `protobuf:"bytes,2,opt,name=OpUserID,proto3" json:"OpUserID,omitempty"`
	CategoryID  int64  `protobuf:"varint,3,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
}

func (x *DeleteCategoryReq) Reset() {
	*x = DeleteCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryReq) ProtoMessage() {}

func (x *DeleteCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryReq.ProtoReflect.Descriptor instead.
func (*DeleteCategoryReq) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{51}
}

func (x *DeleteCategoryReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteCategoryReq) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *DeleteCategoryReq) GetCategoryID() int64 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

type DeleteCategoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *DeleteCategoryResp) Reset() {
	*x = DeleteCategoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_store_game_store_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCategoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryResp) ProtoMessage() {}

func (x *DeleteCategoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_game_store_game_store_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryResp.ProtoReflect.Descriptor instead.
func (*DeleteCategoryResp) Descriptor() ([]byte, []int) {
	return file_game_store_game_store_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteCategoryResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

var File_game_store_game_store_proto protoreflect.FileDescriptor

var file_game_store_game_store_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x64, 0x6b, 0x5f,
	0x77, 0x73, 0x2f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xa1, 0x01, 0x0a, 0x15,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x1a, 0x3b, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xcb, 0x01, 0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x44,
	0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67,
	0x1a, 0x3b, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xec, 0x04,
	0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x48, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x0f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x6d, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x6f, 0x72,
	0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x6f, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x48, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x1a,
	0x3b, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbb, 0x05, 0x0a,
	0x16, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x55, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x48, 0x6f, 0x72, 0x69,
	0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x12, 0x41,
	0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x6f, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x48, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x3b, 0x0a,
	0x0d, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdc, 0x02, 0x0a, 0x0c, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x47,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x12, 0x41, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x0a,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x6f,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x48, 0x6f, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x3b, 0x0a, 0x0d,
	0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc7, 0x01, 0x0a, 0x0c, 0x47, 0x61,
	0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6d, 0x67, 0x12, 0x42, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x47, 0x61,
	0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x93, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x39,
	0x0a, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x03, 0x0a, 0x12, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x4e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x45, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x8d, 0x01, 0x0a, 0x0f,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x17,
	0x54, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x87, 0x02, 0x0a, 0x18, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x16, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x50, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf1, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0f, 0x50, 0x6f, 0x70,
	0x75, 0x6c, 0x61, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x50, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x41, 0x6c,
	0x6c, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xe5, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3a, 0x0a, 0x0b, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x7d, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x18, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x47,
	0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47,
	0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x34, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x83, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4c,
	0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8f, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xe1,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75,
	0x6d, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x73, 0x22, 0x6d, 0x0a, 0x15,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x16, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6a, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x66, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0xfe, 0x04, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x48,
	0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x41, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x6f, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x48, 0x6f, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x61, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x48, 0x61, 0x73, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x1a, 0x3b, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xae, 0x03, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x6f, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x48, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x22,
	0x7f, 0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x32, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x47, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x46, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7e, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x6c, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x49, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa0, 0x03, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x44, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x45, 0x64, 0x69, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x45,
	0x64, 0x69, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xfa, 0x01, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42,
	0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x22, 0x9b, 0x02, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xbd, 0x02, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x44, 0x12, 0x51, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x6f,
	0x72, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x4a, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8a, 0x01,
	0x0a, 0x14, 0x53, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4f, 0x0a, 0x15, 0x53, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x71, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x22, 0x4c,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0xa1, 0x0d, 0x0a,
	0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x61, 0x0a, 0x14, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0c, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72,
	0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x08, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x43, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x46, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0c, 0x45, 0x64,
	0x69, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x19, 0x5a, 0x17, 0x2e, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x3b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_game_store_game_store_proto_rawDescOnce sync.Once
	file_game_store_game_store_proto_rawDescData = file_game_store_game_store_proto_rawDesc
)

func file_game_store_game_store_proto_rawDescGZIP() []byte {
	file_game_store_game_store_proto_rawDescOnce.Do(func() {
		file_game_store_game_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_store_game_store_proto_rawDescData)
	})
	return file_game_store_game_store_proto_rawDescData
}

var file_game_store_game_store_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_game_store_game_store_proto_goTypes = []interface{}{
	(*CommonResp)(nil),                // 0: game_store.CommonResp
	(*CategoryMultiLanguage)(nil),     // 1: game_store.CategoryMultiLanguage
	(*BannerGameInfo)(nil),            // 2: game_store.BannerGameInfo
	(*GameBackgroundInfo)(nil),        // 3: game_store.GameBackgroundInfo
	(*GameBackgroundListInfo)(nil),    // 4: game_store.GameBackgroundListInfo
	(*GameListInfo)(nil),              // 5: game_store.GameListInfo
	(*GameNameInfo)(nil),              // 6: game_store.GameNameInfo
	(*Categories)(nil),                // 7: game_store.Categories
	(*CategoryDetailInfo)(nil),        // 8: game_store.CategoryDetailInfo
	(*BannerGamesReq)(nil),            // 9: game_store.BannerGamesReq
	(*BannerGamesResp)(nil),           // 10: game_store.BannerGamesResp
	(*TodayRecommendationsReq)(nil),   // 11: game_store.TodayRecommendationsReq
	(*TodayRecommendationsResp)(nil),  // 12: game_store.TodayRecommendationsResp
	(*PopularGamesReq)(nil),           // 13: game_store.PopularGamesReq
	(*PopularGamesResp)(nil),          // 14: game_store.PopularGamesResp
	(*AllGamesReq)(nil),               // 15: game_store.AllGamesReq
	(*AllGamesResp)(nil),              // 16: game_store.AllGamesResp
	(*SearchNameReq)(nil),             // 17: game_store.SearchNameReq
	(*SearchNameResp)(nil),            // 18: game_store.SearchNameResp
	(*SearchGameListByNameReq)(nil),   // 19: game_store.SearchGameListByNameReq
	(*SearchGameListByNameResp)(nil),  // 20: game_store.SearchGameListByNameResp
	(*GetCategoriesReq)(nil),          // 21: game_store.GetCategoriesReq
	(*GetCategoriesResp)(nil),         // 22: game_store.GetCategoriesResp
	(*PlayGameRecordReq)(nil),         // 23: game_store.PlayGameRecordReq
	(*PlayGameRecordResp)(nil),        // 24: game_store.PlayGameRecordResp
	(*GetHistoryReq)(nil),             // 25: game_store.GetHistoryReq
	(*GetHistoryResp)(nil),            // 26: game_store.GetHistoryResp
	(*GetFavoritesReq)(nil),           // 27: game_store.GetFavoritesReq
	(*GetFavoritesResp)(nil),          // 28: game_store.GetFavoritesResp
	(*RemoveGameFavoriteReq)(nil),     // 29: game_store.RemoveGameFavoriteReq
	(*RemoveGameFavoriteResp)(nil),    // 30: game_store.RemoveGameFavoriteResp
	(*AddGameFavoriteReq)(nil),        // 31: game_store.AddGameFavoriteReq
	(*AddGameFavoriteResp)(nil),       // 32: game_store.AddGameFavoriteResp
	(*GameDetailsReq)(nil),            // 33: game_store.GameDetailsReq
	(*GameDetailsResp)(nil),           // 34: game_store.GameDetailsResp
	(*GetGameListReq)(nil),            // 35: game_store.GetGameListReq
	(*GetGameListResp)(nil),           // 36: game_store.GetGameListResp
	(*EditGameReq)(nil),               // 37: game_store.EditGameReq
	(*EditGameResp)(nil),              // 38: game_store.EditGameResp
	(*AddGameReq)(nil),                // 39: game_store.AddGameReq
	(*AddGameResp)(nil),               // 40: game_store.AddGameResp
	(*DeleteGamesReq)(nil),            // 41: game_store.DeleteGamesReq
	(*DeleteGamesResp)(nil),           // 42: game_store.DeleteGamesResp
	(*GetCategoryReq)(nil),            // 43: game_store.GetCategoryReq
	(*GetCategoryResp)(nil),           // 44: game_store.GetCategoryResp
	(*AddCategoryReq)(nil),            // 45: game_store.AddCategoryReq
	(*AddCategoryResp)(nil),           // 46: game_store.AddCategoryResp
	(*EditCategoryReq)(nil),           // 47: game_store.EditCategoryReq
	(*EditCategoryResp)(nil),          // 48: game_store.EditCategoryResp
	(*SetCategoryStatusReq)(nil),      // 49: game_store.SetCategoryStatusReq
	(*SetCategoryStatusResp)(nil),     // 50: game_store.SetCategoryStatusResp
	(*DeleteCategoryReq)(nil),         // 51: game_store.DeleteCategoryReq
	(*DeleteCategoryResp)(nil),        // 52: game_store.DeleteCategoryResp
	nil,                               // 53: game_store.CategoryMultiLanguage.CategoryEntry
	nil,                               // 54: game_store.BannerGameInfo.GameNameEntry
	nil,                               // 55: game_store.GameBackgroundInfo.GameNameEntry
	nil,                               // 56: game_store.GameBackgroundInfo.DescriptionEntry
	nil,                               // 57: game_store.GameBackgroundListInfo.GameNameEntry
	nil,                               // 58: game_store.GameBackgroundListInfo.DescriptionEntry
	nil,                               // 59: game_store.GameListInfo.GameNameEntry
	nil,                               // 60: game_store.GameNameInfo.GameNameEntry
	nil,                               // 61: game_store.Categories.DetailEntry
	nil,                               // 62: game_store.CategoryDetailInfo.CategoriesEntry
	nil,                               // 63: game_store.GameDetailsResp.GameNameEntry
	nil,                               // 64: game_store.GameDetailsResp.DescriptionEntry
	nil,                               // 65: game_store.AddCategoryReq.CategoryNameEntry
	nil,                               // 66: game_store.EditCategoryReq.CategoryNameEntry
	(*sdk_ws.RequestPagination)(nil),  // 67: server_api_params.RequestPagination
	(*sdk_ws.ResponsePagination)(nil), // 68: server_api_params.ResponsePagination
}
var file_game_store_game_store_proto_depIdxs = []int32{
	53, // 0: game_store.CategoryMultiLanguage.Category:type_name -> game_store.CategoryMultiLanguage.CategoryEntry
	54, // 1: game_store.BannerGameInfo.GameName:type_name -> game_store.BannerGameInfo.GameNameEntry
	55, // 2: game_store.GameBackgroundInfo.GameName:type_name -> game_store.GameBackgroundInfo.GameNameEntry
	56, // 3: game_store.GameBackgroundInfo.Description:type_name -> game_store.GameBackgroundInfo.DescriptionEntry
	57, // 4: game_store.GameBackgroundListInfo.GameName:type_name -> game_store.GameBackgroundListInfo.GameNameEntry
	58, // 5: game_store.GameBackgroundListInfo.Description:type_name -> game_store.GameBackgroundListInfo.DescriptionEntry
	1,  // 6: game_store.GameBackgroundListInfo.Categories:type_name -> game_store.CategoryMultiLanguage
	59, // 7: game_store.GameListInfo.GameName:type_name -> game_store.GameListInfo.GameNameEntry
	1,  // 8: game_store.GameListInfo.Categories:type_name -> game_store.CategoryMultiLanguage
	60, // 9: game_store.GameNameInfo.GameName:type_name -> game_store.GameNameInfo.GameNameEntry
	61, // 10: game_store.Categories.Detail:type_name -> game_store.Categories.DetailEntry
	62, // 11: game_store.CategoryDetailInfo.Categories:type_name -> game_store.CategoryDetailInfo.CategoriesEntry
	0,  // 12: game_store.BannerGamesResp.CommonResp:type_name -> game_store.CommonResp
	2,  // 13: game_store.BannerGamesResp.BannerGameList:type_name -> game_store.BannerGameInfo
	67, // 14: game_store.TodayRecommendationsReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 15: game_store.TodayRecommendationsResp.CommonResp:type_name -> game_store.CommonResp
	68, // 16: game_store.TodayRecommendationsResp.Pagination:type_name -> server_api_params.ResponsePagination
	5,  // 17: game_store.TodayRecommendationsResp.RecommendationGameList:type_name -> game_store.GameListInfo
	67, // 18: game_store.PopularGamesReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 19: game_store.PopularGamesResp.CommonResp:type_name -> game_store.CommonResp
	68, // 20: game_store.PopularGamesResp.Pagination:type_name -> server_api_params.ResponsePagination
	5,  // 21: game_store.PopularGamesResp.PopularGameList:type_name -> game_store.GameListInfo
	67, // 22: game_store.AllGamesReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 23: game_store.AllGamesResp.CommonResp:type_name -> game_store.CommonResp
	68, // 24: game_store.AllGamesResp.Pagination:type_name -> server_api_params.ResponsePagination
	5,  // 25: game_store.AllGamesResp.AllGameList:type_name -> game_store.GameListInfo
	0,  // 26: game_store.SearchNameResp.CommonResp:type_name -> game_store.CommonResp
	6,  // 27: game_store.SearchNameResp.GameList:type_name -> game_store.GameNameInfo
	67, // 28: game_store.SearchGameListByNameReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 29: game_store.SearchGameListByNameResp.CommonResp:type_name -> game_store.CommonResp
	68, // 30: game_store.SearchGameListByNameResp.Pagination:type_name -> server_api_params.ResponsePagination
	5,  // 31: game_store.SearchGameListByNameResp.GameList:type_name -> game_store.GameListInfo
	0,  // 32: game_store.GetCategoriesResp.CommonResp:type_name -> game_store.CommonResp
	7,  // 33: game_store.GetCategoriesResp.Categories:type_name -> game_store.Categories
	0,  // 34: game_store.PlayGameRecordResp.CommonResp:type_name -> game_store.CommonResp
	67, // 35: game_store.GetHistoryReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 36: game_store.GetHistoryResp.CommonResp:type_name -> game_store.CommonResp
	68, // 37: game_store.GetHistoryResp.Pagination:type_name -> server_api_params.ResponsePagination
	5,  // 38: game_store.GetHistoryResp.GameList:type_name -> game_store.GameListInfo
	67, // 39: game_store.GetFavoritesReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 40: game_store.GetFavoritesResp.CommonResp:type_name -> game_store.CommonResp
	68, // 41: game_store.GetFavoritesResp.Pagination:type_name -> server_api_params.ResponsePagination
	5,  // 42: game_store.GetFavoritesResp.GameList:type_name -> game_store.GameListInfo
	0,  // 43: game_store.RemoveGameFavoriteResp.CommonResp:type_name -> game_store.CommonResp
	0,  // 44: game_store.AddGameFavoriteResp.CommonResp:type_name -> game_store.CommonResp
	0,  // 45: game_store.GameDetailsResp.CommonResp:type_name -> game_store.CommonResp
	63, // 46: game_store.GameDetailsResp.GameName:type_name -> game_store.GameDetailsResp.GameNameEntry
	1,  // 47: game_store.GameDetailsResp.Categories:type_name -> game_store.CategoryMultiLanguage
	64, // 48: game_store.GameDetailsResp.Description:type_name -> game_store.GameDetailsResp.DescriptionEntry
	67, // 49: game_store.GetGameListReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 50: game_store.GetGameListResp.CommonResp:type_name -> game_store.CommonResp
	68, // 51: game_store.GetGameListResp.Pagination:type_name -> server_api_params.ResponsePagination
	4,  // 52: game_store.GetGameListResp.GameList:type_name -> game_store.GameBackgroundListInfo
	3,  // 53: game_store.EditGameReq.Game:type_name -> game_store.GameBackgroundInfo
	0,  // 54: game_store.EditGameResp.CommonResp:type_name -> game_store.CommonResp
	3,  // 55: game_store.AddGameReq.Game:type_name -> game_store.GameBackgroundInfo
	0,  // 56: game_store.AddGameResp.CommonResp:type_name -> game_store.CommonResp
	0,  // 57: game_store.DeleteGamesResp.CommonResp:type_name -> game_store.CommonResp
	67, // 58: game_store.GetCategoryReq.Pagination:type_name -> server_api_params.RequestPagination
	0,  // 59: game_store.GetCategoryResp.CommonResp:type_name -> game_store.CommonResp
	68, // 60: game_store.GetCategoryResp.Pagination:type_name -> server_api_params.ResponsePagination
	8,  // 61: game_store.GetCategoryResp.CategoryList:type_name -> game_store.CategoryDetailInfo
	65, // 62: game_store.AddCategoryReq.CategoryName:type_name -> game_store.AddCategoryReq.CategoryNameEntry
	0,  // 63: game_store.AddCategoryResp.CommonResp:type_name -> game_store.CommonResp
	66, // 64: game_store.EditCategoryReq.CategoryName:type_name -> game_store.EditCategoryReq.CategoryNameEntry
	0,  // 65: game_store.EditCategoryResp.CommonResp:type_name -> game_store.CommonResp
	0,  // 66: game_store.SetCategoryStatusResp.CommonResp:type_name -> game_store.CommonResp
	0,  // 67: game_store.DeleteCategoryResp.CommonResp:type_name -> game_store.CommonResp
	9,  // 68: game_store.GameStore.BannerGames:input_type -> game_store.BannerGamesReq
	11, // 69: game_store.GameStore.TodayRecommendations:input_type -> game_store.TodayRecommendationsReq
	13, // 70: game_store.GameStore.PopularGames:input_type -> game_store.PopularGamesReq
	15, // 71: game_store.GameStore.AllGames:input_type -> game_store.AllGamesReq
	17, // 72: game_store.GameStore.SearchName:input_type -> game_store.SearchNameReq
	19, // 73: game_store.GameStore.SearchGameListByName:input_type -> game_store.SearchGameListByNameReq
	21, // 74: game_store.GameStore.GetCategories:input_type -> game_store.GetCategoriesReq
	23, // 75: game_store.GameStore.PlayGameRecord:input_type -> game_store.PlayGameRecordReq
	25, // 76: game_store.GameStore.GetHistory:input_type -> game_store.GetHistoryReq
	27, // 77: game_store.GameStore.GetFavorites:input_type -> game_store.GetFavoritesReq
	29, // 78: game_store.GameStore.RemoveGameFavorite:input_type -> game_store.RemoveGameFavoriteReq
	31, // 79: game_store.GameStore.AddGameFavorite:input_type -> game_store.AddGameFavoriteReq
	33, // 80: game_store.GameStore.GameDetails:input_type -> game_store.GameDetailsReq
	35, // 81: game_store.GameStore.GetGameList:input_type -> game_store.GetGameListReq
	37, // 82: game_store.GameStore.EditGame:input_type -> game_store.EditGameReq
	39, // 83: game_store.GameStore.AddGame:input_type -> game_store.AddGameReq
	41, // 84: game_store.GameStore.DeleteGames:input_type -> game_store.DeleteGamesReq
	45, // 85: game_store.GameStore.AddCategory:input_type -> game_store.AddCategoryReq
	43, // 86: game_store.GameStore.GetCategory:input_type -> game_store.GetCategoryReq
	47, // 87: game_store.GameStore.EditCategory:input_type -> game_store.EditCategoryReq
	49, // 88: game_store.GameStore.SetCategoryStatus:input_type -> game_store.SetCategoryStatusReq
	51, // 89: game_store.GameStore.DeleteCategory:input_type -> game_store.DeleteCategoryReq
	10, // 90: game_store.GameStore.BannerGames:output_type -> game_store.BannerGamesResp
	12, // 91: game_store.GameStore.TodayRecommendations:output_type -> game_store.TodayRecommendationsResp
	14, // 92: game_store.GameStore.PopularGames:output_type -> game_store.PopularGamesResp
	16, // 93: game_store.GameStore.AllGames:output_type -> game_store.AllGamesResp
	18, // 94: game_store.GameStore.SearchName:output_type -> game_store.SearchNameResp
	20, // 95: game_store.GameStore.SearchGameListByName:output_type -> game_store.SearchGameListByNameResp
	22, // 96: game_store.GameStore.GetCategories:output_type -> game_store.GetCategoriesResp
	24, // 97: game_store.GameStore.PlayGameRecord:output_type -> game_store.PlayGameRecordResp
	26, // 98: game_store.GameStore.GetHistory:output_type -> game_store.GetHistoryResp
	28, // 99: game_store.GameStore.GetFavorites:output_type -> game_store.GetFavoritesResp
	30, // 100: game_store.GameStore.RemoveGameFavorite:output_type -> game_store.RemoveGameFavoriteResp
	32, // 101: game_store.GameStore.AddGameFavorite:output_type -> game_store.AddGameFavoriteResp
	34, // 102: game_store.GameStore.GameDetails:output_type -> game_store.GameDetailsResp
	36, // 103: game_store.GameStore.GetGameList:output_type -> game_store.GetGameListResp
	38, // 104: game_store.GameStore.EditGame:output_type -> game_store.EditGameResp
	40, // 105: game_store.GameStore.AddGame:output_type -> game_store.AddGameResp
	42, // 106: game_store.GameStore.DeleteGames:output_type -> game_store.DeleteGamesResp
	46, // 107: game_store.GameStore.AddCategory:output_type -> game_store.AddCategoryResp
	44, // 108: game_store.GameStore.GetCategory:output_type -> game_store.GetCategoryResp
	48, // 109: game_store.GameStore.EditCategory:output_type -> game_store.EditCategoryResp
	50, // 110: game_store.GameStore.SetCategoryStatus:output_type -> game_store.SetCategoryStatusResp
	52, // 111: game_store.GameStore.DeleteCategory:output_type -> game_store.DeleteCategoryResp
	90, // [90:112] is the sub-list for method output_type
	68, // [68:90] is the sub-list for method input_type
	68, // [68:68] is the sub-list for extension type_name
	68, // [68:68] is the sub-list for extension extendee
	0,  // [0:68] is the sub-list for field type_name
}

func init() { file_game_store_game_store_proto_init() }
func file_game_store_game_store_proto_init() {
	if File_game_store_game_store_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_store_game_store_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryMultiLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameBackgroundInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameBackgroundListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameNameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Categories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerGamesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerGamesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TodayRecommendationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TodayRecommendationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PopularGamesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PopularGamesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllGamesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllGamesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGameListByNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGameListByNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoriesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoriesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayGameRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayGameRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFavoritesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFavoritesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGameFavoriteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGameFavoriteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGameFavoriteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGameFavoriteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGamesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGamesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCategoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditCategoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCategoryStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCategoryStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_store_game_store_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCategoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_store_game_store_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_game_store_game_store_proto_goTypes,
		DependencyIndexes: file_game_store_game_store_proto_depIdxs,
		MessageInfos:      file_game_store_game_store_proto_msgTypes,
	}.Build()
	File_game_store_game_store_proto = out.File
	file_game_store_game_store_proto_rawDesc = nil
	file_game_store_game_store_proto_goTypes = nil
	file_game_store_game_store_proto_depIdxs = nil
}
